From: <Saved by Blink>
Snapshot-Content-Location: https://www.django-rest-framework.org/api-guide/filtering/
Subject: Filtering - Django REST framework
Date: Sat, 19 Mar 2022 19:12:35 -0000
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--hLXCg58VmOUhCLwQaH490C7Jb0LYqV2sbGnXH2cWYK----"


------MultipartBoundary--hLXCg58VmOUhCLwQaH490C7Jb0LYqV2sbGnXH2cWYK----
Content-Type: text/html
Content-ID: <frame-5C47E6B6D6DF34157F35D2C3AB09ABF3@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: https://www.django-rest-framework.org/api-guide/filtering/

<!DOCTYPE html><html lang=3D"en"><head><meta http-equiv=3D"Content-Type" co=
ntent=3D"text/html; charset=3DUTF-8"><link rel=3D"stylesheet" type=3D"text/=
css" href=3D"cid:css-08d9537b-077f-4c83-b966-7923451ecc74@mhtml.blink" />
 =20
 =20
  <title>Filtering - Django REST framework</title>
  <link href=3D"https://www.django-rest-framework.org/img/favicon.ico" rel=
=3D"icon" type=3D"image/x-icon">
  <link rel=3D"canonical" href=3D"https://www.django-rest-framework.org/api=
-guide/filtering/">
  <meta name=3D"viewport" content=3D"width=3Ddevice-width, initial-scale=3D=
1.0">
  <meta name=3D"description" content=3D"Django, API, REST, Filtering">
  <meta name=3D"author" content=3D"Tom Christie">

  <!-- Le styles -->
  <link href=3D"https://www.django-rest-framework.org/css/prettify.css" rel=
=3D"stylesheet">
  <link href=3D"https://www.django-rest-framework.org/css/bootstrap.css" re=
l=3D"stylesheet">
  <link href=3D"https://www.django-rest-framework.org/css/bootstrap-respons=
ive.css" rel=3D"stylesheet">
  <link href=3D"https://www.django-rest-framework.org/css/default.css" rel=
=3D"stylesheet">


 =20

 =20
</head>
<body class=3D"-page">

  <div class=3D"wrapper">
        <div class=3D"navbar navbar-inverse navbar-fixed-top">
      <div class=3D"navbar-inner">
        <div class=3D"container-fluid">
          <a class=3D"repo-link btn btn-primary btn-small" href=3D"https://=
github.com/encode/django-rest-framework/tree/master">GitHub</a>
          <a class=3D"repo-link btn btn-inverse btn-small " rel=3D"next" hr=
ef=3D"https://www.django-rest-framework.org/api-guide/pagination/">
            Next <i class=3D"icon-arrow-right icon-white"></i>
          </a>
          <a class=3D"repo-link btn btn-inverse btn-small " rel=3D"prev" hr=
ef=3D"https://www.django-rest-framework.org/api-guide/throttling/">
            <i class=3D"icon-arrow-left icon-white"></i> Previous
          </a>
          <a id=3D"search_modal_show" class=3D"repo-link btn btn-inverse bt=
n-small" href=3D"https://www.django-rest-framework.org/api-guide/filtering/=
#mkdocs_search_modal" data-toggle=3D"modal" data-target=3D"#mkdocs_search_m=
odal"><i class=3D"icon-search icon-white"></i> Search</a>
          <a class=3D"btn btn-navbar" data-toggle=3D"collapse" data-target=
=3D".nav-collapse">
            <span class=3D"icon-bar"></span>
            <span class=3D"icon-bar"></span>
            <span class=3D"icon-bar"></span>
          </a>
          <a class=3D"brand" href=3D"https://www.django-rest-framework.org/=
">Django REST framework</a>
          <div class=3D"nav-collapse collapse">
           =20
            <!-- Main navigation -->
            <ul class=3D"nav navbar-nav">
              =20
              <li>
                <a href=3D"https://www.django-rest-framework.org/">Home</a>
              </li>
               =20
              <li class=3D"dropdown">
                <a href=3D"https://www.django-rest-framework.org/api-guide/=
filtering/#" class=3D"dropdown-toggle" data-toggle=3D"dropdown">Tutorial <b=
 class=3D"caret"></b></a>
                <ul class=3D"dropdown-menu" style=3D"max-height: 365px;">
                 =20
                  <li>
                    <a href=3D"https://www.django-rest-framework.org/tutori=
al/quickstart/">Quickstart</a>
                  </li>
                 =20
                  <li>
                    <a href=3D"https://www.django-rest-framework.org/tutori=
al/1-serialization/">1 - Serialization</a>
                  </li>
                 =20
                  <li>
                    <a href=3D"https://www.django-rest-framework.org/tutori=
al/2-requests-and-responses/">2 - Requests and responses</a>
                  </li>
                 =20
                  <li>
                    <a href=3D"https://www.django-rest-framework.org/tutori=
al/3-class-based-views/">3 - Class based views</a>
                  </li>
                 =20
                  <li>
                    <a href=3D"https://www.django-rest-framework.org/tutori=
al/4-authentication-and-permissions/">4 - Authentication and permissions</a=
>
                  </li>
                 =20
                  <li>
                    <a href=3D"https://www.django-rest-framework.org/tutori=
al/5-relationships-and-hyperlinked-apis/">5 - Relationships and hyperlinked=
 APIs</a>
                  </li>
                 =20
                  <li>
                    <a href=3D"https://www.django-rest-framework.org/tutori=
al/6-viewsets-and-routers/">6 - Viewsets and routers</a>
                  </li>
                 =20
                </ul>
              </li>
               =20
              <li class=3D"dropdown active">
                <a href=3D"https://www.django-rest-framework.org/api-guide/=
filtering/#" class=3D"dropdown-toggle" data-toggle=3D"dropdown">API Guide <=
b class=3D"caret"></b></a>
                <ul class=3D"dropdown-menu" style=3D"max-height: 365px;">
                 =20
                  <li>
                    <a href=3D"https://www.django-rest-framework.org/api-gu=
ide/requests/">Requests</a>
                  </li>
                 =20
                  <li>
                    <a href=3D"https://www.django-rest-framework.org/api-gu=
ide/responses/">Responses</a>
                  </li>
                 =20
                  <li>
                    <a href=3D"https://www.django-rest-framework.org/api-gu=
ide/views/">Views</a>
                  </li>
                 =20
                  <li>
                    <a href=3D"https://www.django-rest-framework.org/api-gu=
ide/generic-views/">Generic views</a>
                  </li>
                 =20
                  <li>
                    <a href=3D"https://www.django-rest-framework.org/api-gu=
ide/viewsets/">Viewsets</a>
                  </li>
                 =20
                  <li>
                    <a href=3D"https://www.django-rest-framework.org/api-gu=
ide/routers/">Routers</a>
                  </li>
                 =20
                  <li>
                    <a href=3D"https://www.django-rest-framework.org/api-gu=
ide/parsers/">Parsers</a>
                  </li>
                 =20
                  <li>
                    <a href=3D"https://www.django-rest-framework.org/api-gu=
ide/renderers/">Renderers</a>
                  </li>
                 =20
                  <li>
                    <a href=3D"https://www.django-rest-framework.org/api-gu=
ide/serializers/">Serializers</a>
                  </li>
                 =20
                  <li>
                    <a href=3D"https://www.django-rest-framework.org/api-gu=
ide/fields/">Serializer fields</a>
                  </li>
                 =20
                  <li>
                    <a href=3D"https://www.django-rest-framework.org/api-gu=
ide/relations/">Serializer relations</a>
                  </li>
                 =20
                  <li>
                    <a href=3D"https://www.django-rest-framework.org/api-gu=
ide/validators/">Validators</a>
                  </li>
                 =20
                  <li>
                    <a href=3D"https://www.django-rest-framework.org/api-gu=
ide/authentication/">Authentication</a>
                  </li>
                 =20
                  <li>
                    <a href=3D"https://www.django-rest-framework.org/api-gu=
ide/permissions/">Permissions</a>
                  </li>
                 =20
                  <li>
                    <a href=3D"https://www.django-rest-framework.org/api-gu=
ide/caching/">Caching</a>
                  </li>
                 =20
                  <li>
                    <a href=3D"https://www.django-rest-framework.org/api-gu=
ide/throttling/">Throttling</a>
                  </li>
                 =20
                  <li class=3D"active">
                    <a href=3D"https://www.django-rest-framework.org/api-gu=
ide/filtering/">Filtering</a>
                  </li>
                 =20
                  <li>
                    <a href=3D"https://www.django-rest-framework.org/api-gu=
ide/pagination/">Pagination</a>
                  </li>
                 =20
                  <li>
                    <a href=3D"https://www.django-rest-framework.org/api-gu=
ide/versioning/">Versioning</a>
                  </li>
                 =20
                  <li>
                    <a href=3D"https://www.django-rest-framework.org/api-gu=
ide/content-negotiation/">Content negotiation</a>
                  </li>
                 =20
                  <li>
                    <a href=3D"https://www.django-rest-framework.org/api-gu=
ide/metadata/">Metadata</a>
                  </li>
                 =20
                  <li>
                    <a href=3D"https://www.django-rest-framework.org/api-gu=
ide/schemas/">Schemas</a>
                  </li>
                 =20
                  <li>
                    <a href=3D"https://www.django-rest-framework.org/api-gu=
ide/format-suffixes/">Format suffixes</a>
                  </li>
                 =20
                  <li>
                    <a href=3D"https://www.django-rest-framework.org/api-gu=
ide/reverse/">Returning URLs</a>
                  </li>
                 =20
                  <li>
                    <a href=3D"https://www.django-rest-framework.org/api-gu=
ide/exceptions/">Exceptions</a>
                  </li>
                 =20
                  <li>
                    <a href=3D"https://www.django-rest-framework.org/api-gu=
ide/status-codes/">Status codes</a>
                  </li>
                 =20
                  <li>
                    <a href=3D"https://www.django-rest-framework.org/api-gu=
ide/testing/">Testing</a>
                  </li>
                 =20
                  <li>
                    <a href=3D"https://www.django-rest-framework.org/api-gu=
ide/settings/">Settings</a>
                  </li>
                 =20
                </ul>
              </li>
               =20
              <li class=3D"dropdown">
                <a href=3D"https://www.django-rest-framework.org/api-guide/=
filtering/#" class=3D"dropdown-toggle" data-toggle=3D"dropdown">Topics <b c=
lass=3D"caret"></b></a>
                <ul class=3D"dropdown-menu" style=3D"max-height: 365px;">
                 =20
                  <li>
                    <a href=3D"https://www.django-rest-framework.org/topics=
/documenting-your-api/">Documenting your API</a>
                  </li>
                 =20
                  <li>
                    <a href=3D"https://www.django-rest-framework.org/topics=
/api-clients/">API Clients</a>
                  </li>
                 =20
                  <li>
                    <a href=3D"https://www.django-rest-framework.org/topics=
/internationalization/">Internationalization</a>
                  </li>
                 =20
                  <li>
                    <a href=3D"https://www.django-rest-framework.org/topics=
/ajax-csrf-cors/">AJAX, CSRF &amp; CORS</a>
                  </li>
                 =20
                  <li>
                    <a href=3D"https://www.django-rest-framework.org/topics=
/html-and-forms/">HTML &amp; Forms</a>
                  </li>
                 =20
                  <li>
                    <a href=3D"https://www.django-rest-framework.org/topics=
/browser-enhancements/">Browser Enhancements</a>
                  </li>
                 =20
                  <li>
                    <a href=3D"https://www.django-rest-framework.org/topics=
/browsable-api/">The Browsable API</a>
                  </li>
                 =20
                  <li>
                    <a href=3D"https://www.django-rest-framework.org/topics=
/rest-hypermedia-hateoas/">REST, Hypermedia &amp; HATEOAS</a>
                  </li>
                 =20
                </ul>
              </li>
               =20
              <li class=3D"dropdown">
                <a href=3D"https://www.django-rest-framework.org/api-guide/=
filtering/#" class=3D"dropdown-toggle" data-toggle=3D"dropdown">Community <=
b class=3D"caret"></b></a>
                <ul class=3D"dropdown-menu" style=3D"max-height: 365px;">
                 =20
                  <li>
                    <a href=3D"https://www.django-rest-framework.org/commun=
ity/tutorials-and-resources/">Tutorials and Resources</a>
                  </li>
                 =20
                  <li>
                    <a href=3D"https://www.django-rest-framework.org/commun=
ity/third-party-packages/">Third Party Packages</a>
                  </li>
                 =20
                  <li>
                    <a href=3D"https://www.django-rest-framework.org/commun=
ity/contributing/">Contributing to REST framework</a>
                  </li>
                 =20
                  <li>
                    <a href=3D"https://www.django-rest-framework.org/commun=
ity/project-management/">Project management</a>
                  </li>
                 =20
                  <li>
                    <a href=3D"https://www.django-rest-framework.org/commun=
ity/release-notes/">Release Notes</a>
                  </li>
                 =20
                  <li>
                    <a href=3D"https://www.django-rest-framework.org/commun=
ity/3.13-announcement/">3.13 Announcement</a>
                  </li>
                 =20
                  <li>
                    <a href=3D"https://www.django-rest-framework.org/commun=
ity/3.12-announcement/">3.12 Announcement</a>
                  </li>
                 =20
                  <li>
                    <a href=3D"https://www.django-rest-framework.org/commun=
ity/3.11-announcement/">3.11 Announcement</a>
                  </li>
                 =20
                  <li>
                    <a href=3D"https://www.django-rest-framework.org/commun=
ity/3.10-announcement/">3.10 Announcement</a>
                  </li>
                 =20
                  <li>
                    <a href=3D"https://www.django-rest-framework.org/commun=
ity/3.9-announcement/">3.9 Announcement</a>
                  </li>
                 =20
                  <li>
                    <a href=3D"https://www.django-rest-framework.org/commun=
ity/3.8-announcement/">3.8 Announcement</a>
                  </li>
                 =20
                  <li>
                    <a href=3D"https://www.django-rest-framework.org/commun=
ity/3.7-announcement/">3.7 Announcement</a>
                  </li>
                 =20
                  <li>
                    <a href=3D"https://www.django-rest-framework.org/commun=
ity/3.6-announcement/">3.6 Announcement</a>
                  </li>
                 =20
                  <li>
                    <a href=3D"https://www.django-rest-framework.org/commun=
ity/3.5-announcement/">3.5 Announcement</a>
                  </li>
                 =20
                  <li>
                    <a href=3D"https://www.django-rest-framework.org/commun=
ity/3.4-announcement/">3.4 Announcement</a>
                  </li>
                 =20
                  <li>
                    <a href=3D"https://www.django-rest-framework.org/commun=
ity/3.3-announcement/">3.3 Announcement</a>
                  </li>
                 =20
                  <li>
                    <a href=3D"https://www.django-rest-framework.org/commun=
ity/3.2-announcement/">3.2 Announcement</a>
                  </li>
                 =20
                  <li>
                    <a href=3D"https://www.django-rest-framework.org/commun=
ity/3.1-announcement/">3.1 Announcement</a>
                  </li>
                 =20
                  <li>
                    <a href=3D"https://www.django-rest-framework.org/commun=
ity/3.0-announcement/">3.0 Announcement</a>
                  </li>
                 =20
                  <li>
                    <a href=3D"https://www.django-rest-framework.org/commun=
ity/kickstarter-announcement/">Kickstarter Announcement</a>
                  </li>
                 =20
                  <li>
                    <a href=3D"https://www.django-rest-framework.org/commun=
ity/mozilla-grant/">Mozilla Grant</a>
                  </li>
                 =20
                  <li>
                    <a href=3D"https://www.django-rest-framework.org/commun=
ity/funding/">Funding</a>
                  </li>
                 =20
                  <li>
                    <a href=3D"https://www.django-rest-framework.org/commun=
ity/jobs/">Jobs</a>
                  </li>
                 =20
                </ul>
              </li>
              =20

            </ul>
           =20
          </div>
          <!--/.nav-collapse -->

        </div>
      </div>
    </div>

    <div class=3D"body-content">
      <div class=3D"container-fluid">
        <!-- Search Modal -->
        <div id=3D"mkdocs_search_modal" class=3D"modal hide fade" tabindex=
=3D"-1" role=3D"dialog" aria-labelledby=3D"myModalLabel" aria-hidden=3D"tru=
e">
          <div class=3D"modal-header">
            <button type=3D"button" class=3D"close" data-dismiss=3D"modal" =
aria-hidden=3D"true">=C3=97</button>
            <h3 id=3D"myModalLabel">Documentation search</h3>
          </div>

          <div class=3D"modal-body">
            <form role=3D"form" autocomplete=3D"off">
              <div class=3D"form-group">
                <input type=3D"text" name=3D"q" class=3D"form-control" plac=
eholder=3D"Search..." id=3D"mkdocs-search-query">
              </div>
            </form>
            <div id=3D"mkdocs-search-results"></div>
          </div>

          <div class=3D"modal-footer">
            <button class=3D"btn" data-dismiss=3D"modal" aria-hidden=3D"tru=
e">Close</button>
          </div>
        </div>

        <div class=3D"row-fluid">
          <div class=3D"span3">
            <div id=3D"table-of-contents">
              <ul class=3D"nav nav-list side-nav well sidebar-nav-fixed" st=
yle=3D"max-height: 365px;">
               =20

               =20
                  <li class=3D"main">
                    <a href=3D"https://www.django-rest-framework.org/api-gu=
ide/filtering/#filtering">Filtering</a>
                  </li>

                 =20
                    <li>
                      <a href=3D"https://www.django-rest-framework.org/api-=
guide/filtering/#filtering-against-the-current-user">Filtering against the =
current user</a>
                    </li>
                 =20
                    <li>
                      <a href=3D"https://www.django-rest-framework.org/api-=
guide/filtering/#filtering-against-the-url">Filtering against the URL</a>
                    </li>
                 =20
                    <li>
                      <a href=3D"https://www.django-rest-framework.org/api-=
guide/filtering/#filtering-against-query-parameters">Filtering against quer=
y parameters</a>
                    </li>
                 =20
               =20
                  <li class=3D"main">
                    <a href=3D"https://www.django-rest-framework.org/api-gu=
ide/filtering/#generic-filtering">Generic Filtering</a>
                  </li>

                 =20
                    <li>
                      <a href=3D"https://www.django-rest-framework.org/api-=
guide/filtering/#setting-filter-backends">Setting filter backends</a>
                    </li>
                 =20
                    <li>
                      <a href=3D"https://www.django-rest-framework.org/api-=
guide/filtering/#filtering-and-object-lookups">Filtering and object lookups=
</a>
                    </li>
                 =20
                    <li>
                      <a href=3D"https://www.django-rest-framework.org/api-=
guide/filtering/#overriding-the-initial-queryset">Overriding the initial qu=
eryset</a>
                    </li>
                 =20
               =20
                  <li class=3D"main">
                    <a href=3D"https://www.django-rest-framework.org/api-gu=
ide/filtering/#api-guide">API Guide</a>
                  </li>

                 =20
                    <li>
                      <a href=3D"https://www.django-rest-framework.org/api-=
guide/filtering/#djangofilterbackend">DjangoFilterBackend</a>
                    </li>
                 =20
                    <li>
                      <a href=3D"https://www.django-rest-framework.org/api-=
guide/filtering/#searchfilter">SearchFilter</a>
                    </li>
                 =20
                    <li>
                      <a href=3D"https://www.django-rest-framework.org/api-=
guide/filtering/#orderingfilter">OrderingFilter</a>
                    </li>
                 =20
               =20
                  <li class=3D"main">
                    <a href=3D"https://www.django-rest-framework.org/api-gu=
ide/filtering/#custom-generic-filtering">Custom generic filtering</a>
                  </li>

                 =20
                    <li>
                      <a href=3D"https://www.django-rest-framework.org/api-=
guide/filtering/#example">Example</a>
                    </li>
                 =20
                    <li>
                      <a href=3D"https://www.django-rest-framework.org/api-=
guide/filtering/#customizing-the-interface">Customizing the interface</a>
                    </li>
                 =20
                    <li>
                      <a href=3D"https://www.django-rest-framework.org/api-=
guide/filtering/#filtering-schemas">Filtering &amp; schemas</a>
                    </li>
                 =20
               =20
                  <li class=3D"main">
                    <a href=3D"https://www.django-rest-framework.org/api-gu=
ide/filtering/#third-party-packages">Third party packages</a>
                  </li>

                 =20
                    <li>
                      <a href=3D"https://www.django-rest-framework.org/api-=
guide/filtering/#django-rest-framework-filters-package">Django REST framewo=
rk filters package</a>
                    </li>
                 =20
                    <li>
                      <a href=3D"https://www.django-rest-framework.org/api-=
guide/filtering/#django-rest-framework-full-word-search-filter">Django REST=
 framework full word search filter</a>
                    </li>
                 =20
                    <li>
                      <a href=3D"https://www.django-rest-framework.org/api-=
guide/filtering/#django-url-filter">Django URL Filter</a>
                    </li>
                 =20
                    <li>
                      <a href=3D"https://www.django-rest-framework.org/api-=
guide/filtering/#drf-url-filters">drf-url-filters</a>
                    </li>
                 =20
               =20

                  <div class=3D"promo">
                    <hr>
                    <div id=3D"sidebarInclude"><a href=3D"https://amazatic.=
com/?utm_source=3Ddrf-web"><img width=3D"130px" src=3D"https://fund-rest-fr=
amework.s3.amazonaws.com/Amazatic-Logo.png"></a><p><a class=3D"promo" href=
=3D"https://amazatic.com/?utm_source=3Ddrf-web">We are developing outstandi=
ng, scalable digital products since 2010. We focus on scalability, performa=
nce, security, &amp; usability. Click here to know more about us, we are Am=
azatic.</a></p><p><a href=3D"https://fund.django-rest-framework.org/topics/=
funding/">Fund Django REST framework</a></p></div>
              </div></ul>

            </div>
          </div>

          <div id=3D"main-content" class=3D"span9">
           =20
             =20
               =20
                  <a class=3D"github" href=3D"https://github.com/encode/dja=
ngo-rest-framework/tree/master/rest_framework/filters.py">
                    <span class=3D"label label-info">filters.py</span>
                  </a>
               =20
             =20

              <h1 id=3D"filtering"><a class=3D"toclink" href=3D"https://www=
.django-rest-framework.org/api-guide/filtering/#filtering">Filtering</a></h=
1>
<blockquote>
<p>The root QuerySet provided by the Manager describes all objects in the d=
atabase table.  Usually, though, you'll need to select only a subset of the=
 complete set of objects.</p>
<p>=E2=80=94 <a href=3D"https://docs.djangoproject.com/en/stable/topics/db/=
queries/#retrieving-specific-objects-with-filters">Django documentation</a>=
</p>
</blockquote>
<p>The default behavior of REST framework's generic list views is to return=
 the entire queryset for a model manager.  Often you will want your API to =
restrict the items that are returned by the queryset.</p>
<p>The simplest way to filter the queryset of any view that subclasses <cod=
e>GenericAPIView</code> is to override the <code>.get_queryset()</code> met=
hod.</p>
<p>Overriding this method allows you to customize the queryset returned by =
the view in a number of different ways.</p>
<h2 id=3D"filtering-against-the-current-user"><a class=3D"toclink" href=3D"=
https://www.django-rest-framework.org/api-guide/filtering/#filtering-agains=
t-the-current-user">Filtering against the current user</a></h2>
<p>You might want to filter the queryset to ensure that only results releva=
nt to the currently authenticated user making the request are returned.</p>
<p>You can do so by filtering based on the value of <code>request.user</cod=
e>.</p>
<p>For example:</p>
<pre class=3D"prettyprint well"><code><span class=3D"kwd">from</span><span =
class=3D"pln"> myapp</span><span class=3D"pun">.</span><span class=3D"pln">=
models </span><span class=3D"kwd">import</span><span class=3D"pln"> </span>=
<span class=3D"typ">Purchase</span><span class=3D"pln">
</span><span class=3D"kwd">from</span><span class=3D"pln"> myapp</span><spa=
n class=3D"pun">.</span><span class=3D"pln">serializers </span><span class=
=3D"kwd">import</span><span class=3D"pln"> </span><span class=3D"typ">Purch=
aseSerializer</span><span class=3D"pln">
</span><span class=3D"kwd">from</span><span class=3D"pln"> rest_framework <=
/span><span class=3D"kwd">import</span><span class=3D"pln"> generics

</span><span class=3D"kwd">class</span><span class=3D"pln"> </span><span cl=
ass=3D"typ">PurchaseList</span><span class=3D"pun">(</span><span class=3D"p=
ln">generics</span><span class=3D"pun">.</span><span class=3D"typ">ListAPIV=
iew</span><span class=3D"pun">):</span><span class=3D"pln">
    serializer_class </span><span class=3D"pun">=3D</span><span class=3D"pl=
n"> </span><span class=3D"typ">PurchaseSerializer</span><span class=3D"pln"=
>

    </span><span class=3D"kwd">def</span><span class=3D"pln"> get_queryset<=
/span><span class=3D"pun">(</span><span class=3D"kwd">self</span><span clas=
s=3D"pun">):</span><span class=3D"pln">
        </span><span class=3D"str">"""
        This view should return a list of all the purchases
        for the currently authenticated user.
        """</span><span class=3D"pln">
        user </span><span class=3D"pun">=3D</span><span class=3D"pln"> </sp=
an><span class=3D"kwd">self</span><span class=3D"pun">.</span><span class=
=3D"pln">request</span><span class=3D"pun">.</span><span class=3D"pln">user
        </span><span class=3D"kwd">return</span><span class=3D"pln"> </span=
><span class=3D"typ">Purchase</span><span class=3D"pun">.</span><span class=
=3D"pln">objects</span><span class=3D"pun">.</span><span class=3D"pln">filt=
er</span><span class=3D"pun">(</span><span class=3D"pln">purchaser</span><s=
pan class=3D"pun">=3D</span><span class=3D"pln">user</span><span class=3D"p=
un">)</span></code></pre>
<h2 id=3D"filtering-against-the-url"><a class=3D"toclink" href=3D"https://w=
ww.django-rest-framework.org/api-guide/filtering/#filtering-against-the-url=
">Filtering against the URL</a></h2>
<p>Another style of filtering might involve restricting the queryset based =
on some part of the URL.</p>
<p>For example if your URL config contained an entry like this:</p>
<pre class=3D"prettyprint well"><code><span class=3D"pln">re_path</span><sp=
an class=3D"pun">(</span><span class=3D"str">'^purchases/(?P&lt;username&gt=
;.+)/$'</span><span class=3D"pun">,</span><span class=3D"pln"> </span><span=
 class=3D"typ">PurchaseList</span><span class=3D"pun">.</span><span class=
=3D"pln">as_view</span><span class=3D"pun">()),</span></code></pre>
<p>You could then write a view that returned a purchase queryset filtered b=
y the username portion of the URL:</p>
<pre class=3D"prettyprint well"><code><span class=3D"kwd">class</span><span=
 class=3D"pln"> </span><span class=3D"typ">PurchaseList</span><span class=
=3D"pun">(</span><span class=3D"pln">generics</span><span class=3D"pun">.</=
span><span class=3D"typ">ListAPIView</span><span class=3D"pun">):</span><sp=
an class=3D"pln">
    serializer_class </span><span class=3D"pun">=3D</span><span class=3D"pl=
n"> </span><span class=3D"typ">PurchaseSerializer</span><span class=3D"pln"=
>

    </span><span class=3D"kwd">def</span><span class=3D"pln"> get_queryset<=
/span><span class=3D"pun">(</span><span class=3D"kwd">self</span><span clas=
s=3D"pun">):</span><span class=3D"pln">
        </span><span class=3D"str">"""
        This view should return a list of all the purchases for
        the user as determined by the username portion of the URL.
        """</span><span class=3D"pln">
        username </span><span class=3D"pun">=3D</span><span class=3D"pln"> =
</span><span class=3D"kwd">self</span><span class=3D"pun">.</span><span cla=
ss=3D"pln">kwargs</span><span class=3D"pun">[</span><span class=3D"str">'us=
ername'</span><span class=3D"pun">]</span><span class=3D"pln">
        </span><span class=3D"kwd">return</span><span class=3D"pln"> </span=
><span class=3D"typ">Purchase</span><span class=3D"pun">.</span><span class=
=3D"pln">objects</span><span class=3D"pun">.</span><span class=3D"pln">filt=
er</span><span class=3D"pun">(</span><span class=3D"pln">purchaser__usernam=
e</span><span class=3D"pun">=3D</span><span class=3D"pln">username</span><s=
pan class=3D"pun">)</span></code></pre>
<h2 id=3D"filtering-against-query-parameters"><a class=3D"toclink" href=3D"=
https://www.django-rest-framework.org/api-guide/filtering/#filtering-agains=
t-query-parameters">Filtering against query parameters</a></h2>
<p>A final example of filtering the initial queryset would be to determine =
the initial queryset based on query parameters in the url.</p>
<p>We can override <code>.get_queryset()</code> to deal with URLs such as <=
code>http://example.com/api/purchases?username=3Ddenvercoder9</code>, and f=
ilter the queryset only if the <code>username</code> parameter is included =
in the URL:</p>
<pre class=3D"prettyprint well"><code><span class=3D"kwd">class</span><span=
 class=3D"pln"> </span><span class=3D"typ">PurchaseList</span><span class=
=3D"pun">(</span><span class=3D"pln">generics</span><span class=3D"pun">.</=
span><span class=3D"typ">ListAPIView</span><span class=3D"pun">):</span><sp=
an class=3D"pln">
    serializer_class </span><span class=3D"pun">=3D</span><span class=3D"pl=
n"> </span><span class=3D"typ">PurchaseSerializer</span><span class=3D"pln"=
>

    </span><span class=3D"kwd">def</span><span class=3D"pln"> get_queryset<=
/span><span class=3D"pun">(</span><span class=3D"kwd">self</span><span clas=
s=3D"pun">):</span><span class=3D"pln">
        </span><span class=3D"str">"""
        Optionally restricts the returned purchases to a given user,
        by filtering against a `username` query parameter in the URL.
        """</span><span class=3D"pln">
        queryset </span><span class=3D"pun">=3D</span><span class=3D"pln"> =
</span><span class=3D"typ">Purchase</span><span class=3D"pun">.</span><span=
 class=3D"pln">objects</span><span class=3D"pun">.</span><span class=3D"pln=
">all</span><span class=3D"pun">()</span><span class=3D"pln">
        username </span><span class=3D"pun">=3D</span><span class=3D"pln"> =
</span><span class=3D"kwd">self</span><span class=3D"pun">.</span><span cla=
ss=3D"pln">request</span><span class=3D"pun">.</span><span class=3D"pln">qu=
ery_params</span><span class=3D"pun">.</span><span class=3D"kwd">get</span>=
<span class=3D"pun">(</span><span class=3D"str">'username'</span><span clas=
s=3D"pun">)</span><span class=3D"pln">
        </span><span class=3D"kwd">if</span><span class=3D"pln"> username <=
/span><span class=3D"kwd">is</span><span class=3D"pln"> </span><span class=
=3D"kwd">not</span><span class=3D"pln"> </span><span class=3D"kwd">None</sp=
an><span class=3D"pun">:</span><span class=3D"pln">
            queryset </span><span class=3D"pun">=3D</span><span class=3D"pl=
n"> queryset</span><span class=3D"pun">.</span><span class=3D"pln">filter</=
span><span class=3D"pun">(</span><span class=3D"pln">purchaser__username</s=
pan><span class=3D"pun">=3D</span><span class=3D"pln">username</span><span =
class=3D"pun">)</span><span class=3D"pln">
        </span><span class=3D"kwd">return</span><span class=3D"pln"> querys=
et</span></code></pre>
<hr>
<h1 id=3D"generic-filtering"><a class=3D"toclink" href=3D"https://www.djang=
o-rest-framework.org/api-guide/filtering/#generic-filtering">Generic Filter=
ing</a></h1>
<p>As well as being able to override the default queryset, REST framework a=
lso includes support for generic filtering backends that allow you to easil=
y construct complex searches and filters.</p>
<p>Generic filters can also present themselves as HTML controls in the brow=
sable API and admin API.</p>
<p><img alt=3D"Filter Example" src=3D"https://www.django-rest-framework.org=
/img/filter-controls.png"></p>
<h2 id=3D"setting-filter-backends"><a class=3D"toclink" href=3D"https://www=
.django-rest-framework.org/api-guide/filtering/#setting-filter-backends">Se=
tting filter backends</a></h2>
<p>The default filter backends may be set globally, using the <code>DEFAULT=
_FILTER_BACKENDS</code> setting. For example.</p>
<pre class=3D"prettyprint well"><code><span class=3D"pln">REST_FRAMEWORK </=
span><span class=3D"pun">=3D</span><span class=3D"pln"> </span><span class=
=3D"pun">{</span><span class=3D"pln">
    </span><span class=3D"str">'DEFAULT_FILTER_BACKENDS'</span><span class=
=3D"pun">:</span><span class=3D"pln"> </span><span class=3D"pun">[</span><s=
pan class=3D"str">'django_filters.rest_framework.DjangoFilterBackend'</span=
><span class=3D"pun">]</span><span class=3D"pln">
</span><span class=3D"pun">}</span></code></pre>
<p>You can also set the filter backends on a per-view, or per-viewset basis=
,
using the <code>GenericAPIView</code> class-based views.</p>
<pre class=3D"prettyprint well"><code><span class=3D"kwd">import</span><spa=
n class=3D"pln"> django_filters</span><span class=3D"pun">.</span><span cla=
ss=3D"pln">rest_framework
</span><span class=3D"kwd">from</span><span class=3D"pln"> django</span><sp=
an class=3D"pun">.</span><span class=3D"pln">contrib</span><span class=3D"p=
un">.</span><span class=3D"pln">auth</span><span class=3D"pun">.</span><spa=
n class=3D"pln">models </span><span class=3D"kwd">import</span><span class=
=3D"pln"> </span><span class=3D"typ">User</span><span class=3D"pln">
</span><span class=3D"kwd">from</span><span class=3D"pln"> myapp</span><spa=
n class=3D"pun">.</span><span class=3D"pln">serializers </span><span class=
=3D"kwd">import</span><span class=3D"pln"> </span><span class=3D"typ">UserS=
erializer</span><span class=3D"pln">
</span><span class=3D"kwd">from</span><span class=3D"pln"> rest_framework <=
/span><span class=3D"kwd">import</span><span class=3D"pln"> generics

</span><span class=3D"kwd">class</span><span class=3D"pln"> </span><span cl=
ass=3D"typ">UserListView</span><span class=3D"pun">(</span><span class=3D"p=
ln">generics</span><span class=3D"pun">.</span><span class=3D"typ">ListAPIV=
iew</span><span class=3D"pun">):</span><span class=3D"pln">
    queryset </span><span class=3D"pun">=3D</span><span class=3D"pln"> </sp=
an><span class=3D"typ">User</span><span class=3D"pun">.</span><span class=
=3D"pln">objects</span><span class=3D"pun">.</span><span class=3D"pln">all<=
/span><span class=3D"pun">()</span><span class=3D"pln">
    serializer_class </span><span class=3D"pun">=3D</span><span class=3D"pl=
n"> </span><span class=3D"typ">UserSerializer</span><span class=3D"pln">
    filter_backends </span><span class=3D"pun">=3D</span><span class=3D"pln=
"> </span><span class=3D"pun">[</span><span class=3D"pln">django_filters</s=
pan><span class=3D"pun">.</span><span class=3D"pln">rest_framework</span><s=
pan class=3D"pun">.</span><span class=3D"typ">DjangoFilterBackend</span><sp=
an class=3D"pun">]</span></code></pre>
<h2 id=3D"filtering-and-object-lookups"><a class=3D"toclink" href=3D"https:=
//www.django-rest-framework.org/api-guide/filtering/#filtering-and-object-l=
ookups">Filtering and object lookups</a></h2>
<p>Note that if a filter backend is configured for a view, then as well as =
being used to filter list views, it will also be used to filter the queryse=
ts used for returning a single object.</p>
<p>For instance, given the previous example, and a product with an id of <c=
ode>4675</code>, the following URL would either return the corresponding ob=
ject, or return a 404 response, depending on if the filtering conditions we=
re met by the given product instance:</p>
<pre class=3D"prettyprint well"><code><span class=3D"pln">http</span><span =
class=3D"pun">:</span><span class=3D"com">//example.com/api/products/4675/?=
category=3Dclothing&amp;max_price=3D10.00</span></code></pre>
<h2 id=3D"overriding-the-initial-queryset"><a class=3D"toclink" href=3D"htt=
ps://www.django-rest-framework.org/api-guide/filtering/#overriding-the-init=
ial-queryset">Overriding the initial queryset</a></h2>
<p>Note that you can use both an overridden <code>.get_queryset()</code> an=
d generic filtering together, and everything will work as expected.  For ex=
ample, if <code>Product</code> had a many-to-many relationship with <code>U=
ser</code>, named <code>purchase</code>, you might want to write a view lik=
e this:</p>
<pre class=3D"prettyprint well"><code><span class=3D"kwd">class</span><span=
 class=3D"pln"> </span><span class=3D"typ">PurchasedProductsList</span><spa=
n class=3D"pun">(</span><span class=3D"pln">generics</span><span class=3D"p=
un">.</span><span class=3D"typ">ListAPIView</span><span class=3D"pun">):</s=
pan><span class=3D"pln">
    </span><span class=3D"str">"""
    Return a list of all the products that the authenticated
    user has ever purchased, with optional filtering.
    """</span><span class=3D"pln">
    model </span><span class=3D"pun">=3D</span><span class=3D"pln"> </span>=
<span class=3D"typ">Product</span><span class=3D"pln">
    serializer_class </span><span class=3D"pun">=3D</span><span class=3D"pl=
n"> </span><span class=3D"typ">ProductSerializer</span><span class=3D"pln">
    filterset_class </span><span class=3D"pun">=3D</span><span class=3D"pln=
"> </span><span class=3D"typ">ProductFilter</span><span class=3D"pln">

    </span><span class=3D"kwd">def</span><span class=3D"pln"> get_queryset<=
/span><span class=3D"pun">(</span><span class=3D"kwd">self</span><span clas=
s=3D"pun">):</span><span class=3D"pln">
        user </span><span class=3D"pun">=3D</span><span class=3D"pln"> </sp=
an><span class=3D"kwd">self</span><span class=3D"pun">.</span><span class=
=3D"pln">request</span><span class=3D"pun">.</span><span class=3D"pln">user
        </span><span class=3D"kwd">return</span><span class=3D"pln"> user</=
span><span class=3D"pun">.</span><span class=3D"pln">purchase_set</span><sp=
an class=3D"pun">.</span><span class=3D"pln">all</span><span class=3D"pun">=
()</span></code></pre>
<hr>
<h1 id=3D"api-guide"><a class=3D"toclink" href=3D"https://www.django-rest-f=
ramework.org/api-guide/filtering/#api-guide">API Guide</a></h1>
<h2 id=3D"djangofilterbackend"><a class=3D"toclink" href=3D"https://www.dja=
ngo-rest-framework.org/api-guide/filtering/#djangofilterbackend">DjangoFilt=
erBackend</a></h2>
<p>The <a href=3D"https://django-filter.readthedocs.io/en/latest/index.html=
"><code>django-filter</code></a> library includes a <code>DjangoFilterBacke=
nd</code> class which
supports highly customizable field filtering for REST framework.</p>
<p>To use <code>DjangoFilterBackend</code>, first install <code>django-filt=
er</code>.</p>
<pre class=3D"prettyprint well"><code><span class=3D"pln">pip install djang=
o</span><span class=3D"pun">-</span><span class=3D"pln">filter</span></code=
></pre>
<p>Then add <code>'django_filters'</code> to Django's <code>INSTALLED_APPS<=
/code>:</p>
<pre class=3D"prettyprint well"><code><span class=3D"pln">INSTALLED_APPS </=
span><span class=3D"pun">=3D</span><span class=3D"pln"> </span><span class=
=3D"pun">[</span><span class=3D"pln">
    </span><span class=3D"pun">...</span><span class=3D"pln">
    </span><span class=3D"str">'django_filters'</span><span class=3D"pun">,=
</span><span class=3D"pln">
    </span><span class=3D"pun">...</span><span class=3D"pln">
</span><span class=3D"pun">]</span></code></pre>
<p>You should now either add the filter backend to your settings:</p>
<pre class=3D"prettyprint well"><code><span class=3D"pln">REST_FRAMEWORK </=
span><span class=3D"pun">=3D</span><span class=3D"pln"> </span><span class=
=3D"pun">{</span><span class=3D"pln">
    </span><span class=3D"str">'DEFAULT_FILTER_BACKENDS'</span><span class=
=3D"pun">:</span><span class=3D"pln"> </span><span class=3D"pun">[</span><s=
pan class=3D"str">'django_filters.rest_framework.DjangoFilterBackend'</span=
><span class=3D"pun">]</span><span class=3D"pln">
</span><span class=3D"pun">}</span></code></pre>
<p>Or add the filter backend to an individual View or ViewSet.</p>
<pre class=3D"prettyprint well"><code><span class=3D"kwd">from</span><span =
class=3D"pln"> django_filters</span><span class=3D"pun">.</span><span class=
=3D"pln">rest_framework </span><span class=3D"kwd">import</span><span class=
=3D"pln"> </span><span class=3D"typ">DjangoFilterBackend</span><span class=
=3D"pln">

</span><span class=3D"kwd">class</span><span class=3D"pln"> </span><span cl=
ass=3D"typ">UserListView</span><span class=3D"pun">(</span><span class=3D"p=
ln">generics</span><span class=3D"pun">.</span><span class=3D"typ">ListAPIV=
iew</span><span class=3D"pun">):</span><span class=3D"pln">
    </span><span class=3D"pun">...</span><span class=3D"pln">
    filter_backends </span><span class=3D"pun">=3D</span><span class=3D"pln=
"> </span><span class=3D"pun">[</span><span class=3D"typ">DjangoFilterBacke=
nd</span><span class=3D"pun">]</span></code></pre>
<p>If all you need is simple equality-based filtering, you can set a <code>=
filterset_fields</code> attribute on the view, or viewset, listing the set =
of fields you wish to filter against.</p>
<pre class=3D"prettyprint well"><code><span class=3D"kwd">class</span><span=
 class=3D"pln"> </span><span class=3D"typ">ProductList</span><span class=3D=
"pun">(</span><span class=3D"pln">generics</span><span class=3D"pun">.</spa=
n><span class=3D"typ">ListAPIView</span><span class=3D"pun">):</span><span =
class=3D"pln">
    queryset </span><span class=3D"pun">=3D</span><span class=3D"pln"> </sp=
an><span class=3D"typ">Product</span><span class=3D"pun">.</span><span clas=
s=3D"pln">objects</span><span class=3D"pun">.</span><span class=3D"pln">all=
</span><span class=3D"pun">()</span><span class=3D"pln">
    serializer_class </span><span class=3D"pun">=3D</span><span class=3D"pl=
n"> </span><span class=3D"typ">ProductSerializer</span><span class=3D"pln">
    filter_backends </span><span class=3D"pun">=3D</span><span class=3D"pln=
"> </span><span class=3D"pun">[</span><span class=3D"typ">DjangoFilterBacke=
nd</span><span class=3D"pun">]</span><span class=3D"pln">
    filterset_fields </span><span class=3D"pun">=3D</span><span class=3D"pl=
n"> </span><span class=3D"pun">[</span><span class=3D"str">'category'</span=
><span class=3D"pun">,</span><span class=3D"pln"> </span><span class=3D"str=
">'in_stock'</span><span class=3D"pun">]</span></code></pre>
<p>This will automatically create a <code>FilterSet</code> class for the gi=
ven fields, and will allow you to make requests such as:</p>
<pre class=3D"prettyprint well"><code><span class=3D"pln">http</span><span =
class=3D"pun">:</span><span class=3D"com">//example.com/api/products?catego=
ry=3Dclothing&amp;in_stock=3DTrue</span></code></pre>
<p>For more advanced filtering requirements you can specify a <code>FilterS=
et</code> class that should be used by the view.
You can read more about <code>FilterSet</code>s in the <a href=3D"https://d=
jango-filter.readthedocs.io/en/latest/index.html">django-filter documentati=
on</a>.
It's also recommended that you read the section on <a href=3D"https://djang=
o-filter.readthedocs.io/en/latest/guide/rest_framework.html">DRF integratio=
n</a>.</p>
<h2 id=3D"searchfilter"><a class=3D"toclink" href=3D"https://www.django-res=
t-framework.org/api-guide/filtering/#searchfilter">SearchFilter</a></h2>
<p>The <code>SearchFilter</code> class supports simple single query paramet=
er based searching, and is based on the <a href=3D"https://docs.djangoproje=
ct.com/en/stable/ref/contrib/admin/#django.contrib.admin.ModelAdmin.search_=
fields">Django admin's search functionality</a>.</p>
<p>When in use, the browsable API will include a <code>SearchFilter</code> =
control:</p>
<p><img alt=3D"Search Filter" src=3D"https://www.django-rest-framework.org/=
img/search-filter.png"></p>
<p>The <code>SearchFilter</code> class will only be applied if the view has=
 a <code>search_fields</code> attribute set.  The <code>search_fields</code=
> attribute should be a list of names of text type fields on the model, suc=
h as <code>CharField</code> or <code>TextField</code>.</p>
<pre class=3D"prettyprint well"><code><span class=3D"kwd">from</span><span =
class=3D"pln"> rest_framework </span><span class=3D"kwd">import</span><span=
 class=3D"pln"> filters

</span><span class=3D"kwd">class</span><span class=3D"pln"> </span><span cl=
ass=3D"typ">UserListView</span><span class=3D"pun">(</span><span class=3D"p=
ln">generics</span><span class=3D"pun">.</span><span class=3D"typ">ListAPIV=
iew</span><span class=3D"pun">):</span><span class=3D"pln">
    queryset </span><span class=3D"pun">=3D</span><span class=3D"pln"> </sp=
an><span class=3D"typ">User</span><span class=3D"pun">.</span><span class=
=3D"pln">objects</span><span class=3D"pun">.</span><span class=3D"pln">all<=
/span><span class=3D"pun">()</span><span class=3D"pln">
    serializer_class </span><span class=3D"pun">=3D</span><span class=3D"pl=
n"> </span><span class=3D"typ">UserSerializer</span><span class=3D"pln">
    filter_backends </span><span class=3D"pun">=3D</span><span class=3D"pln=
"> </span><span class=3D"pun">[</span><span class=3D"pln">filters</span><sp=
an class=3D"pun">.</span><span class=3D"typ">SearchFilter</span><span class=
=3D"pun">]</span><span class=3D"pln">
    search_fields </span><span class=3D"pun">=3D</span><span class=3D"pln">=
 </span><span class=3D"pun">[</span><span class=3D"str">'username'</span><s=
pan class=3D"pun">,</span><span class=3D"pln"> </span><span class=3D"str">'=
email'</span><span class=3D"pun">]</span></code></pre>
<p>This will allow the client to filter the items in the list by making que=
ries such as:</p>
<pre class=3D"prettyprint well"><code><span class=3D"pln">http</span><span =
class=3D"pun">:</span><span class=3D"com">//example.com/api/users?search=3D=
russell</span></code></pre>
<p>You can also perform a related lookup on a ForeignKey or ManyToManyField=
 with the lookup API double-underscore notation:</p>
<pre class=3D"prettyprint well"><code><span class=3D"pln">search_fields </s=
pan><span class=3D"pun">=3D</span><span class=3D"pln"> </span><span class=
=3D"pun">[</span><span class=3D"str">'username'</span><span class=3D"pun">,=
</span><span class=3D"pln"> </span><span class=3D"str">'email'</span><span =
class=3D"pun">,</span><span class=3D"pln"> </span><span class=3D"str">'prof=
ile__profession'</span><span class=3D"pun">]</span></code></pre>
<p>For <a href=3D"https://docs.djangoproject.com/en/3.0/ref/contrib/postgre=
s/fields/#jsonfield">JSONField</a> and <a href=3D"https://docs.djangoprojec=
t.com/en/3.0/ref/contrib/postgres/fields/#hstorefield">HStoreField</a> fiel=
ds you can filter based on nested values within the data structure using th=
e same double-underscore notation:</p>
<pre class=3D"prettyprint well"><code><span class=3D"pln">search_fields </s=
pan><span class=3D"pun">=3D</span><span class=3D"pln"> </span><span class=
=3D"pun">[</span><span class=3D"str">'data__breed'</span><span class=3D"pun=
">,</span><span class=3D"pln"> </span><span class=3D"str">'data__owner__oth=
er_pets__0__name'</span><span class=3D"pun">]</span></code></pre>
<p>By default, searches will use case-insensitive partial matches.  The sea=
rch parameter may contain multiple search terms, which should be whitespace=
 and/or comma separated.  If multiple search terms are used then objects wi=
ll be returned in the list only if all the provided terms are matched.</p>
<p>The search behavior may be restricted by prepending various characters t=
o the <code>search_fields</code>.</p>
<ul>
<li>'^' Starts-with search.</li>
<li>'=3D' Exact matches.</li>
<li>'@' Full-text search.  (Currently only supported Django's <a href=3D"ht=
tps://docs.djangoproject.com/en/dev/ref/contrib/postgres/search/">PostgreSQ=
L backend</a>.)</li>
<li>'$' Regex search.</li>
</ul>
<p>For example:</p>
<pre class=3D"prettyprint well"><code><span class=3D"pln">search_fields </s=
pan><span class=3D"pun">=3D</span><span class=3D"pln"> </span><span class=
=3D"pun">[</span><span class=3D"str">'=3Dusername'</span><span class=3D"pun=
">,</span><span class=3D"pln"> </span><span class=3D"str">'=3Demail'</span>=
<span class=3D"pun">]</span></code></pre>
<p>By default, the search parameter is named <code>'search'</code>, but thi=
s may be overridden with the <code>SEARCH_PARAM</code> setting.</p>
<p>To dynamically change search fields based on request content, it's possi=
ble to subclass the <code>SearchFilter</code> and override the <code>get_se=
arch_fields()</code> function. For example, the following subclass will onl=
y search on <code>title</code> if the query parameter <code>title_only</cod=
e> is in the request:</p>
<pre class=3D"prettyprint well"><code><span class=3D"kwd">from</span><span =
class=3D"pln"> rest_framework </span><span class=3D"kwd">import</span><span=
 class=3D"pln"> filters

</span><span class=3D"kwd">class</span><span class=3D"pln"> </span><span cl=
ass=3D"typ">CustomSearchFilter</span><span class=3D"pun">(</span><span clas=
s=3D"pln">filters</span><span class=3D"pun">.</span><span class=3D"typ">Sea=
rchFilter</span><span class=3D"pun">):</span><span class=3D"pln">
    </span><span class=3D"kwd">def</span><span class=3D"pln"> get_search_fi=
elds</span><span class=3D"pun">(</span><span class=3D"kwd">self</span><span=
 class=3D"pun">,</span><span class=3D"pln"> view</span><span class=3D"pun">=
,</span><span class=3D"pln"> request</span><span class=3D"pun">):</span><sp=
an class=3D"pln">
        </span><span class=3D"kwd">if</span><span class=3D"pln"> request</s=
pan><span class=3D"pun">.</span><span class=3D"pln">query_params</span><spa=
n class=3D"pun">.</span><span class=3D"kwd">get</span><span class=3D"pun">(=
</span><span class=3D"str">'title_only'</span><span class=3D"pun">):</span>=
<span class=3D"pln">
            </span><span class=3D"kwd">return</span><span class=3D"pln"> </=
span><span class=3D"pun">[</span><span class=3D"str">'title'</span><span cl=
ass=3D"pun">]</span><span class=3D"pln">
        </span><span class=3D"kwd">return</span><span class=3D"pln"> </span=
><span class=3D"kwd">super</span><span class=3D"pun">().</span><span class=
=3D"pln">get_search_fields</span><span class=3D"pun">(</span><span class=3D=
"pln">view</span><span class=3D"pun">,</span><span class=3D"pln"> request</=
span><span class=3D"pun">)</span></code></pre>
<p>For more details, see the <a href=3D"https://docs.djangoproject.com/en/s=
table/ref/contrib/admin/#django.contrib.admin.ModelAdmin.search_fields">Dja=
ngo documentation</a>.</p>
<hr>
<h2 id=3D"orderingfilter"><a class=3D"toclink" href=3D"https://www.django-r=
est-framework.org/api-guide/filtering/#orderingfilter">OrderingFilter</a></=
h2>
<p>The <code>OrderingFilter</code> class supports simple query parameter co=
ntrolled ordering of results.</p>
<p><img alt=3D"Ordering Filter" src=3D"https://www.django-rest-framework.or=
g/img/ordering-filter.png"></p>
<p>By default, the query parameter is named <code>'ordering'</code>, but th=
is may by overridden with the <code>ORDERING_PARAM</code> setting.</p>
<p>For example, to order users by username:</p>
<pre class=3D"prettyprint well"><code><span class=3D"pln">http</span><span =
class=3D"pun">:</span><span class=3D"com">//example.com/api/users?ordering=
=3Dusername</span></code></pre>
<p>The client may also specify reverse orderings by prefixing the field nam=
e with '-', like so:</p>
<pre class=3D"prettyprint well"><code><span class=3D"pln">http</span><span =
class=3D"pun">:</span><span class=3D"com">//example.com/api/users?ordering=
=3D-username</span></code></pre>
<p>Multiple orderings may also be specified:</p>
<pre class=3D"prettyprint well"><code><span class=3D"pln">http</span><span =
class=3D"pun">:</span><span class=3D"com">//example.com/api/users?ordering=
=3Daccount,username</span></code></pre>
<h3 id=3D"specifying-which-fields-may-be-ordered-against"><a class=3D"tocli=
nk" href=3D"https://www.django-rest-framework.org/api-guide/filtering/#spec=
ifying-which-fields-may-be-ordered-against">Specifying which fields may be =
ordered against</a></h3>
<p>It's recommended that you explicitly specify which fields the API should=
 allowing in the ordering filter.  You can do this by setting an <code>orde=
ring_fields</code> attribute on the view, like so:</p>
<pre class=3D"prettyprint well"><code><span class=3D"kwd">class</span><span=
 class=3D"pln"> </span><span class=3D"typ">UserListView</span><span class=
=3D"pun">(</span><span class=3D"pln">generics</span><span class=3D"pun">.</=
span><span class=3D"typ">ListAPIView</span><span class=3D"pun">):</span><sp=
an class=3D"pln">
    queryset </span><span class=3D"pun">=3D</span><span class=3D"pln"> </sp=
an><span class=3D"typ">User</span><span class=3D"pun">.</span><span class=
=3D"pln">objects</span><span class=3D"pun">.</span><span class=3D"pln">all<=
/span><span class=3D"pun">()</span><span class=3D"pln">
    serializer_class </span><span class=3D"pun">=3D</span><span class=3D"pl=
n"> </span><span class=3D"typ">UserSerializer</span><span class=3D"pln">
    filter_backends </span><span class=3D"pun">=3D</span><span class=3D"pln=
"> </span><span class=3D"pun">[</span><span class=3D"pln">filters</span><sp=
an class=3D"pun">.</span><span class=3D"typ">OrderingFilter</span><span cla=
ss=3D"pun">]</span><span class=3D"pln">
    ordering_fields </span><span class=3D"pun">=3D</span><span class=3D"pln=
"> </span><span class=3D"pun">[</span><span class=3D"str">'username'</span>=
<span class=3D"pun">,</span><span class=3D"pln"> </span><span class=3D"str"=
>'email'</span><span class=3D"pun">]</span></code></pre>
<p>This helps prevent unexpected data leakage, such as allowing users to or=
der against a password hash field or other sensitive data.</p>
<p>If you <em>don't</em> specify an <code>ordering_fields</code> attribute =
on the view, the filter class will default to allowing the user to filter o=
n any readable fields on the serializer specified by the <code>serializer_c=
lass</code> attribute.</p>
<p>If you are confident that the queryset being used by the view doesn't co=
ntain any sensitive data, you can also explicitly specify that a view shoul=
d allow ordering on <em>any</em> model field or queryset aggregate, by usin=
g the special value <code>'__all__'</code>.</p>
<pre class=3D"prettyprint well"><code><span class=3D"kwd">class</span><span=
 class=3D"pln"> </span><span class=3D"typ">BookingsListView</span><span cla=
ss=3D"pun">(</span><span class=3D"pln">generics</span><span class=3D"pun">.=
</span><span class=3D"typ">ListAPIView</span><span class=3D"pun">):</span><=
span class=3D"pln">
    queryset </span><span class=3D"pun">=3D</span><span class=3D"pln"> </sp=
an><span class=3D"typ">Booking</span><span class=3D"pun">.</span><span clas=
s=3D"pln">objects</span><span class=3D"pun">.</span><span class=3D"pln">all=
</span><span class=3D"pun">()</span><span class=3D"pln">
    serializer_class </span><span class=3D"pun">=3D</span><span class=3D"pl=
n"> </span><span class=3D"typ">BookingSerializer</span><span class=3D"pln">
    filter_backends </span><span class=3D"pun">=3D</span><span class=3D"pln=
"> </span><span class=3D"pun">[</span><span class=3D"pln">filters</span><sp=
an class=3D"pun">.</span><span class=3D"typ">OrderingFilter</span><span cla=
ss=3D"pun">]</span><span class=3D"pln">
    ordering_fields </span><span class=3D"pun">=3D</span><span class=3D"pln=
"> </span><span class=3D"str">'__all__'</span></code></pre>
<h3 id=3D"specifying-a-default-ordering"><a class=3D"toclink" href=3D"https=
://www.django-rest-framework.org/api-guide/filtering/#specifying-a-default-=
ordering">Specifying a default ordering</a></h3>
<p>If an <code>ordering</code> attribute is set on the view, this will be u=
sed as the default ordering.</p>
<p>Typically you'd instead control this by setting <code>order_by</code> on=
 the initial queryset, but using the <code>ordering</code> parameter on the=
 view allows you to specify the ordering in a way that it can then be passe=
d automatically as context to a rendered template.  This makes it possible =
to automatically render column headers differently if they are being used t=
o order the results.</p>
<pre class=3D"prettyprint well"><code><span class=3D"kwd">class</span><span=
 class=3D"pln"> </span><span class=3D"typ">UserListView</span><span class=
=3D"pun">(</span><span class=3D"pln">generics</span><span class=3D"pun">.</=
span><span class=3D"typ">ListAPIView</span><span class=3D"pun">):</span><sp=
an class=3D"pln">
    queryset </span><span class=3D"pun">=3D</span><span class=3D"pln"> </sp=
an><span class=3D"typ">User</span><span class=3D"pun">.</span><span class=
=3D"pln">objects</span><span class=3D"pun">.</span><span class=3D"pln">all<=
/span><span class=3D"pun">()</span><span class=3D"pln">
    serializer_class </span><span class=3D"pun">=3D</span><span class=3D"pl=
n"> </span><span class=3D"typ">UserSerializer</span><span class=3D"pln">
    filter_backends </span><span class=3D"pun">=3D</span><span class=3D"pln=
"> </span><span class=3D"pun">[</span><span class=3D"pln">filters</span><sp=
an class=3D"pun">.</span><span class=3D"typ">OrderingFilter</span><span cla=
ss=3D"pun">]</span><span class=3D"pln">
    ordering_fields </span><span class=3D"pun">=3D</span><span class=3D"pln=
"> </span><span class=3D"pun">[</span><span class=3D"str">'username'</span>=
<span class=3D"pun">,</span><span class=3D"pln"> </span><span class=3D"str"=
>'email'</span><span class=3D"pun">]</span><span class=3D"pln">
    ordering </span><span class=3D"pun">=3D</span><span class=3D"pln"> </sp=
an><span class=3D"pun">[</span><span class=3D"str">'username'</span><span c=
lass=3D"pun">]</span></code></pre>
<p>The <code>ordering</code> attribute may be either a string or a list/tup=
le of strings.</p>
<hr>
<h1 id=3D"custom-generic-filtering"><a class=3D"toclink" href=3D"https://ww=
w.django-rest-framework.org/api-guide/filtering/#custom-generic-filtering">=
Custom generic filtering</a></h1>
<p>You can also provide your own generic filtering backend, or write an ins=
tallable app for other developers to use.</p>
<p>To do so override <code>BaseFilterBackend</code>, and override the <code=
>.filter_queryset(self, request, queryset, view)</code> method.  The method=
 should return a new, filtered queryset.</p>
<p>As well as allowing clients to perform searches and filtering, generic f=
ilter backends can be useful for restricting which objects should be visibl=
e to any given request or user.</p>
<h2 id=3D"example"><a class=3D"toclink" href=3D"https://www.django-rest-fra=
mework.org/api-guide/filtering/#example">Example</a></h2>
<p>For example, you might need to restrict users to only being able to see =
objects they created.</p>
<pre class=3D"prettyprint well"><code><span class=3D"kwd">class</span><span=
 class=3D"pln"> </span><span class=3D"typ">IsOwnerFilterBackend</span><span=
 class=3D"pun">(</span><span class=3D"pln">filters</span><span class=3D"pun=
">.</span><span class=3D"typ">BaseFilterBackend</span><span class=3D"pun">)=
:</span><span class=3D"pln">
    </span><span class=3D"str">"""
    Filter that only allows users to see their own objects.
    """</span><span class=3D"pln">
    </span><span class=3D"kwd">def</span><span class=3D"pln"> filter_querys=
et</span><span class=3D"pun">(</span><span class=3D"kwd">self</span><span c=
lass=3D"pun">,</span><span class=3D"pln"> request</span><span class=3D"pun"=
>,</span><span class=3D"pln"> queryset</span><span class=3D"pun">,</span><s=
pan class=3D"pln"> view</span><span class=3D"pun">):</span><span class=3D"p=
ln">
        </span><span class=3D"kwd">return</span><span class=3D"pln"> querys=
et</span><span class=3D"pun">.</span><span class=3D"pln">filter</span><span=
 class=3D"pun">(</span><span class=3D"pln">owner</span><span class=3D"pun">=
=3D</span><span class=3D"pln">request</span><span class=3D"pun">.</span><sp=
an class=3D"pln">user</span><span class=3D"pun">)</span></code></pre>
<p>We could achieve the same behavior by overriding <code>get_queryset()</c=
ode> on the views, but using a filter backend allows you to more easily add=
 this restriction to multiple views, or to apply it across the entire API.<=
/p>
<h2 id=3D"customizing-the-interface"><a class=3D"toclink" href=3D"https://w=
ww.django-rest-framework.org/api-guide/filtering/#customizing-the-interface=
">Customizing the interface</a></h2>
<p>Generic filters may also present an interface in the browsable API. To d=
o so you should implement a <code>to_html()</code> method which returns a r=
endered HTML representation of the filter. This method should have the foll=
owing signature:</p>
<p><code>to_html(self, request, queryset, view)</code></p>
<p>The method should return a rendered HTML string.</p>
<h2 id=3D"filtering-schemas"><a class=3D"toclink" href=3D"https://www.djang=
o-rest-framework.org/api-guide/filtering/#filtering-schemas">Filtering &amp=
; schemas</a></h2>
<p>You can also make the filter controls available to the schema autogenera=
tion
that REST framework provides, by implementing a <code>get_schema_fields()</=
code> method. This method should have the following signature:</p>
<p><code>get_schema_fields(self, view)</code></p>
<p>The method should return a list of <code>coreapi.Field</code> instances.=
</p>
<h1 id=3D"third-party-packages"><a class=3D"toclink" href=3D"https://www.dj=
ango-rest-framework.org/api-guide/filtering/#third-party-packages">Third pa=
rty packages</a></h1>
<p>The following third party packages provide additional filter implementat=
ions.</p>
<h2 id=3D"django-rest-framework-filters-package"><a class=3D"toclink" href=
=3D"https://www.django-rest-framework.org/api-guide/filtering/#django-rest-=
framework-filters-package">Django REST framework filters package</a></h2>
<p>The <a href=3D"https://github.com/philipn/django-rest-framework-filters"=
>django-rest-framework-filters package</a> works together with the <code>Dj=
angoFilterBackend</code> class, and allows you to easily create filters acr=
oss relationships, or create multiple filter lookup types for a given field=
.</p>
<h2 id=3D"django-rest-framework-full-word-search-filter"><a class=3D"toclin=
k" href=3D"https://www.django-rest-framework.org/api-guide/filtering/#djang=
o-rest-framework-full-word-search-filter">Django REST framework full word s=
earch filter</a></h2>
<p>The <a href=3D"https://github.com/trollknurr/django-rest-framework-word-=
search-filter">djangorestframework-word-filter</a> developed as alternative=
 to <code>filters.SearchFilter</code> which will search full word in text, =
or exact match.</p>
<h2 id=3D"django-url-filter"><a class=3D"toclink" href=3D"https://www.djang=
o-rest-framework.org/api-guide/filtering/#django-url-filter">Django URL Fil=
ter</a></h2>
<p><a href=3D"https://github.com/miki725/django-url-filter">django-url-filt=
er</a> provides a safe way to filter data via human-friendly URLs. It works=
 very similar to DRF serializers and fields in a sense that they can be nes=
ted except they are called filtersets and filters. That provides easy way t=
o filter related data. Also this library is generic-purpose so it can be us=
ed to filter other sources of data and not only Django <code>QuerySet</code=
>s.</p>
<h2 id=3D"drf-url-filters"><a class=3D"toclink" href=3D"https://www.django-=
rest-framework.org/api-guide/filtering/#drf-url-filters">drf-url-filters</a=
></h2>
<p><a href=3D"https://github.com/manjitkumar/drf-url-filters">drf-url-filte=
r</a> is a simple Django app to apply filters on drf <code>ModelViewSet</co=
de>'s <code>Queryset</code> in a clean, simple and configurable way. It als=
o supports validations on incoming query params and their values. A beautif=
ul python package <code>Voluptuous</code> is being used for validations on =
the incoming query parameters. The best part about voluptuous is you can de=
fine your own validations as per your query params requirements.</p>
           =20

          </div> <!--/span-->
        </div> <!--/row-->
      </div> <!--/.fluid-container-->
    </div> <!--/.body content-->
    <div id=3D"push"></div>
  </div> <!--/.wrapper -->

  <footer class=3D"span12">
    <p>Documentation built with <a href=3D"http://www.mkdocs.org/">MkDocs</=
a>.
    </p>
  </footer>

  <!-- Le javascript
  =3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D -->
  <!-- Placed at the end of the document so the pages load faster -->
 =20
 =20
 =20
 =20
 =20

 =20
 =20
 =20
 =20

 =20


</body></html>
------MultipartBoundary--hLXCg58VmOUhCLwQaH490C7Jb0LYqV2sbGnXH2cWYK----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-08d9537b-077f-4c83-b966-7923451ecc74@mhtml.blink

@charset "utf-8";

#sidebarInclude img { margin-bottom: 10px; }

#sidebarInclude a.promo { color: black; }

@media (max-width: 767px) {
  div.promo { display: none; }
}
------MultipartBoundary--hLXCg58VmOUhCLwQaH490C7Jb0LYqV2sbGnXH2cWYK----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://www.django-rest-framework.org/css/prettify.css

@charset "utf-8";

.com { color: rgb(147, 161, 161); }

.lit { color: rgb(25, 95, 145); }

.pun, .opn, .clo { color: rgb(147, 161, 161); }

.fun { color: rgb(220, 50, 47); }

.str, .atv { color: rgb(221, 17, 68); }

.kwd, .prettyprint .tag { color: rgb(30, 52, 123); }

.typ, .atn, .dec, .var { color: teal; }

.pln { color: rgb(72, 72, 76); }

.prettyprint { padding: 8px; background-color: rgb(247, 247, 249); border: =
1px solid rgb(225, 225, 232); }

.prettyprint.linenums { box-shadow: rgb(251, 251, 252) 40px 0px 0px inset, =
rgb(236, 236, 240) 41px 0px 0px inset; }

ol.linenums { margin: 0px 0px 0px 33px; }

ol.linenums li { padding-left: 12px; color: rgb(190, 190, 197); line-height=
: 20px; text-shadow: rgb(255, 255, 255) 0px 1px 0px; }
------MultipartBoundary--hLXCg58VmOUhCLwQaH490C7Jb0LYqV2sbGnXH2cWYK----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://www.django-rest-framework.org/css/bootstrap.css

@charset "utf-8";

article, aside, details, figcaption, figure, footer, header, hgroup, nav, s=
ection { display: block; }

audio, canvas, video { display: inline-block; }

audio:not([controls]) { display: none; }

html { font-size: 100%; text-size-adjust: 100%; }

a:focus { outline: -webkit-focus-ring-color auto 5px; outline-offset: -2px;=
 }

a:hover, a:active { outline: 0px; }

sub, sup { position: relative; font-size: 75%; line-height: 0; vertical-ali=
gn: baseline; }

sup { top: -0.5em; }

sub { bottom: -0.25em; }

img { height: auto; max-width: 100%; vertical-align: middle; border: 0px; }

#map_canvas img { max-width: none; }

button, input, select, textarea { margin: 0px; font-size: 100%; vertical-al=
ign: middle; }

button, input { line-height: normal; }

button, input[type=3D"button"], input[type=3D"reset"], input[type=3D"submit=
"] { cursor: pointer; appearance: button; }

input[type=3D"search"] { box-sizing: content-box; appearance: textfield; }

input[type=3D"search"]::-webkit-search-decoration, input[type=3D"search"]::=
-webkit-search-cancel-button { appearance: none; }

textarea { overflow: auto; vertical-align: top; }

.clearfix { }

.clearfix::before, .clearfix::after { display: table; line-height: 0; conte=
nt: ""; }

.clearfix::after { clear: both; }

.hide-text { font: 0px / 0 a; color: transparent; text-shadow: none; backgr=
ound-color: transparent; border: 0px; }

.input-block-level { display: block; width: 100%; min-height: 30px; box-siz=
ing: border-box; }

body { margin: 0px; font-family: "Helvetica Neue", Helvetica, Arial, sans-s=
erif; font-size: 14px; line-height: 20px; color: rgb(51, 51, 51); backgroun=
d-color: rgb(255, 255, 255); }

a { color: rgb(0, 136, 204); text-decoration: none; }

a:hover { color: rgb(0, 85, 128); text-decoration: underline; }

.img-rounded { border-radius: 6px; }

.img-polaroid { padding: 4px; background-color: rgb(255, 255, 255); border:=
 1px solid rgba(0, 0, 0, 0.2); box-shadow: rgba(0, 0, 0, 0.1) 0px 1px 3px; =
}

.img-circle { border-radius: 500px; }

.row { margin-left: -20px; }

.row::before, .row::after { display: table; line-height: 0; content: ""; }

.row::after { clear: both; }

[class*=3D"span"] { float: left; min-height: 1px; margin-left: 20px; }

.container, .navbar-static-top .container, .navbar-fixed-top .container, .n=
avbar-fixed-bottom .container { width: 940px; }

.span12 { width: 940px; }

.span11 { width: 860px; }

.span10 { width: 780px; }

.span9 { width: 700px; }

.span8 { width: 620px; }

.span7 { width: 540px; }

.span6 { width: 460px; }

.span5 { width: 380px; }

.span4 { width: 300px; }

.span3 { width: 220px; }

.span2 { width: 140px; }

.span1 { width: 60px; }

.offset12 { margin-left: 980px; }

.offset11 { margin-left: 900px; }

.offset10 { margin-left: 820px; }

.offset9 { margin-left: 740px; }

.offset8 { margin-left: 660px; }

.offset7 { margin-left: 580px; }

.offset6 { margin-left: 500px; }

.offset5 { margin-left: 420px; }

.offset4 { margin-left: 340px; }

.offset3 { margin-left: 260px; }

.offset2 { margin-left: 180px; }

.offset1 { margin-left: 100px; }

.row-fluid { width: 100%; }

.row-fluid::before, .row-fluid::after { display: table; line-height: 0; con=
tent: ""; }

.row-fluid::after { clear: both; }

.row-fluid [class*=3D"span"] { display: block; float: left; width: 100%; mi=
n-height: 30px; margin-left: 2.12766%; box-sizing: border-box; }

.row-fluid [class*=3D"span"]:first-child { margin-left: 0px; }

.row-fluid .span12 { width: 100%; }

.row-fluid .span11 { width: 91.4894%; }

.row-fluid .span10 { width: 82.9787%; }

.row-fluid .span9 { width: 74.4681%; }

.row-fluid .span8 { width: 65.9574%; }

.row-fluid .span7 { width: 57.4468%; }

.row-fluid .span6 { width: 48.9362%; }

.row-fluid .span5 { width: 40.4255%; }

.row-fluid .span4 { width: 31.9149%; }

.row-fluid .span3 { width: 23.4043%; }

.row-fluid .span2 { width: 14.8936%; }

.row-fluid .span1 { width: 6.38298%; }

.row-fluid .offset12 { margin-left: 104.255%; }

.row-fluid .offset12:first-child { margin-left: 102.128%; }

.row-fluid .offset11 { margin-left: 95.7447%; }

.row-fluid .offset11:first-child { margin-left: 93.617%; }

.row-fluid .offset10 { margin-left: 87.234%; }

.row-fluid .offset10:first-child { margin-left: 85.1064%; }

.row-fluid .offset9 { margin-left: 78.7234%; }

.row-fluid .offset9:first-child { margin-left: 76.5957%; }

.row-fluid .offset8 { margin-left: 70.2128%; }

.row-fluid .offset8:first-child { margin-left: 68.0851%; }

.row-fluid .offset7 { margin-left: 61.7021%; }

.row-fluid .offset7:first-child { margin-left: 59.5745%; }

.row-fluid .offset6 { margin-left: 53.1915%; }

.row-fluid .offset6:first-child { margin-left: 51.0638%; }

.row-fluid .offset5 { margin-left: 44.6809%; }

.row-fluid .offset5:first-child { margin-left: 42.5532%; }

.row-fluid .offset4 { margin-left: 36.1702%; }

.row-fluid .offset4:first-child { margin-left: 34.0426%; }

.row-fluid .offset3 { margin-left: 27.6596%; }

.row-fluid .offset3:first-child { margin-left: 25.5319%; }

.row-fluid .offset2 { margin-left: 19.1489%; }

.row-fluid .offset2:first-child { margin-left: 17.0213%; }

.row-fluid .offset1 { margin-left: 10.6383%; }

.row-fluid .offset1:first-child { margin-left: 8.51064%; }

[class*=3D"span"].hide, .row-fluid [class*=3D"span"].hide { display: none; =
}

[class*=3D"span"].pull-right, .row-fluid [class*=3D"span"].pull-right { flo=
at: right; }

.container { margin-right: auto; margin-left: auto; }

.container::before, .container::after { display: table; line-height: 0; con=
tent: ""; }

.container::after { clear: both; }

.container-fluid { padding-right: 20px; padding-left: 20px; }

.container-fluid::before, .container-fluid::after { display: table; line-he=
ight: 0; content: ""; }

.container-fluid::after { clear: both; }

p { margin: 0px 0px 10px; }

.lead { margin-bottom: 20px; font-size: 21px; font-weight: 200; line-height=
: 30px; }

small { font-size: 85%; }

strong { font-weight: bold; }

em { font-style: italic; }

cite { font-style: normal; }

.muted { color: rgb(153, 153, 153); }

.text-warning { color: rgb(192, 152, 83); }

.text-error { color: rgb(185, 74, 72); }

.text-info { color: rgb(58, 135, 173); }

.text-success { color: rgb(70, 136, 71); }

h1, h2, h3, h4, h5, h6 { margin: 10px 0px; font-family: inherit; font-weigh=
t: bold; line-height: 1; color: inherit; text-rendering: optimizelegibility=
; }

h1 small, h2 small, h3 small, h4 small, h5 small, h6 small { font-weight: n=
ormal; line-height: 1; color: rgb(153, 153, 153); }

h1 { font-size: 36px; line-height: 40px; }

h2 { font-size: 30px; line-height: 40px; }

h3 { font-size: 24px; line-height: 40px; }

h4 { font-size: 18px; line-height: 20px; }

h5 { font-size: 14px; line-height: 20px; }

h6 { font-size: 12px; line-height: 20px; }

h1 small { font-size: 24px; }

h2 small { font-size: 18px; }

h3 small { font-size: 14px; }

h4 small { font-size: 14px; }

.page-header { padding-bottom: 9px; margin: 20px 0px 30px; border-bottom: 1=
px solid rgb(238, 238, 238); }

ul, ol { padding: 0px; margin: 0px 0px 10px 25px; }

ul ul, ul ol, ol ol, ol ul { margin-bottom: 0px; }

li { line-height: 20px; }

ul.unstyled, ol.unstyled { margin-left: 0px; list-style: none; }

dl { margin-bottom: 20px; }

dt, dd { line-height: 20px; }

dt { font-weight: bold; }

dd { margin-left: 10px; }

.dl-horizontal { }

.dl-horizontal::before, .dl-horizontal::after { display: table; line-height=
: 0; content: ""; }

.dl-horizontal::after { clear: both; }

.dl-horizontal dt { float: left; width: 160px; overflow: hidden; clear: lef=
t; text-align: right; text-overflow: ellipsis; white-space: nowrap; }

.dl-horizontal dd { margin-left: 180px; }

hr { margin: 20px 0px; border-width: 1px 0px; border-right-style: initial; =
border-left-style: initial; border-right-color: initial; border-left-color:=
 initial; border-image: initial; border-top-style: solid; border-top-color:=
 rgb(238, 238, 238); border-bottom-style: solid; border-bottom-color: rgb(2=
55, 255, 255); }

abbr[title] { cursor: help; border-bottom: 1px dotted rgb(153, 153, 153); }

abbr.initialism { font-size: 90%; text-transform: uppercase; }

blockquote { padding: 0px 0px 0px 15px; margin: 0px 0px 20px; border-left: =
5px solid rgb(238, 238, 238); }

blockquote p { margin-bottom: 0px; font-size: 16px; font-weight: 300; line-=
height: 25px; }

blockquote small { display: block; line-height: 20px; color: rgb(153, 153, =
153); }

blockquote small::before { content: "=E2=80=94=C2=A0"; }

blockquote.pull-right { float: right; padding-right: 15px; padding-left: 0p=
x; border-right: 5px solid rgb(238, 238, 238); border-left: 0px; }

blockquote.pull-right p, blockquote.pull-right small { text-align: right; }

blockquote.pull-right small::before { content: ""; }

blockquote.pull-right small::after { content: "=C2=A0=E2=80=94"; }

q::before, q::after, blockquote::before, blockquote::after { content: ""; }

address { display: block; margin-bottom: 20px; font-style: normal; line-hei=
ght: 20px; }

code, pre { padding: 0px 3px 2px; font-family: Monaco, Menlo, Consolas, "Co=
urier New", monospace; font-size: 12px; color: rgb(51, 51, 51); border-radi=
us: 3px; }

code { padding: 2px 4px; color: rgb(221, 17, 68); background-color: rgb(247=
, 247, 249); border: 1px solid rgb(225, 225, 232); }

pre { display: block; padding: 9.5px; margin: 0px 0px 10px; font-size: 13px=
; line-height: 20px; word-break: break-all; overflow-wrap: break-word; whit=
e-space: pre-wrap; background-color: rgb(245, 245, 245); border: 1px solid =
rgba(0, 0, 0, 0.15); border-radius: 4px; }

pre.prettyprint { margin-bottom: 20px; }

pre code { padding: 0px; color: inherit; background-color: transparent; bor=
der: 0px; }

.pre-scrollable { max-height: 340px; overflow-y: scroll; }

form { margin: 0px 0px 20px; }

fieldset { padding: 0px; margin: 0px; border: 0px; }

legend { display: block; width: 100%; padding: 0px; margin-bottom: 20px; fo=
nt-size: 21px; line-height: 40px; color: rgb(51, 51, 51); border-width: 0px=
 0px 1px; border-top-style: initial; border-right-style: initial; border-le=
ft-style: initial; border-top-color: initial; border-right-color: initial; =
border-left-color: initial; border-image: initial; border-bottom-style: sol=
id; border-bottom-color: rgb(229, 229, 229); }

legend small { font-size: 15px; color: rgb(153, 153, 153); }

label, input, button, select, textarea { font-size: 14px; font-weight: norm=
al; line-height: 20px; }

input, button, select, textarea { font-family: "Helvetica Neue", Helvetica,=
 Arial, sans-serif; }

label { display: block; margin-bottom: 5px; }

select, textarea, input[type=3D"text"], input[type=3D"password"], input[typ=
e=3D"datetime"], input[type=3D"datetime-local"], input[type=3D"date"], inpu=
t[type=3D"month"], input[type=3D"time"], input[type=3D"week"], input[type=
=3D"number"], input[type=3D"email"], input[type=3D"url"], input[type=3D"sea=
rch"], input[type=3D"tel"], input[type=3D"color"], .uneditable-input { disp=
lay: inline-block; height: 20px; padding: 4px 6px; margin-bottom: 9px; font=
-size: 14px; line-height: 20px; color: rgb(85, 85, 85); border-radius: 3px;=
 }

input, textarea, .uneditable-input { width: 206px; }

textarea { height: auto; }

textarea, input[type=3D"text"], input[type=3D"password"], input[type=3D"dat=
etime"], input[type=3D"datetime-local"], input[type=3D"date"], input[type=
=3D"month"], input[type=3D"time"], input[type=3D"week"], input[type=3D"numb=
er"], input[type=3D"email"], input[type=3D"url"], input[type=3D"search"], i=
nput[type=3D"tel"], input[type=3D"color"], .uneditable-input { background-c=
olor: rgb(255, 255, 255); border: 1px solid rgb(204, 204, 204); box-shadow:=
 rgba(0, 0, 0, 0.075) 0px 1px 1px inset; transition: border 0.2s linear 0s,=
 box-shadow 0.2s linear 0s; }

textarea:focus, input[type=3D"text"]:focus, input[type=3D"password"]:focus,=
 input[type=3D"datetime"]:focus, input[type=3D"datetime-local"]:focus, inpu=
t[type=3D"date"]:focus, input[type=3D"month"]:focus, input[type=3D"time"]:f=
ocus, input[type=3D"week"]:focus, input[type=3D"number"]:focus, input[type=
=3D"email"]:focus, input[type=3D"url"]:focus, input[type=3D"search"]:focus,=
 input[type=3D"tel"]:focus, input[type=3D"color"]:focus, .uneditable-input:=
focus { border-color: rgba(82, 168, 236, 0.8); outline: 0px; box-shadow: rg=
ba(0, 0, 0, 0.075) 0px 1px 1px inset, rgba(82, 168, 236, 0.6) 0px 0px 8px; =
}

input[type=3D"radio"], input[type=3D"checkbox"] { margin: 4px 0px 0px; line=
-height: normal; cursor: pointer; }

input[type=3D"file"], input[type=3D"image"], input[type=3D"submit"], input[=
type=3D"reset"], input[type=3D"button"], input[type=3D"radio"], input[type=
=3D"checkbox"] { width: auto; }

select, input[type=3D"file"] { height: 30px; line-height: 30px; }

select { width: 220px; background-color: rgb(255, 255, 255); border: 1px so=
lid rgb(204, 204, 204); }

select[multiple], select[size] { height: auto; }

select:focus, input[type=3D"file"]:focus, input[type=3D"radio"]:focus, inpu=
t[type=3D"checkbox"]:focus { outline: -webkit-focus-ring-color auto 5px; ou=
tline-offset: -2px; }

.uneditable-input, .uneditable-textarea { color: rgb(153, 153, 153); cursor=
: not-allowed; background-color: rgb(252, 252, 252); border-color: rgb(204,=
 204, 204); box-shadow: rgba(0, 0, 0, 0.024) 0px 1px 2px inset; }

.uneditable-input { overflow: hidden; white-space: nowrap; }

.uneditable-textarea { width: auto; height: auto; }

input::-webkit-input-placeholder, textarea::-webkit-input-placeholder { col=
or: rgb(153, 153, 153); }

.radio, .checkbox { min-height: 18px; padding-left: 18px; }

.radio input[type=3D"radio"], .checkbox input[type=3D"checkbox"] { float: l=
eft; margin-left: -18px; }

.controls > .radio:first-child, .controls > .checkbox:first-child { padding=
-top: 5px; }

.radio.inline, .checkbox.inline { display: inline-block; padding-top: 5px; =
margin-bottom: 0px; vertical-align: middle; }

.radio.inline + .radio.inline, .checkbox.inline + .checkbox.inline { margin=
-left: 10px; }

.input-mini { width: 60px; }

.input-small { width: 90px; }

.input-medium { width: 150px; }

.input-large { width: 210px; }

.input-xlarge { width: 270px; }

.input-xxlarge { width: 530px; }

input[class*=3D"span"], select[class*=3D"span"], textarea[class*=3D"span"],=
 .uneditable-input[class*=3D"span"], .row-fluid input[class*=3D"span"], .ro=
w-fluid select[class*=3D"span"], .row-fluid textarea[class*=3D"span"], .row=
-fluid .uneditable-input[class*=3D"span"] { float: none; margin-left: 0px; =
}

.input-append input[class*=3D"span"], .input-append .uneditable-input[class=
*=3D"span"], .input-prepend input[class*=3D"span"], .input-prepend .unedita=
ble-input[class*=3D"span"], .row-fluid input[class*=3D"span"], .row-fluid s=
elect[class*=3D"span"], .row-fluid textarea[class*=3D"span"], .row-fluid .u=
neditable-input[class*=3D"span"], .row-fluid .input-prepend [class*=3D"span=
"], .row-fluid .input-append [class*=3D"span"] { display: inline-block; }

input, textarea, .uneditable-input { margin-left: 0px; }

.controls-row [class*=3D"span"] + [class*=3D"span"] { margin-left: 20px; }

input.span12, textarea.span12, .uneditable-input.span12 { width: 926px; }

input.span11, textarea.span11, .uneditable-input.span11 { width: 846px; }

input.span10, textarea.span10, .uneditable-input.span10 { width: 766px; }

input.span9, textarea.span9, .uneditable-input.span9 { width: 686px; }

input.span8, textarea.span8, .uneditable-input.span8 { width: 606px; }

input.span7, textarea.span7, .uneditable-input.span7 { width: 526px; }

input.span6, textarea.span6, .uneditable-input.span6 { width: 446px; }

input.span5, textarea.span5, .uneditable-input.span5 { width: 366px; }

input.span4, textarea.span4, .uneditable-input.span4 { width: 286px; }

input.span3, textarea.span3, .uneditable-input.span3 { width: 206px; }

input.span2, textarea.span2, .uneditable-input.span2 { width: 126px; }

input.span1, textarea.span1, .uneditable-input.span1 { width: 46px; }

.controls-row { }

.controls-row::before, .controls-row::after { display: table; line-height: =
0; content: ""; }

.controls-row::after { clear: both; }

.controls-row [class*=3D"span"] { float: left; }

input[disabled], select[disabled], textarea[disabled], input[readonly], sel=
ect[readonly], textarea[readonly] { cursor: not-allowed; background-color: =
rgb(238, 238, 238); }

input[type=3D"radio"][disabled], input[type=3D"checkbox"][disabled], input[=
type=3D"radio"][readonly], input[type=3D"checkbox"][readonly] { background-=
color: transparent; }

.control-group.warning > label, .control-group.warning .help-block, .contro=
l-group.warning .help-inline { color: rgb(192, 152, 83); }

.control-group.warning .checkbox, .control-group.warning .radio, .control-g=
roup.warning input, .control-group.warning select, .control-group.warning t=
extarea { color: rgb(192, 152, 83); }

.control-group.warning input, .control-group.warning select, .control-group=
.warning textarea { border-color: rgb(192, 152, 83); box-shadow: rgba(0, 0,=
 0, 0.075) 0px 1px 1px inset; }

.control-group.warning input:focus, .control-group.warning select:focus, .c=
ontrol-group.warning textarea:focus { border-color: rgb(164, 126, 60); box-=
shadow: rgba(0, 0, 0, 0.075) 0px 1px 1px inset, rgb(219, 197, 158) 0px 0px =
6px; }

.control-group.warning .input-prepend .add-on, .control-group.warning .inpu=
t-append .add-on { color: rgb(192, 152, 83); background-color: rgb(252, 248=
, 227); border-color: rgb(192, 152, 83); }

.control-group.error > label, .control-group.error .help-block, .control-gr=
oup.error .help-inline { color: rgb(185, 74, 72); }

.control-group.error .checkbox, .control-group.error .radio, .control-group=
.error input, .control-group.error select, .control-group.error textarea { =
color: rgb(185, 74, 72); }

.control-group.error input, .control-group.error select, .control-group.err=
or textarea { border-color: rgb(185, 74, 72); box-shadow: rgba(0, 0, 0, 0.0=
75) 0px 1px 1px inset; }

.control-group.error input:focus, .control-group.error select:focus, .contr=
ol-group.error textarea:focus { border-color: rgb(149, 59, 57); box-shadow:=
 rgba(0, 0, 0, 0.075) 0px 1px 1px inset, rgb(213, 147, 146) 0px 0px 6px; }

.control-group.error .input-prepend .add-on, .control-group.error .input-ap=
pend .add-on { color: rgb(185, 74, 72); background-color: rgb(242, 222, 222=
); border-color: rgb(185, 74, 72); }

.control-group.success > label, .control-group.success .help-block, .contro=
l-group.success .help-inline { color: rgb(70, 136, 71); }

.control-group.success .checkbox, .control-group.success .radio, .control-g=
roup.success input, .control-group.success select, .control-group.success t=
extarea { color: rgb(70, 136, 71); }

.control-group.success input, .control-group.success select, .control-group=
.success textarea { border-color: rgb(70, 136, 71); box-shadow: rgba(0, 0, =
0, 0.075) 0px 1px 1px inset; }

.control-group.success input:focus, .control-group.success select:focus, .c=
ontrol-group.success textarea:focus { border-color: rgb(53, 102, 53); box-s=
hadow: rgba(0, 0, 0, 0.075) 0px 1px 1px inset, rgb(122, 186, 123) 0px 0px 6=
px; }

.control-group.success .input-prepend .add-on, .control-group.success .inpu=
t-append .add-on { color: rgb(70, 136, 71); background-color: rgb(223, 240,=
 216); border-color: rgb(70, 136, 71); }

.control-group.info > label, .control-group.info .help-block, .control-grou=
p.info .help-inline { color: rgb(58, 135, 173); }

.control-group.info .checkbox, .control-group.info .radio, .control-group.i=
nfo input, .control-group.info select, .control-group.info textarea { color=
: rgb(58, 135, 173); }

.control-group.info input, .control-group.info select, .control-group.info =
textarea { border-color: rgb(58, 135, 173); box-shadow: rgba(0, 0, 0, 0.075=
) 0px 1px 1px inset; }

.control-group.info input:focus, .control-group.info select:focus, .control=
-group.info textarea:focus { border-color: rgb(45, 105, 135); box-shadow: r=
gba(0, 0, 0, 0.075) 0px 1px 1px inset, rgb(122, 181, 211) 0px 0px 6px; }

.control-group.info .input-prepend .add-on, .control-group.info .input-appe=
nd .add-on { color: rgb(58, 135, 173); background-color: rgb(217, 237, 247)=
; border-color: rgb(58, 135, 173); }

input:focus:required:invalid, textarea:focus:required:invalid, select:focus=
:required:invalid { color: rgb(185, 74, 72); border-color: rgb(238, 95, 91)=
; }

input:focus:required:invalid:focus, textarea:focus:required:invalid:focus, =
select:focus:required:invalid:focus { border-color: rgb(233, 50, 45); box-s=
hadow: rgb(248, 185, 183) 0px 0px 6px; }

.form-actions { padding: 19px 20px 20px; margin-top: 20px; margin-bottom: 2=
0px; background-color: rgb(245, 245, 245); border-top: 1px solid rgb(229, 2=
29, 229); }

.form-actions::before, .form-actions::after { display: table; line-height: =
0; content: ""; }

.form-actions::after { clear: both; }

.help-block, .help-inline { color: rgb(89, 89, 89); }

.help-block { display: block; margin-bottom: 10px; }

.help-inline { display: inline-block; padding-left: 5px; vertical-align: mi=
ddle; }

.input-append, .input-prepend { margin-bottom: 5px; font-size: 0px; white-s=
pace: nowrap; }

.input-append input, .input-prepend input, .input-append select, .input-pre=
pend select, .input-append .uneditable-input, .input-prepend .uneditable-in=
put { position: relative; margin-bottom: 0px; font-size: 14px; vertical-ali=
gn: top; border-radius: 0px 3px 3px 0px; }

.input-append input:focus, .input-prepend input:focus, .input-append select=
:focus, .input-prepend select:focus, .input-append .uneditable-input:focus,=
 .input-prepend .uneditable-input:focus { z-index: 2; }

.input-append .add-on, .input-prepend .add-on { display: inline-block; widt=
h: auto; height: 20px; min-width: 16px; padding: 4px 5px; font-size: 14px; =
font-weight: normal; line-height: 20px; text-align: center; text-shadow: rg=
b(255, 255, 255) 0px 1px 0px; background-color: rgb(238, 238, 238); border:=
 1px solid rgb(204, 204, 204); }

.input-append .add-on, .input-prepend .add-on, .input-append .btn, .input-p=
repend .btn { vertical-align: top; border-radius: 0px; }

.input-append .active, .input-prepend .active { background-color: rgb(169, =
219, 169); border-color: rgb(70, 165, 70); }

.input-prepend .add-on, .input-prepend .btn { margin-right: -1px; }

.input-prepend .add-on:first-child, .input-prepend .btn:first-child { borde=
r-radius: 3px 0px 0px 3px; }

.input-append input, .input-append select, .input-append .uneditable-input =
{ border-radius: 3px 0px 0px 3px; }

.input-append .add-on, .input-append .btn { margin-left: -1px; }

.input-append .add-on:last-child, .input-append .btn:last-child { border-ra=
dius: 0px 3px 3px 0px; }

.input-prepend.input-append input, .input-prepend.input-append select, .inp=
ut-prepend.input-append .uneditable-input { border-radius: 0px; }

.input-prepend.input-append .add-on:first-child, .input-prepend.input-appen=
d .btn:first-child { margin-right: -1px; border-radius: 3px 0px 0px 3px; }

.input-prepend.input-append .add-on:last-child, .input-prepend.input-append=
 .btn:last-child { margin-left: -1px; border-radius: 0px 3px 3px 0px; }

input.search-query { padding-right: 14px; padding-left: 14px; margin-bottom=
: 0px; border-radius: 15px; }

.form-search .input-append .search-query, .form-search .input-prepend .sear=
ch-query { border-radius: 0px; }

.form-search .input-append .search-query { border-radius: 14px 0px 0px 14px=
; }

.form-search .input-append .btn { border-radius: 0px 14px 14px 0px; }

.form-search .input-prepend .search-query { border-radius: 0px 14px 14px 0p=
x; }

.form-search .input-prepend .btn { border-radius: 14px 0px 0px 14px; }

.form-search input, .form-inline input, .form-horizontal input, .form-searc=
h textarea, .form-inline textarea, .form-horizontal textarea, .form-search =
select, .form-inline select, .form-horizontal select, .form-search .help-in=
line, .form-inline .help-inline, .form-horizontal .help-inline, .form-searc=
h .uneditable-input, .form-inline .uneditable-input, .form-horizontal .uned=
itable-input, .form-search .input-prepend, .form-inline .input-prepend, .fo=
rm-horizontal .input-prepend, .form-search .input-append, .form-inline .inp=
ut-append, .form-horizontal .input-append { display: inline-block; margin-b=
ottom: 0px; vertical-align: middle; }

.form-search .hide, .form-inline .hide, .form-horizontal .hide { display: n=
one; }

.form-search label, .form-inline label, .form-search .btn-group, .form-inli=
ne .btn-group { display: inline-block; }

.form-search .input-append, .form-inline .input-append, .form-search .input=
-prepend, .form-inline .input-prepend { margin-bottom: 0px; }

.form-search .radio, .form-search .checkbox, .form-inline .radio, .form-inl=
ine .checkbox { padding-left: 0px; margin-bottom: 0px; vertical-align: midd=
le; }

.form-search .radio input[type=3D"radio"], .form-search .checkbox input[typ=
e=3D"checkbox"], .form-inline .radio input[type=3D"radio"], .form-inline .c=
heckbox input[type=3D"checkbox"] { float: left; margin-right: 3px; margin-l=
eft: 0px; }

.control-group { margin-bottom: 10px; }

legend + .control-group { margin-top: 20px; }

.form-horizontal .control-group { margin-bottom: 20px; }

.form-horizontal .control-group::before, .form-horizontal .control-group::a=
fter { display: table; line-height: 0; content: ""; }

.form-horizontal .control-group::after { clear: both; }

.form-horizontal .control-label { float: left; width: 160px; padding-top: 5=
px; text-align: right; }

.form-horizontal .controls { margin-left: 180px; }

.form-horizontal .controls:first-child { }

.form-horizontal .help-block { margin-bottom: 0px; }

.form-horizontal input + .help-block, .form-horizontal select + .help-block=
, .form-horizontal textarea + .help-block { margin-top: 10px; }

.form-horizontal .form-actions { padding-left: 180px; }

table { max-width: 100%; background-color: transparent; border-collapse: co=
llapse; border-spacing: 0px; }

.table { width: 100%; margin-bottom: 20px; }

.table th, .table td { padding: 8px; line-height: 20px; text-align: left; v=
ertical-align: top; border-top: 1px solid rgb(221, 221, 221); }

.table th { font-weight: bold; }

.table thead th { vertical-align: bottom; }

.table caption + thead tr:first-child th, .table caption + thead tr:first-c=
hild td, .table colgroup + thead tr:first-child th, .table colgroup + thead=
 tr:first-child td, .table thead:first-child tr:first-child th, .table thea=
d:first-child tr:first-child td { border-top: 0px; }

.table tbody + tbody { border-top: 2px solid rgb(221, 221, 221); }

.table-condensed th, .table-condensed td { padding: 4px 5px; }

.table-bordered { border-width: 1px 1px 1px 0px; border-top-style: solid; b=
order-right-style: solid; border-bottom-style: solid; border-top-color: rgb=
(221, 221, 221); border-right-color: rgb(221, 221, 221); border-bottom-colo=
r: rgb(221, 221, 221); border-image: initial; border-collapse: separate; bo=
rder-left-style: initial; border-left-color: initial; border-radius: 4px; }

.table-bordered th, .table-bordered td { border-left: 1px solid rgb(221, 22=
1, 221); }

.table-bordered caption + thead tr:first-child th, .table-bordered caption =
+ tbody tr:first-child th, .table-bordered caption + tbody tr:first-child t=
d, .table-bordered colgroup + thead tr:first-child th, .table-bordered colg=
roup + tbody tr:first-child th, .table-bordered colgroup + tbody tr:first-c=
hild td, .table-bordered thead:first-child tr:first-child th, .table-border=
ed tbody:first-child tr:first-child th, .table-bordered tbody:first-child t=
r:first-child td { border-top: 0px; }

.table-bordered thead:first-child tr:first-child th:first-child, .table-bor=
dered tbody:first-child tr:first-child td:first-child { border-top-left-rad=
ius: 4px; }

.table-bordered thead:first-child tr:first-child th:last-child, .table-bord=
ered tbody:first-child tr:first-child td:last-child { border-top-right-radi=
us: 4px; }

.table-bordered thead:last-child tr:last-child th:first-child, .table-borde=
red tbody:last-child tr:last-child td:first-child, .table-bordered tfoot:la=
st-child tr:last-child td:first-child { border-radius: 0px 0px 0px 4px; }

.table-bordered thead:last-child tr:last-child th:last-child, .table-border=
ed tbody:last-child tr:last-child td:last-child, .table-bordered tfoot:last=
-child tr:last-child td:last-child { border-bottom-right-radius: 4px; }

.table-bordered caption + thead tr:first-child th:first-child, .table-borde=
red caption + tbody tr:first-child td:first-child, .table-bordered colgroup=
 + thead tr:first-child th:first-child, .table-bordered colgroup + tbody tr=
:first-child td:first-child { border-top-left-radius: 4px; }

.table-bordered caption + thead tr:first-child th:last-child, .table-border=
ed caption + tbody tr:first-child td:last-child, .table-bordered colgroup +=
 thead tr:first-child th:last-child, .table-bordered colgroup + tbody tr:fi=
rst-child td:last-child { border-top-right-radius: 4px; }

.table-striped tbody tr:nth-child(2n+1) td, .table-striped tbody tr:nth-chi=
ld(2n+1) th { background-color: rgb(249, 249, 249); }

.table-hover tbody tr:hover td, .table-hover tbody tr:hover th { background=
-color: rgb(245, 245, 245); }

table [class*=3D"span"], .row-fluid table [class*=3D"span"] { display: tabl=
e-cell; float: none; margin-left: 0px; }

.table .span1 { float: none; width: 44px; margin-left: 0px; }

.table .span2 { float: none; width: 124px; margin-left: 0px; }

.table .span3 { float: none; width: 204px; margin-left: 0px; }

.table .span4 { float: none; width: 284px; margin-left: 0px; }

.table .span5 { float: none; width: 364px; margin-left: 0px; }

.table .span6 { float: none; width: 444px; margin-left: 0px; }

.table .span7 { float: none; width: 524px; margin-left: 0px; }

.table .span8 { float: none; width: 604px; margin-left: 0px; }

.table .span9 { float: none; width: 684px; margin-left: 0px; }

.table .span10 { float: none; width: 764px; margin-left: 0px; }

.table .span11 { float: none; width: 844px; margin-left: 0px; }

.table .span12 { float: none; width: 924px; margin-left: 0px; }

.table .span13 { float: none; width: 1004px; margin-left: 0px; }

.table .span14 { float: none; width: 1084px; margin-left: 0px; }

.table .span15 { float: none; width: 1164px; margin-left: 0px; }

.table .span16 { float: none; width: 1244px; margin-left: 0px; }

.table .span17 { float: none; width: 1324px; margin-left: 0px; }

.table .span18 { float: none; width: 1404px; margin-left: 0px; }

.table .span19 { float: none; width: 1484px; margin-left: 0px; }

.table .span20 { float: none; width: 1564px; margin-left: 0px; }

.table .span21 { float: none; width: 1644px; margin-left: 0px; }

.table .span22 { float: none; width: 1724px; margin-left: 0px; }

.table .span23 { float: none; width: 1804px; margin-left: 0px; }

.table .span24 { float: none; width: 1884px; margin-left: 0px; }

.table tbody tr.success td { background-color: rgb(223, 240, 216); }

.table tbody tr.error td { background-color: rgb(242, 222, 222); }

.table tbody tr.warning td { background-color: rgb(252, 248, 227); }

.table tbody tr.info td { background-color: rgb(217, 237, 247); }

.table-hover tbody tr.success:hover td { background-color: rgb(208, 233, 19=
8); }

.table-hover tbody tr.error:hover td { background-color: rgb(235, 204, 204)=
; }

.table-hover tbody tr.warning:hover td { background-color: rgb(250, 242, 20=
4); }

.table-hover tbody tr.info:hover td { background-color: rgb(196, 227, 243);=
 }

[class^=3D"icon-"], [class*=3D" icon-"] { display: inline-block; width: 14p=
x; height: 14px; margin-top: 1px; line-height: 14px; vertical-align: text-t=
op; background-image: url("../img/glyphicons-halflings.png"); background-po=
sition: 14px 14px; background-repeat: no-repeat; }

.icon-white, .nav-tabs > .active > a > [class^=3D"icon-"], .nav-tabs > .act=
ive > a > [class*=3D" icon-"], .nav-pills > .active > a > [class^=3D"icon-"=
], .nav-pills > .active > a > [class*=3D" icon-"], .nav-list > .active > a =
> [class^=3D"icon-"], .nav-list > .active > a > [class*=3D" icon-"], .navba=
r-inverse .nav > .active > a > [class^=3D"icon-"], .navbar-inverse .nav > .=
active > a > [class*=3D" icon-"], .dropdown-menu > li > a:hover > [class^=
=3D"icon-"], .dropdown-menu > li > a:hover > [class*=3D" icon-"], .dropdown=
-menu > .active > a > [class^=3D"icon-"], .dropdown-menu > .active > a > [c=
lass*=3D" icon-"] { background-image: url("../img/glyphicons-halflings-whit=
e.png"); }

.icon-glass { background-position: 0px 0px; }

.icon-music { background-position: -24px 0px; }

.icon-search { background-position: -48px 0px; }

.icon-envelope { background-position: -72px 0px; }

.icon-heart { background-position: -96px 0px; }

.icon-star { background-position: -120px 0px; }

.icon-star-empty { background-position: -144px 0px; }

.icon-user { background-position: -168px 0px; }

.icon-film { background-position: -192px 0px; }

.icon-th-large { background-position: -216px 0px; }

.icon-th { background-position: -240px 0px; }

.icon-th-list { background-position: -264px 0px; }

.icon-ok { background-position: -288px 0px; }

.icon-remove { background-position: -312px 0px; }

.icon-zoom-in { background-position: -336px 0px; }

.icon-zoom-out { background-position: -360px 0px; }

.icon-off { background-position: -384px 0px; }

.icon-signal { background-position: -408px 0px; }

.icon-cog { background-position: -432px 0px; }

.icon-trash { background-position: -456px 0px; }

.icon-home { background-position: 0px -24px; }

.icon-file { background-position: -24px -24px; }

.icon-time { background-position: -48px -24px; }

.icon-road { background-position: -72px -24px; }

.icon-download-alt { background-position: -96px -24px; }

.icon-download { background-position: -120px -24px; }

.icon-upload { background-position: -144px -24px; }

.icon-inbox { background-position: -168px -24px; }

.icon-play-circle { background-position: -192px -24px; }

.icon-repeat { background-position: -216px -24px; }

.icon-refresh { background-position: -240px -24px; }

.icon-list-alt { background-position: -264px -24px; }

.icon-lock { background-position: -287px -24px; }

.icon-flag { background-position: -312px -24px; }

.icon-headphones { background-position: -336px -24px; }

.icon-volume-off { background-position: -360px -24px; }

.icon-volume-down { background-position: -384px -24px; }

.icon-volume-up { background-position: -408px -24px; }

.icon-qrcode { background-position: -432px -24px; }

.icon-barcode { background-position: -456px -24px; }

.icon-tag { background-position: 0px -48px; }

.icon-tags { background-position: -25px -48px; }

.icon-book { background-position: -48px -48px; }

.icon-bookmark { background-position: -72px -48px; }

.icon-print { background-position: -96px -48px; }

.icon-camera { background-position: -120px -48px; }

.icon-font { background-position: -144px -48px; }

.icon-bold { background-position: -167px -48px; }

.icon-italic { background-position: -192px -48px; }

.icon-text-height { background-position: -216px -48px; }

.icon-text-width { background-position: -240px -48px; }

.icon-align-left { background-position: -264px -48px; }

.icon-align-center { background-position: -288px -48px; }

.icon-align-right { background-position: -312px -48px; }

.icon-align-justify { background-position: -336px -48px; }

.icon-list { background-position: -360px -48px; }

.icon-indent-left { background-position: -384px -48px; }

.icon-indent-right { background-position: -408px -48px; }

.icon-facetime-video { background-position: -432px -48px; }

.icon-picture { background-position: -456px -48px; }

.icon-pencil { background-position: 0px -72px; }

.icon-map-marker { background-position: -24px -72px; }

.icon-adjust { background-position: -48px -72px; }

.icon-tint { background-position: -72px -72px; }

.icon-edit { background-position: -96px -72px; }

.icon-share { background-position: -120px -72px; }

.icon-check { background-position: -144px -72px; }

.icon-move { background-position: -168px -72px; }

.icon-step-backward { background-position: -192px -72px; }

.icon-fast-backward { background-position: -216px -72px; }

.icon-backward { background-position: -240px -72px; }

.icon-play { background-position: -264px -72px; }

.icon-pause { background-position: -288px -72px; }

.icon-stop { background-position: -312px -72px; }

.icon-forward { background-position: -336px -72px; }

.icon-fast-forward { background-position: -360px -72px; }

.icon-step-forward { background-position: -384px -72px; }

.icon-eject { background-position: -408px -72px; }

.icon-chevron-left { background-position: -432px -72px; }

.icon-chevron-right { background-position: -456px -72px; }

.icon-plus-sign { background-position: 0px -96px; }

.icon-minus-sign { background-position: -24px -96px; }

.icon-remove-sign { background-position: -48px -96px; }

.icon-ok-sign { background-position: -72px -96px; }

.icon-question-sign { background-position: -96px -96px; }

.icon-info-sign { background-position: -120px -96px; }

.icon-screenshot { background-position: -144px -96px; }

.icon-remove-circle { background-position: -168px -96px; }

.icon-ok-circle { background-position: -192px -96px; }

.icon-ban-circle { background-position: -216px -96px; }

.icon-arrow-left { background-position: -240px -96px; }

.icon-arrow-right { background-position: -264px -96px; }

.icon-arrow-up { background-position: -289px -96px; }

.icon-arrow-down { background-position: -312px -96px; }

.icon-share-alt { background-position: -336px -96px; }

.icon-resize-full { background-position: -360px -96px; }

.icon-resize-small { background-position: -384px -96px; }

.icon-plus { background-position: -408px -96px; }

.icon-minus { background-position: -433px -96px; }

.icon-asterisk { background-position: -456px -96px; }

.icon-exclamation-sign { background-position: 0px -120px; }

.icon-gift { background-position: -24px -120px; }

.icon-leaf { background-position: -48px -120px; }

.icon-fire { background-position: -72px -120px; }

.icon-eye-open { background-position: -96px -120px; }

.icon-eye-close { background-position: -120px -120px; }

.icon-warning-sign { background-position: -144px -120px; }

.icon-plane { background-position: -168px -120px; }

.icon-calendar { background-position: -192px -120px; }

.icon-random { width: 16px; background-position: -216px -120px; }

.icon-comment { background-position: -240px -120px; }

.icon-magnet { background-position: -264px -120px; }

.icon-chevron-up { background-position: -288px -120px; }

.icon-chevron-down { background-position: -313px -119px; }

.icon-retweet { background-position: -336px -120px; }

.icon-shopping-cart { background-position: -360px -120px; }

.icon-folder-close { background-position: -384px -120px; }

.icon-folder-open { width: 16px; background-position: -408px -120px; }

.icon-resize-vertical { background-position: -432px -119px; }

.icon-resize-horizontal { background-position: -456px -118px; }

.icon-hdd { background-position: 0px -144px; }

.icon-bullhorn { background-position: -24px -144px; }

.icon-bell { background-position: -48px -144px; }

.icon-certificate { background-position: -72px -144px; }

.icon-thumbs-up { background-position: -96px -144px; }

.icon-thumbs-down { background-position: -120px -144px; }

.icon-hand-right { background-position: -144px -144px; }

.icon-hand-left { background-position: -168px -144px; }

.icon-hand-up { background-position: -192px -144px; }

.icon-hand-down { background-position: -216px -144px; }

.icon-circle-arrow-right { background-position: -240px -144px; }

.icon-circle-arrow-left { background-position: -264px -144px; }

.icon-circle-arrow-up { background-position: -288px -144px; }

.icon-circle-arrow-down { background-position: -312px -144px; }

.icon-globe { background-position: -336px -144px; }

.icon-wrench { background-position: -360px -144px; }

.icon-tasks { background-position: -384px -144px; }

.icon-filter { background-position: -408px -144px; }

.icon-briefcase { background-position: -432px -144px; }

.icon-fullscreen { background-position: -456px -144px; }

.dropup, .dropdown { position: relative; }

.dropdown-toggle { }

.dropdown-toggle:active, .open .dropdown-toggle { outline: 0px; }

.caret { display: inline-block; width: 0px; height: 0px; vertical-align: to=
p; border-top: 4px solid rgb(0, 0, 0); border-right: 4px solid transparent;=
 border-left: 4px solid transparent; content: ""; }

.dropdown .caret { margin-top: 8px; margin-left: 2px; }

.dropdown-menu { position: absolute; top: 100%; left: 0px; z-index: 1000; d=
isplay: none; float: left; min-width: 160px; padding: 5px 0px; margin: 2px =
0px 0px; list-style: none; background-color: rgb(255, 255, 255); border: 1p=
x solid rgba(0, 0, 0, 0.2); border-radius: 6px; box-shadow: rgba(0, 0, 0, 0=
.2) 0px 5px 10px; background-clip: padding-box; }

.dropdown-menu.pull-right { right: 0px; left: auto; }

.dropdown-menu .divider { height: 1px; margin: 9px 1px; overflow: hidden; b=
ackground-color: rgb(229, 229, 229); border-bottom: 1px solid rgb(255, 255,=
 255); }

.dropdown-menu a { display: block; padding: 3px 20px; clear: both; font-wei=
ght: normal; line-height: 20px; color: rgb(51, 51, 51); white-space: nowrap=
; }

.dropdown-menu li > a:hover, .dropdown-menu li > a:focus, .dropdown-submenu=
:hover > a { color: rgb(255, 255, 255); text-decoration: none; background-c=
olor: rgb(0, 129, 194); background-image: linear-gradient(rgb(0, 136, 204),=
 rgb(0, 119, 179)); background-repeat: repeat-x; }

.dropdown-menu .active > a, .dropdown-menu .active > a:hover { color: rgb(2=
55, 255, 255); text-decoration: none; background-color: rgb(0, 129, 194); b=
ackground-image: -webkit-linear-gradient(top, rgb(0, 136, 204), rgb(0, 119,=
 179)); background-repeat: repeat-x; outline: 0px; }

.dropdown-menu .disabled > a, .dropdown-menu .disabled > a:hover { color: r=
gb(153, 153, 153); }

.dropdown-menu .disabled > a:hover { text-decoration: none; cursor: default=
; background-color: transparent; }

.open { }

.open > .dropdown-menu { display: block; }

.pull-right > .dropdown-menu { right: 0px; left: auto; }

.dropup .caret, .navbar-fixed-bottom .dropdown .caret { border-top: 0px; bo=
rder-bottom: 4px solid rgb(0, 0, 0); content: ""; }

.dropup .dropdown-menu, .navbar-fixed-bottom .dropdown .dropdown-menu { top=
: auto; bottom: 100%; margin-bottom: 1px; }

.dropdown-submenu { position: relative; }

.dropdown-submenu > .dropdown-menu { top: 0px; left: 100%; margin-top: -6px=
; margin-left: -1px; border-radius: 0px 6px 6px; }

.dropdown-submenu:hover > .dropdown-menu { display: block; }

.dropdown-submenu > a::after { display: block; float: right; width: 0px; he=
ight: 0px; margin-top: 5px; margin-right: -10px; border-color: transparent =
transparent transparent rgb(204, 204, 204); border-style: solid; border-wid=
th: 5px 0px 5px 5px; content: " "; }

.dropdown-submenu:hover > a::after { border-left-color: rgb(255, 255, 255);=
 }

.dropdown .dropdown-menu .nav-header { padding-right: 20px; padding-left: 2=
0px; }

.typeahead { margin-top: 2px; border-radius: 4px; }

.well { min-height: 20px; padding: 19px; margin-bottom: 20px; background-co=
lor: rgb(245, 245, 245); border: 1px solid rgb(227, 227, 227); border-radiu=
s: 4px; box-shadow: rgba(0, 0, 0, 0.05) 0px 1px 1px inset; }

.well blockquote { border-color: rgba(0, 0, 0, 0.15); }

.well-large { padding: 24px; border-radius: 6px; }

.well-small { padding: 9px; border-radius: 3px; }

.fade { opacity: 0; transition: opacity 0.15s linear 0s; }

.fade.in { opacity: 1; }

.collapse { position: relative; height: 0px; overflow: hidden; transition: =
height 0.35s ease 0s; }

.collapse.in { height: auto; }

.close { float: right; font-size: 20px; font-weight: bold; line-height: 20p=
x; color: rgb(0, 0, 0); text-shadow: rgb(255, 255, 255) 0px 1px 0px; opacit=
y: 0.2; }

.close:hover { color: rgb(0, 0, 0); text-decoration: none; cursor: pointer;=
 opacity: 0.4; }

button.close { padding: 0px; cursor: pointer; background: transparent; bord=
er: 0px; appearance: none; }

.btn { display: inline-block; padding: 4px 14px; margin-bottom: 0px; font-s=
ize: 14px; line-height: 20px; color: rgb(51, 51, 51); text-align: center; t=
ext-shadow: rgba(255, 255, 255, 0.75) 0px 1px 1px; vertical-align: middle; =
cursor: pointer; background-color: rgb(245, 245, 245); background-image: li=
near-gradient(rgb(255, 255, 255), rgb(230, 230, 230)); background-repeat: r=
epeat-x; border-width: 1px; border-style: solid; border-image: initial; bor=
der-color: rgb(230, 230, 230) rgb(230, 230, 230) rgb(162, 162, 162); border=
-radius: 4px; box-shadow: rgba(255, 255, 255, 0.2) 0px 1px 0px inset, rgba(=
0, 0, 0, 0.05) 0px 1px 2px; }

.btn:hover, .btn:active, .btn.active, .btn.disabled, .btn[disabled] { color=
: rgb(51, 51, 51); background-color: rgb(230, 230, 230); }

.btn:active, .btn.active { }

.btn:first-child { }

.btn:hover { color: rgb(51, 51, 51); text-decoration: none; background-colo=
r: rgb(230, 230, 230); background-position: 0px -15px; transition: backgrou=
nd-position 0.1s linear 0s; }

.btn:focus { outline: -webkit-focus-ring-color auto 5px; outline-offset: -2=
px; }

.btn.active, .btn:active { background-color: rgb(230, 230, 230); background=
-image: none; outline: 0px; box-shadow: rgba(0, 0, 0, 0.15) 0px 2px 4px ins=
et, rgba(0, 0, 0, 0.05) 0px 1px 2px; }

.btn.disabled, .btn[disabled] { cursor: default; background-color: rgb(230,=
 230, 230); background-image: none; opacity: 0.65; box-shadow: none; }

.btn-large { padding: 9px 14px; font-size: 16px; line-height: normal; borde=
r-radius: 5px; }

.btn-large [class^=3D"icon-"] { margin-top: 2px; }

.btn-small { padding: 3px 9px; font-size: 12px; line-height: 18px; }

.btn-small [class^=3D"icon-"] { margin-top: 0px; }

.btn-mini { padding: 2px 6px; font-size: 11px; line-height: 17px; }

.btn-block { display: block; width: 100%; padding-right: 0px; padding-left:=
 0px; box-sizing: border-box; }

.btn-block + .btn-block { margin-top: 5px; }

input[type=3D"submit"].btn-block, input[type=3D"reset"].btn-block, input[ty=
pe=3D"button"].btn-block { width: 100%; }

.btn-primary.active, .btn-warning.active, .btn-danger.active, .btn-success.=
active, .btn-info.active, .btn-inverse.active { color: rgba(255, 255, 255, =
0.75); }

.btn { border-color: rgba(0, 0, 0, 0.15) rgba(0, 0, 0, 0.15) rgba(0, 0, 0, =
0.25); }

.btn-primary { color: rgb(255, 255, 255); text-shadow: rgba(0, 0, 0, 0.25) =
0px -1px 0px; background-color: rgb(0, 109, 204); background-image: linear-=
gradient(rgb(0, 136, 204), rgb(0, 68, 204)); background-repeat: repeat-x; b=
order-color: rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.25); }

.btn-primary:hover, .btn-primary:active, .btn-primary.active, .btn-primary.=
disabled, .btn-primary[disabled] { color: rgb(255, 255, 255); background-co=
lor: rgb(0, 68, 204); }

.btn-primary:active, .btn-primary.active { }

.btn-warning { color: rgb(255, 255, 255); text-shadow: rgba(0, 0, 0, 0.25) =
0px -1px 0px; background-color: rgb(250, 167, 50); background-image: linear=
-gradient(rgb(251, 180, 80), rgb(248, 148, 6)); background-repeat: repeat-x=
; border-color: rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.25); =
}

.btn-warning:hover, .btn-warning:active, .btn-warning.active, .btn-warning.=
disabled, .btn-warning[disabled] { color: rgb(255, 255, 255); background-co=
lor: rgb(248, 148, 6); }

.btn-warning:active, .btn-warning.active { }

.btn-danger { color: rgb(255, 255, 255); text-shadow: rgba(0, 0, 0, 0.25) 0=
px -1px 0px; background-color: rgb(218, 79, 73); background-image: linear-g=
radient(rgb(238, 95, 91), rgb(189, 54, 47)); background-repeat: repeat-x; b=
order-color: rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.25); }

.btn-danger:hover, .btn-danger:active, .btn-danger.active, .btn-danger.disa=
bled, .btn-danger[disabled] { color: rgb(255, 255, 255); background-color: =
rgb(189, 54, 47); }

.btn-danger:active, .btn-danger.active { }

.btn-success { color: rgb(255, 255, 255); text-shadow: rgba(0, 0, 0, 0.25) =
0px -1px 0px; background-color: rgb(91, 183, 91); background-image: linear-=
gradient(rgb(98, 196, 98), rgb(81, 163, 81)); background-repeat: repeat-x; =
border-color: rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.25); }

.btn-success:hover, .btn-success:active, .btn-success.active, .btn-success.=
disabled, .btn-success[disabled] { color: rgb(255, 255, 255); background-co=
lor: rgb(81, 163, 81); }

.btn-success:active, .btn-success.active { }

.btn-info { color: rgb(255, 255, 255); text-shadow: rgba(0, 0, 0, 0.25) 0px=
 -1px 0px; background-color: rgb(73, 175, 205); background-image: linear-gr=
adient(rgb(91, 192, 222), rgb(47, 150, 180)); background-repeat: repeat-x; =
border-color: rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.25); }

.btn-info:hover, .btn-info:active, .btn-info.active, .btn-info.disabled, .b=
tn-info[disabled] { color: rgb(255, 255, 255); background-color: rgb(47, 15=
0, 180); }

.btn-info:active, .btn-info.active { }

.btn-inverse { color: rgb(255, 255, 255); text-shadow: rgba(0, 0, 0, 0.25) =
0px -1px 0px; background-color: rgb(54, 54, 54); background-image: linear-g=
radient(rgb(68, 68, 68), rgb(34, 34, 34)); background-repeat: repeat-x; bor=
der-color: rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.25); }

.btn-inverse:hover, .btn-inverse:active, .btn-inverse.active, .btn-inverse.=
disabled, .btn-inverse[disabled] { color: rgb(255, 255, 255); background-co=
lor: rgb(34, 34, 34); }

.btn-inverse:active, .btn-inverse.active { }

button.btn, input[type=3D"submit"].btn { }

button.btn.btn-large, input[type=3D"submit"].btn.btn-large { }

button.btn.btn-small, input[type=3D"submit"].btn.btn-small { }

button.btn.btn-mini, input[type=3D"submit"].btn.btn-mini { }

.btn-link, .btn-link:active, .btn-link[disabled] { background-color: transp=
arent; background-image: none; box-shadow: none; }

.btn-link { color: rgb(0, 136, 204); cursor: pointer; border-color: transpa=
rent; border-radius: 0px; }

.btn-link:hover { color: rgb(0, 85, 128); text-decoration: underline; backg=
round-color: transparent; }

.btn-link[disabled]:hover { color: rgb(51, 51, 51); text-decoration: none; =
}

.btn-group { position: relative; font-size: 0px; white-space: nowrap; verti=
cal-align: middle; }

.btn-group:first-child { }

.btn-group + .btn-group { margin-left: 5px; }

.btn-toolbar { margin-top: 10px; margin-bottom: 10px; font-size: 0px; }

.btn-toolbar .btn-group { display: inline-block; }

.btn-toolbar .btn + .btn, .btn-toolbar .btn-group + .btn, .btn-toolbar .btn=
 + .btn-group { margin-left: 5px; }

.btn-group > .btn { position: relative; border-radius: 0px; }

.btn-group > .btn + .btn { margin-left: -1px; }

.btn-group > .btn, .btn-group > .dropdown-menu { font-size: 14px; }

.btn-group > .btn-mini { font-size: 11px; }

.btn-group > .btn-small { font-size: 12px; }

.btn-group > .btn-large { font-size: 16px; }

.btn-group > .btn:first-child { margin-left: 0px; border-bottom-left-radius=
: 4px; border-top-left-radius: 4px; }

.btn-group > .btn:last-child, .btn-group > .dropdown-toggle { border-top-ri=
ght-radius: 4px; border-bottom-right-radius: 4px; }

.btn-group > .btn.large:first-child { margin-left: 0px; border-bottom-left-=
radius: 6px; border-top-left-radius: 6px; }

.btn-group > .btn.large:last-child, .btn-group > .large.dropdown-toggle { b=
order-top-right-radius: 6px; border-bottom-right-radius: 6px; }

.btn-group > .btn:hover, .btn-group > .btn:focus, .btn-group > .btn:active,=
 .btn-group > .btn.active { z-index: 2; }

.btn-group .dropdown-toggle:active, .btn-group.open .dropdown-toggle { outl=
ine: 0px; }

.btn-group > .btn + .dropdown-toggle { padding-right: 8px; padding-left: 8p=
x; box-shadow: rgba(255, 255, 255, 0.125) 1px 0px 0px inset, rgba(255, 255,=
 255, 0.2) 0px 1px 0px inset, rgba(0, 0, 0, 0.05) 0px 1px 2px; }

.btn-group > .btn-mini + .dropdown-toggle { padding-right: 5px; padding-lef=
t: 5px; }

.btn-group > .btn-small + .dropdown-toggle { }

.btn-group > .btn-large + .dropdown-toggle { padding-right: 12px; padding-l=
eft: 12px; }

.btn-group.open .dropdown-toggle { background-image: none; box-shadow: rgba=
(0, 0, 0, 0.15) 0px 2px 4px inset, rgba(0, 0, 0, 0.05) 0px 1px 2px; }

.btn-group.open .btn.dropdown-toggle { background-color: rgb(230, 230, 230)=
; }

.btn-group.open .btn-primary.dropdown-toggle { background-color: rgb(0, 68,=
 204); }

.btn-group.open .btn-warning.dropdown-toggle { background-color: rgb(248, 1=
48, 6); }

.btn-group.open .btn-danger.dropdown-toggle { background-color: rgb(189, 54=
, 47); }

.btn-group.open .btn-success.dropdown-toggle { background-color: rgb(81, 16=
3, 81); }

.btn-group.open .btn-info.dropdown-toggle { background-color: rgb(47, 150, =
180); }

.btn-group.open .btn-inverse.dropdown-toggle { background-color: rgb(34, 34=
, 34); }

.btn .caret { margin-top: 8px; margin-left: 0px; }

.btn-mini .caret, .btn-small .caret, .btn-large .caret { margin-top: 6px; }

.btn-large .caret { border-top-width: 5px; border-right-width: 5px; border-=
left-width: 5px; }

.dropup .btn-large .caret { border-top: 0px; border-bottom: 5px solid rgb(0=
, 0, 0); }

.btn-primary .caret, .btn-warning .caret, .btn-danger .caret, .btn-info .ca=
ret, .btn-success .caret, .btn-inverse .caret { border-top-color: rgb(255, =
255, 255); border-bottom-color: rgb(255, 255, 255); }

.btn-group-vertical { display: inline-block; }

.btn-group-vertical .btn { display: block; float: none; width: 100%; border=
-radius: 0px; }

.btn-group-vertical .btn + .btn { margin-top: -1px; margin-left: 0px; }

.btn-group-vertical .btn:first-child { border-radius: 4px 4px 0px 0px; }

.btn-group-vertical .btn:last-child { border-radius: 0px 0px 4px 4px; }

.btn-group-vertical .btn-large:first-child { border-radius: 6px 6px 0px 0px=
; }

.btn-group-vertical .btn-large:last-child { border-radius: 0px 0px 6px 6px;=
 }

.alert { padding: 8px 35px 8px 14px; margin-bottom: 20px; color: rgb(192, 1=
52, 83); text-shadow: rgba(255, 255, 255, 0.5) 0px 1px 0px; background-colo=
r: rgb(252, 248, 227); border: 1px solid rgb(251, 238, 213); border-radius:=
 4px; }

.alert h4 { margin: 0px; }

.alert .close { position: relative; top: -2px; right: -21px; line-height: 2=
0px; }

.alert-success { color: rgb(70, 136, 71); background-color: rgb(223, 240, 2=
16); border-color: rgb(214, 233, 198); }

.alert-danger, .alert-error { color: rgb(185, 74, 72); background-color: rg=
b(242, 222, 222); border-color: rgb(238, 211, 215); }

.alert-info { color: rgb(58, 135, 173); background-color: rgb(217, 237, 247=
); border-color: rgb(188, 232, 241); }

.alert-block { padding-top: 14px; padding-bottom: 14px; }

.alert-block > p, .alert-block > ul { margin-bottom: 0px; }

.alert-block p + p { margin-top: 5px; }

.nav { margin-bottom: 20px; margin-left: 0px; list-style: none; }

.nav > li > a { display: block; }

.nav > li > a:hover { text-decoration: none; background-color: rgb(238, 238=
, 238); }

.nav > .pull-right { float: right; }

.nav-header { display: block; padding: 3px 15px; font-size: 11px; font-weig=
ht: bold; line-height: 20px; color: rgb(153, 153, 153); text-shadow: rgba(2=
55, 255, 255, 0.5) 0px 1px 0px; text-transform: uppercase; }

.nav li + .nav-header { margin-top: 9px; }

.nav-list { padding-right: 15px; padding-left: 15px; margin-bottom: 0px; }

.nav-list > li > a, .nav-list .nav-header { margin-right: -15px; margin-lef=
t: -15px; text-shadow: rgba(255, 255, 255, 0.5) 0px 1px 0px; }

.nav-list > li > a { padding: 3px 15px; }

.nav-list > .active > a, .nav-list > .active > a:hover { color: rgb(255, 25=
5, 255); text-shadow: rgba(0, 0, 0, 0.2) 0px -1px 0px; background-color: rg=
b(0, 136, 204); }

.nav-list [class^=3D"icon-"] { margin-right: 2px; }

.nav-list .divider { height: 1px; margin: 9px 1px; overflow: hidden; backgr=
ound-color: rgb(229, 229, 229); border-bottom: 1px solid rgb(255, 255, 255)=
; }

.nav-tabs, .nav-pills { }

.nav-tabs::before, .nav-pills::before, .nav-tabs::after, .nav-pills::after =
{ display: table; line-height: 0; content: ""; }

.nav-tabs::after, .nav-pills::after { clear: both; }

.nav-tabs > li, .nav-pills > li { float: left; }

.nav-tabs > li > a, .nav-pills > li > a { padding-right: 12px; padding-left=
: 12px; margin-right: 2px; line-height: 14px; }

.nav-tabs { border-bottom: 1px solid rgb(221, 221, 221); }

.nav-tabs > li { margin-bottom: -1px; }

.nav-tabs > li > a { padding-top: 8px; padding-bottom: 8px; line-height: 20=
px; border: 1px solid transparent; border-radius: 4px 4px 0px 0px; }

.nav-tabs > li > a:hover { border-color: rgb(238, 238, 238) rgb(238, 238, 2=
38) rgb(221, 221, 221); }

.nav-tabs > .active > a, .nav-tabs > .active > a:hover { color: rgb(85, 85,=
 85); cursor: default; background-color: rgb(255, 255, 255); border-width: =
1px; border-style: solid; border-color: rgb(221, 221, 221) rgb(221, 221, 22=
1) transparent; border-image: initial; }

.nav-pills > li > a { padding-top: 8px; padding-bottom: 8px; margin-top: 2p=
x; margin-bottom: 2px; border-radius: 5px; }

.nav-pills > .active > a, .nav-pills > .active > a:hover { color: rgb(255, =
255, 255); background-color: rgb(0, 136, 204); }

.nav-stacked > li { float: none; }

.nav-stacked > li > a { margin-right: 0px; }

.nav-tabs.nav-stacked { border-bottom: 0px; }

.nav-tabs.nav-stacked > li > a { border: 1px solid rgb(221, 221, 221); bord=
er-radius: 0px; }

.nav-tabs.nav-stacked > li:first-child > a { border-top-right-radius: 4px; =
border-top-left-radius: 4px; }

.nav-tabs.nav-stacked > li:last-child > a { border-bottom-right-radius: 4px=
; border-bottom-left-radius: 4px; }

.nav-tabs.nav-stacked > li > a:hover { z-index: 2; border-color: rgb(221, 2=
21, 221); }

.nav-pills.nav-stacked > li > a { margin-bottom: 3px; }

.nav-pills.nav-stacked > li:last-child > a { margin-bottom: 1px; }

.nav-tabs .dropdown-menu { border-radius: 0px 0px 6px 6px; }

.nav-pills .dropdown-menu { border-radius: 6px; }

.nav .dropdown-toggle .caret { margin-top: 6px; border-top-color: rgb(0, 13=
6, 204); border-bottom-color: rgb(0, 136, 204); }

.nav .dropdown-toggle:hover .caret { border-top-color: rgb(0, 85, 128); bor=
der-bottom-color: rgb(0, 85, 128); }

.nav-tabs .dropdown-toggle .caret { margin-top: 8px; }

.nav .active .dropdown-toggle .caret { border-top-color: rgb(255, 255, 255)=
; border-bottom-color: rgb(255, 255, 255); }

.nav-tabs .active .dropdown-toggle .caret { border-top-color: rgb(85, 85, 8=
5); border-bottom-color: rgb(85, 85, 85); }

.nav > .dropdown.active > a:hover { cursor: pointer; }

.nav-tabs .open .dropdown-toggle, .nav-pills .open .dropdown-toggle, .nav >=
 li.dropdown.open.active > a:hover { color: rgb(255, 255, 255); background-=
color: rgb(153, 153, 153); border-color: rgb(153, 153, 153); }

.nav li.dropdown.open .caret, .nav li.dropdown.open.active .caret, .nav li.=
dropdown.open a:hover .caret { border-top-color: rgb(255, 255, 255); border=
-bottom-color: rgb(255, 255, 255); opacity: 1; }

.tabs-stacked .open > a:hover { border-color: rgb(153, 153, 153); }

.tabbable { }

.tabbable::before, .tabbable::after { display: table; line-height: 0; conte=
nt: ""; }

.tabbable::after { clear: both; }

.tab-content { overflow: auto; }

.tabs-below > .nav-tabs, .tabs-right > .nav-tabs, .tabs-left > .nav-tabs { =
border-bottom: 0px; }

.tab-content > .tab-pane, .pill-content > .pill-pane { display: none; }

.tab-content > .active, .pill-content > .active { display: block; }

.tabs-below > .nav-tabs { border-top: 1px solid rgb(221, 221, 221); }

.tabs-below > .nav-tabs > li { margin-top: -1px; margin-bottom: 0px; }

.tabs-below > .nav-tabs > li > a { border-radius: 0px 0px 4px 4px; }

.tabs-below > .nav-tabs > li > a:hover { border-top-color: rgb(221, 221, 22=
1); border-bottom-color: transparent; }

.tabs-below > .nav-tabs > .active > a, .tabs-below > .nav-tabs > .active > =
a:hover { border-color: transparent rgb(221, 221, 221) rgb(221, 221, 221); =
}

.tabs-left > .nav-tabs > li, .tabs-right > .nav-tabs > li { float: none; }

.tabs-left > .nav-tabs > li > a, .tabs-right > .nav-tabs > li > a { min-wid=
th: 74px; margin-right: 0px; margin-bottom: 3px; }

.tabs-left > .nav-tabs { float: left; margin-right: 19px; border-right: 1px=
 solid rgb(221, 221, 221); }

.tabs-left > .nav-tabs > li > a { margin-right: -1px; border-radius: 4px 0p=
x 0px 4px; }

.tabs-left > .nav-tabs > li > a:hover { border-color: rgb(238, 238, 238) rg=
b(221, 221, 221) rgb(238, 238, 238) rgb(238, 238, 238); }

.tabs-left > .nav-tabs .active > a, .tabs-left > .nav-tabs .active > a:hove=
r { border-color: rgb(221, 221, 221) transparent rgb(221, 221, 221) rgb(221=
, 221, 221); }

.tabs-right > .nav-tabs { float: right; margin-left: 19px; border-left: 1px=
 solid rgb(221, 221, 221); }

.tabs-right > .nav-tabs > li > a { margin-left: -1px; border-radius: 0px 4p=
x 4px 0px; }

.tabs-right > .nav-tabs > li > a:hover { border-color: rgb(238, 238, 238) r=
gb(238, 238, 238) rgb(238, 238, 238) rgb(221, 221, 221); }

.tabs-right > .nav-tabs .active > a, .tabs-right > .nav-tabs .active > a:ho=
ver { border-color: rgb(221, 221, 221) rgb(221, 221, 221) rgb(221, 221, 221=
) transparent; }

.nav > .disabled > a { color: rgb(153, 153, 153); }

.nav > .disabled > a:hover { text-decoration: none; cursor: default; backgr=
ound-color: transparent; }

.navbar { margin-bottom: 20px; overflow: visible; color: rgb(119, 119, 119)=
; }

.navbar-inner { min-height: 40px; padding-right: 20px; padding-left: 20px; =
background-color: rgb(250, 250, 250); background-image: linear-gradient(rgb=
(255, 255, 255), rgb(242, 242, 242)); background-repeat: repeat-x; border: =
1px solid rgb(212, 212, 212); border-radius: 4px; box-shadow: rgba(0, 0, 0,=
 0.067) 0px 1px 4px; }

.navbar-inner::before, .navbar-inner::after { display: table; line-height: =
0; content: ""; }

.navbar-inner::after { clear: both; }

.navbar .container { width: auto; }

.nav-collapse.collapse { height: auto; }

.navbar .brand { display: block; float: left; padding: 10px 20px; margin-le=
ft: -20px; font-size: 20px; font-weight: 200; color: rgb(119, 119, 119); te=
xt-shadow: rgb(255, 255, 255) 0px 1px 0px; }

.navbar .brand:hover { text-decoration: none; }

.navbar-text { margin-bottom: 0px; line-height: 40px; }

.navbar-link { color: rgb(119, 119, 119); }

.navbar-link:hover { color: rgb(51, 51, 51); }

.navbar .divider-vertical { height: 40px; margin: 0px 9px; border-right: 1p=
x solid rgb(255, 255, 255); border-left: 1px solid rgb(242, 242, 242); }

.navbar .btn, .navbar .btn-group { margin-top: 5px; }

.navbar .btn-group .btn, .navbar .input-prepend .btn, .navbar .input-append=
 .btn { margin-top: 0px; }

.navbar-form { margin-bottom: 0px; }

.navbar-form::before, .navbar-form::after { display: table; line-height: 0;=
 content: ""; }

.navbar-form::after { clear: both; }

.navbar-form input, .navbar-form select, .navbar-form .radio, .navbar-form =
.checkbox { margin-top: 5px; }

.navbar-form input, .navbar-form select, .navbar-form .btn { display: inlin=
e-block; margin-bottom: 0px; }

.navbar-form input[type=3D"image"], .navbar-form input[type=3D"checkbox"], =
.navbar-form input[type=3D"radio"] { margin-top: 3px; }

.navbar-form .input-append, .navbar-form .input-prepend { margin-top: 6px; =
white-space: nowrap; }

.navbar-form .input-append input, .navbar-form .input-prepend input { margi=
n-top: 0px; }

.navbar-search { position: relative; float: left; margin-top: 5px; margin-b=
ottom: 0px; }

.navbar-search .search-query { padding: 4px 14px; margin-bottom: 0px; font-=
family: "Helvetica Neue", Helvetica, Arial, sans-serif; font-size: 13px; fo=
nt-weight: normal; line-height: 1; border-radius: 15px; }

.navbar-static-top { position: static; width: 100%; margin-bottom: 0px; }

.navbar-static-top .navbar-inner { border-radius: 0px; }

.navbar-fixed-top, .navbar-fixed-bottom { position: fixed; right: 0px; left=
: 0px; z-index: 1030; margin-bottom: 0px; }

.navbar-fixed-top .navbar-inner, .navbar-static-top .navbar-inner { border-=
width: 0px 0px 1px; }

.navbar-fixed-bottom .navbar-inner { border-width: 1px 0px 0px; }

.navbar-fixed-top .navbar-inner, .navbar-fixed-bottom .navbar-inner { paddi=
ng-right: 0px; padding-left: 0px; border-radius: 0px; }

.navbar-static-top .container, .navbar-fixed-top .container, .navbar-fixed-=
bottom .container { width: 940px; }

.navbar-fixed-top { top: 0px; }

.navbar-fixed-top .navbar-inner, .navbar-static-top .navbar-inner { box-sha=
dow: rgba(0, 0, 0, 0.1) 0px -1px 0px inset, rgba(0, 0, 0, 0.1) 0px 1px 10px=
; }

.navbar-fixed-bottom { bottom: 0px; }

.navbar-fixed-bottom .navbar-inner { box-shadow: rgba(0, 0, 0, 0.1) 0px 1px=
 0px inset, rgba(0, 0, 0, 0.1) 0px -1px 10px; }

.navbar .nav { position: relative; left: 0px; display: block; float: left; =
margin: 0px 10px 0px 0px; }

.navbar .nav.pull-right { float: right; margin-right: 0px; }

.navbar .nav > li { float: left; }

.navbar .nav > li > a { float: none; padding: 10px 15px; color: rgb(119, 11=
9, 119); text-decoration: none; text-shadow: rgb(255, 255, 255) 0px 1px 0px=
; }

.navbar .nav .dropdown-toggle .caret { margin-top: 8px; }

.navbar .nav > li > a:focus, .navbar .nav > li > a:hover { color: rgb(51, 5=
1, 51); text-decoration: none; background-color: transparent; }

.navbar .nav > .active > a, .navbar .nav > .active > a:hover, .navbar .nav =
> .active > a:focus { color: rgb(85, 85, 85); text-decoration: none; backgr=
ound-color: rgb(229, 229, 229); box-shadow: rgba(0, 0, 0, 0.125) 0px 3px 8p=
x inset; }

.navbar .btn-navbar { display: none; float: right; padding: 7px 10px; margi=
n-right: 5px; margin-left: 5px; color: rgb(255, 255, 255); text-shadow: rgb=
a(0, 0, 0, 0.25) 0px -1px 0px; background-color: rgb(237, 237, 237); backgr=
ound-image: linear-gradient(rgb(242, 242, 242), rgb(229, 229, 229)); backgr=
ound-repeat: repeat-x; border-color: rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.1) =
rgba(0, 0, 0, 0.25); box-shadow: rgba(255, 255, 255, 0.1) 0px 1px 0px inset=
, rgba(255, 255, 255, 0.075) 0px 1px 0px; }

.navbar .btn-navbar:hover, .navbar .btn-navbar:active, .navbar .btn-navbar.=
active, .navbar .btn-navbar.disabled, .navbar .btn-navbar[disabled] { color=
: rgb(255, 255, 255); background-color: rgb(229, 229, 229); }

.navbar .btn-navbar:active, .navbar .btn-navbar.active { }

.navbar .btn-navbar .icon-bar { display: block; width: 18px; height: 2px; b=
ackground-color: rgb(245, 245, 245); border-radius: 1px; box-shadow: rgba(0=
, 0, 0, 0.25) 0px 1px 0px; }

.btn-navbar .icon-bar + .icon-bar { margin-top: 3px; }

.navbar .nav > li > .dropdown-menu::before { position: absolute; top: -7px;=
 left: 9px; display: inline-block; border-right: 7px solid transparent; bor=
der-bottom: 7px solid rgba(0, 0, 0, 0.2); border-left: 7px solid transparen=
t; content: ""; }

.navbar .nav > li > .dropdown-menu::after { position: absolute; top: -6px; =
left: 10px; display: inline-block; border-right: 6px solid transparent; bor=
der-bottom: 6px solid rgb(255, 255, 255); border-left: 6px solid transparen=
t; content: ""; }

.navbar-fixed-bottom .nav > li > .dropdown-menu::before { top: auto; bottom=
: -7px; border-top: 7px solid rgba(0, 0, 0, 0.2); border-bottom: 0px; }

.navbar-fixed-bottom .nav > li > .dropdown-menu::after { top: auto; bottom:=
 -6px; border-top: 6px solid rgb(255, 255, 255); border-bottom: 0px; }

.navbar .nav li.dropdown.open > .dropdown-toggle, .navbar .nav li.dropdown.=
active > .dropdown-toggle, .navbar .nav li.dropdown.open.active > .dropdown=
-toggle { color: rgb(85, 85, 85); background-color: rgb(229, 229, 229); }

.navbar .nav li.dropdown > .dropdown-toggle .caret { border-top-color: rgb(=
119, 119, 119); border-bottom-color: rgb(119, 119, 119); }

.navbar .nav li.dropdown.open > .dropdown-toggle .caret, .navbar .nav li.dr=
opdown.active > .dropdown-toggle .caret, .navbar .nav li.dropdown.open.acti=
ve > .dropdown-toggle .caret { border-top-color: rgb(85, 85, 85); border-bo=
ttom-color: rgb(85, 85, 85); }

.navbar .pull-right > li > .dropdown-menu, .navbar .nav > li > .dropdown-me=
nu.pull-right { right: 0px; left: auto; }

.navbar .pull-right > li > .dropdown-menu::before, .navbar .nav > li > .dro=
pdown-menu.pull-right::before { right: 12px; left: auto; }

.navbar .pull-right > li > .dropdown-menu::after, .navbar .nav > li > .drop=
down-menu.pull-right::after { right: 13px; left: auto; }

.navbar .pull-right > li > .dropdown-menu .dropdown-menu, .navbar .nav > li=
 > .dropdown-menu.pull-right .dropdown-menu { right: 100%; left: auto; marg=
in-right: -1px; margin-left: 0px; border-radius: 6px 0px 6px 6px; }

.navbar-inverse { color: rgb(153, 153, 153); }

.navbar-inverse .navbar-inner { background-color: rgb(27, 27, 27); backgrou=
nd-image: linear-gradient(rgb(34, 34, 34), rgb(17, 17, 17)); background-rep=
eat: repeat-x; border-color: rgb(37, 37, 37); }

.navbar-inverse .brand, .navbar-inverse .nav > li > a { color: rgb(153, 153=
, 153); text-shadow: rgba(0, 0, 0, 0.25) 0px -1px 0px; }

.navbar-inverse .brand:hover, .navbar-inverse .nav > li > a:hover { color: =
rgb(255, 255, 255); }

.navbar-inverse .nav > li > a:focus, .navbar-inverse .nav > li > a:hover { =
color: rgb(255, 255, 255); background-color: transparent; }

.navbar-inverse .nav .active > a, .navbar-inverse .nav .active > a:hover, .=
navbar-inverse .nav .active > a:focus { color: rgb(255, 255, 255); backgrou=
nd-color: rgb(17, 17, 17); }

.navbar-inverse .navbar-link { color: rgb(153, 153, 153); }

.navbar-inverse .navbar-link:hover { color: rgb(255, 255, 255); }

.navbar-inverse .divider-vertical { border-right-color: rgb(34, 34, 34); bo=
rder-left-color: rgb(17, 17, 17); }

.navbar-inverse .nav li.dropdown.open > .dropdown-toggle, .navbar-inverse .=
nav li.dropdown.active > .dropdown-toggle, .navbar-inverse .nav li.dropdown=
.open.active > .dropdown-toggle { color: rgb(255, 255, 255); background-col=
or: rgb(17, 17, 17); }

.navbar-inverse .nav li.dropdown > .dropdown-toggle .caret { border-top-col=
or: rgb(153, 153, 153); border-bottom-color: rgb(153, 153, 153); }

.navbar-inverse .nav li.dropdown.open > .dropdown-toggle .caret, .navbar-in=
verse .nav li.dropdown.active > .dropdown-toggle .caret, .navbar-inverse .n=
av li.dropdown.open.active > .dropdown-toggle .caret { border-top-color: rg=
b(255, 255, 255); border-bottom-color: rgb(255, 255, 255); }

.navbar-inverse .navbar-search .search-query { color: rgb(255, 255, 255); b=
ackground-color: rgb(81, 81, 81); border-color: rgb(17, 17, 17); box-shadow=
: rgba(0, 0, 0, 0.1) 0px 1px 2px inset, rgba(255, 255, 255, 0.15) 0px 1px 0=
px; transition: none 0s ease 0s; }

.navbar-inverse .navbar-search .search-query::-webkit-input-placeholder { c=
olor: rgb(204, 204, 204); }

.navbar-inverse .navbar-search .search-query:focus, .navbar-inverse .navbar=
-search .search-query.focused { padding: 5px 15px; color: rgb(51, 51, 51); =
text-shadow: rgb(255, 255, 255) 0px 1px 0px; background-color: rgb(255, 255=
, 255); border: 0px; outline: 0px; box-shadow: rgba(0, 0, 0, 0.15) 0px 0px =
3px; }

.navbar-inverse .btn-navbar { color: rgb(255, 255, 255); text-shadow: rgba(=
0, 0, 0, 0.25) 0px -1px 0px; background-color: rgb(14, 14, 14); background-=
image: linear-gradient(rgb(21, 21, 21), rgb(4, 4, 4)); background-repeat: r=
epeat-x; border-color: rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.1) rgba(0, 0, 0, =
0.25); }

.navbar-inverse .btn-navbar:hover, .navbar-inverse .btn-navbar:active, .nav=
bar-inverse .btn-navbar.active, .navbar-inverse .btn-navbar.disabled, .navb=
ar-inverse .btn-navbar[disabled] { color: rgb(255, 255, 255); background-co=
lor: rgb(4, 4, 4); }

.navbar-inverse .btn-navbar:active, .navbar-inverse .btn-navbar.active { }

.breadcrumb { padding: 8px 15px; margin: 0px 0px 20px; list-style: none; ba=
ckground-color: rgb(245, 245, 245); border-radius: 4px; }

.breadcrumb li { display: inline-block; text-shadow: rgb(255, 255, 255) 0px=
 1px 0px; }

.breadcrumb .divider { padding: 0px 5px; color: rgb(204, 204, 204); }

.breadcrumb .active { color: rgb(153, 153, 153); }

.pagination { height: 40px; margin: 20px 0px; }

.pagination ul { display: inline-block; margin-bottom: 0px; margin-left: 0p=
x; border-radius: 3px; box-shadow: rgba(0, 0, 0, 0.05) 0px 1px 2px; }

.pagination ul > li { display: inline; }

.pagination ul > li > a, .pagination ul > li > span { float: left; padding:=
 0px 14px; line-height: 38px; text-decoration: none; background-color: rgb(=
255, 255, 255); border-width: 1px 1px 1px 0px; border-style: solid; border-=
color: rgb(221, 221, 221); border-image: initial; }

.pagination ul > li > a:hover, .pagination ul > .active > a, .pagination ul=
 > .active > span { background-color: rgb(245, 245, 245); }

.pagination ul > .active > a, .pagination ul > .active > span { color: rgb(=
153, 153, 153); cursor: default; }

.pagination ul > .disabled > span, .pagination ul > .disabled > a, .paginat=
ion ul > .disabled > a:hover { color: rgb(153, 153, 153); cursor: default; =
background-color: transparent; }

.pagination ul > li:first-child > a, .pagination ul > li:first-child > span=
 { border-left-width: 1px; border-radius: 3px 0px 0px 3px; }

.pagination ul > li:last-child > a, .pagination ul > li:last-child > span {=
 border-radius: 0px 3px 3px 0px; }

.pagination-centered { text-align: center; }

.pagination-right { text-align: right; }

.pager { margin: 20px 0px; text-align: center; list-style: none; }

.pager::before, .pager::after { display: table; line-height: 0; content: ""=
; }

.pager::after { clear: both; }

.pager li { display: inline; }

.pager a, .pager span { display: inline-block; padding: 5px 14px; backgroun=
d-color: rgb(255, 255, 255); border: 1px solid rgb(221, 221, 221); border-r=
adius: 15px; }

.pager a:hover { text-decoration: none; background-color: rgb(245, 245, 245=
); }

.pager .next a, .pager .next span { float: right; }

.pager .previous a { float: left; }

.pager .disabled a, .pager .disabled a:hover, .pager .disabled span { color=
: rgb(153, 153, 153); cursor: default; background-color: rgb(255, 255, 255)=
; }

.modal-open .modal .dropdown-menu { z-index: 2050; }

.modal-open .modal .dropdown.open { }

.modal-open .modal .popover { z-index: 2060; }

.modal-open .modal .tooltip { z-index: 2080; }

.modal-backdrop { position: fixed; inset: 0px; z-index: 1040; background-co=
lor: rgb(0, 0, 0); }

.modal-backdrop.fade { opacity: 0; }

.modal-backdrop, .modal-backdrop.fade.in { opacity: 0.8; }

.modal { position: fixed; top: 50%; left: 50%; z-index: 1050; width: 560px;=
 margin: -250px 0px 0px -280px; overflow: auto; background-color: rgb(255, =
255, 255); border: 1px solid rgba(0, 0, 0, 0.3); border-radius: 6px; box-sh=
adow: rgba(0, 0, 0, 0.3) 0px 3px 7px; background-clip: padding-box; }

.modal.fade { top: -25%; transition: opacity 0.3s linear 0s, top 0.3s ease-=
out 0s; }

.modal.fade.in { top: 50%; }

.modal-header { padding: 9px 15px; border-bottom: 1px solid rgb(238, 238, 2=
38); }

.modal-header .close { margin-top: 2px; }

.modal-header h3 { margin: 0px; line-height: 30px; }

.modal-body { max-height: 400px; padding: 15px; overflow-y: auto; }

.modal-form { margin-bottom: 0px; }

.modal-footer { padding: 14px 15px 15px; margin-bottom: 0px; text-align: ri=
ght; background-color: rgb(245, 245, 245); border-top: 1px solid rgb(221, 2=
21, 221); border-radius: 0px 0px 6px 6px; box-shadow: rgb(255, 255, 255) 0p=
x 1px 0px inset; }

.modal-footer::before, .modal-footer::after { display: table; line-height: =
0; content: ""; }

.modal-footer::after { clear: both; }

.modal-footer .btn + .btn { margin-bottom: 0px; margin-left: 5px; }

.modal-footer .btn-group .btn + .btn { margin-left: -1px; }

.tooltip { position: absolute; z-index: 1030; display: block; padding: 5px;=
 font-size: 11px; opacity: 0; visibility: visible; }

.tooltip.in { opacity: 0.8; }

.tooltip.top { margin-top: -3px; }

.tooltip.right { margin-left: 3px; }

.tooltip.bottom { margin-top: 3px; }

.tooltip.left { margin-left: -3px; }

.tooltip-inner { max-width: 200px; padding: 3px 8px; color: rgb(255, 255, 2=
55); text-align: center; text-decoration: none; background-color: rgb(0, 0,=
 0); border-radius: 4px; }

.tooltip-arrow { position: absolute; width: 0px; height: 0px; border-color:=
 transparent; border-style: solid; }

.tooltip.top .tooltip-arrow { bottom: 0px; left: 50%; margin-left: -5px; bo=
rder-top-color: rgb(0, 0, 0); border-width: 5px 5px 0px; }

.tooltip.right .tooltip-arrow { top: 50%; left: 0px; margin-top: -5px; bord=
er-right-color: rgb(0, 0, 0); border-width: 5px 5px 5px 0px; }

.tooltip.left .tooltip-arrow { top: 50%; right: 0px; margin-top: -5px; bord=
er-left-color: rgb(0, 0, 0); border-width: 5px 0px 5px 5px; }

.tooltip.bottom .tooltip-arrow { top: 0px; left: 50%; margin-left: -5px; bo=
rder-bottom-color: rgb(0, 0, 0); border-width: 0px 5px 5px; }

.popover { position: absolute; top: 0px; left: 0px; z-index: 1010; display:=
 none; width: 236px; padding: 1px; background-color: rgb(255, 255, 255); bo=
rder: 1px solid rgba(0, 0, 0, 0.2); border-radius: 6px; box-shadow: rgba(0,=
 0, 0, 0.2) 0px 5px 10px; background-clip: padding-box; }

.popover.top { margin-bottom: 10px; }

.popover.right { margin-left: 10px; }

.popover.bottom { margin-top: 10px; }

.popover.left { margin-right: 10px; }

.popover-title { padding: 8px 14px; margin: 0px; font-size: 14px; font-weig=
ht: normal; line-height: 18px; background-color: rgb(247, 247, 247); border=
-bottom: 1px solid rgb(235, 235, 235); border-radius: 5px 5px 0px 0px; }

.popover-content { padding: 9px 14px; }

.popover-content p, .popover-content ul, .popover-content ol { margin-botto=
m: 0px; }

.popover .arrow, .popover .arrow::after { position: absolute; display: inli=
ne-block; width: 0px; height: 0px; border-color: transparent; border-style:=
 solid; }

.popover .arrow::after { z-index: -1; content: ""; }

.popover.top .arrow { bottom: -10px; left: 50%; margin-left: -10px; border-=
top-color: rgb(255, 255, 255); border-width: 10px 10px 0px; }

.popover.top .arrow::after { bottom: -1px; left: -11px; border-top-color: r=
gba(0, 0, 0, 0.25); border-width: 11px 11px 0px; }

.popover.right .arrow { top: 50%; left: -10px; margin-top: -10px; border-ri=
ght-color: rgb(255, 255, 255); border-width: 10px 10px 10px 0px; }

.popover.right .arrow::after { bottom: -11px; left: -1px; border-right-colo=
r: rgba(0, 0, 0, 0.25); border-width: 11px 11px 11px 0px; }

.popover.bottom .arrow { top: -10px; left: 50%; margin-left: -10px; border-=
bottom-color: rgb(255, 255, 255); border-width: 0px 10px 10px; }

.popover.bottom .arrow::after { top: -1px; left: -11px; border-bottom-color=
: rgba(0, 0, 0, 0.25); border-width: 0px 11px 11px; }

.popover.left .arrow { top: 50%; right: -10px; margin-top: -10px; border-le=
ft-color: rgb(255, 255, 255); border-width: 10px 0px 10px 10px; }

.popover.left .arrow::after { right: -1px; bottom: -11px; border-left-color=
: rgba(0, 0, 0, 0.25); border-width: 11px 0px 11px 11px; }

.thumbnails { margin-left: -20px; list-style: none; }

.thumbnails::before, .thumbnails::after { display: table; line-height: 0; c=
ontent: ""; }

.thumbnails::after { clear: both; }

.row-fluid .thumbnails { margin-left: 0px; }

.thumbnails > li { float: left; margin-bottom: 20px; margin-left: 20px; }

.thumbnail { display: block; padding: 4px; line-height: 20px; border: 1px s=
olid rgb(221, 221, 221); border-radius: 4px; box-shadow: rgba(0, 0, 0, 0.05=
5) 0px 1px 3px; transition: all 0.2s ease-in-out 0s; }

a.thumbnail:hover { border-color: rgb(0, 136, 204); box-shadow: rgba(0, 105=
, 214, 0.25) 0px 1px 4px; }

.thumbnail > img { display: block; max-width: 100%; margin-right: auto; mar=
gin-left: auto; }

.thumbnail .caption { padding: 9px; color: rgb(85, 85, 85); }

.label, .badge { font-size: 11.844px; font-weight: bold; line-height: 14px;=
 color: rgb(255, 255, 255); text-shadow: rgba(0, 0, 0, 0.25) 0px -1px 0px; =
white-space: nowrap; vertical-align: baseline; background-color: rgb(153, 1=
53, 153); }

.label { padding: 1px 4px 2px; border-radius: 3px; }

.badge { padding: 1px 9px 2px; border-radius: 9px; }

a.label:hover, a.badge:hover { color: rgb(255, 255, 255); text-decoration: =
none; cursor: pointer; }

.label-important, .badge-important { background-color: rgb(185, 74, 72); }

.label-important[href], .badge-important[href] { background-color: rgb(149,=
 59, 57); }

.label-warning, .badge-warning { background-color: rgb(248, 148, 6); }

.label-warning[href], .badge-warning[href] { background-color: rgb(198, 118=
, 5); }

.label-success, .badge-success { background-color: rgb(70, 136, 71); }

.label-success[href], .badge-success[href] { background-color: rgb(53, 102,=
 53); }

.label-info, .badge-info { background-color: rgb(58, 135, 173); }

.label-info[href], .badge-info[href] { background-color: rgb(45, 105, 135);=
 }

.label-inverse, .badge-inverse { background-color: rgb(51, 51, 51); }

.label-inverse[href], .badge-inverse[href] { background-color: rgb(26, 26, =
26); }

.btn .label, .btn .badge { position: relative; top: -1px; }

.btn-mini .label, .btn-mini .badge { top: 0px; }

@-webkit-keyframes progress-bar-stripes {=20
  0% { background-position: 40px 0px; }
  100% { background-position: 0px 0px; }
}

@keyframes progress-bar-stripes {=20
  0% { background-position: 40px 0px; }
  100% { background-position: 0px 0px; }
}

.progress { height: 20px; margin-bottom: 20px; overflow: hidden; background=
-color: rgb(247, 247, 247); background-image: linear-gradient(rgb(245, 245,=
 245), rgb(249, 249, 249)); background-repeat: repeat-x; border-radius: 4px=
; box-shadow: rgba(0, 0, 0, 0.1) 0px 1px 2px inset; }

.progress .bar { float: left; width: 0px; height: 100%; font-size: 12px; co=
lor: rgb(255, 255, 255); text-align: center; text-shadow: rgba(0, 0, 0, 0.2=
5) 0px -1px 0px; background-color: rgb(14, 144, 210); background-image: lin=
ear-gradient(rgb(20, 155, 223), rgb(4, 128, 190)); background-repeat: repea=
t-x; box-shadow: rgba(0, 0, 0, 0.15) 0px -1px 0px inset; box-sizing: border=
-box; transition: width 0.6s ease 0s; }

.progress .bar + .bar { box-shadow: rgba(0, 0, 0, 0.15) 1px 0px 0px inset, =
rgba(0, 0, 0, 0.15) 0px -1px 0px inset; }

.progress-striped .bar { background-color: rgb(20, 155, 223); background-im=
age: linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%,=
 transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) =
75%, transparent 75%, transparent); background-size: 40px 40px; }

.progress.active .bar { animation: 2s linear 0s infinite normal none runnin=
g progress-bar-stripes; }

.progress-danger .bar, .progress .bar-danger { background-color: rgb(221, 8=
1, 76); background-image: linear-gradient(rgb(238, 95, 91), rgb(196, 60, 53=
)); background-repeat: repeat-x; }

.progress-danger.progress-striped .bar, .progress-striped .bar-danger { bac=
kground-color: rgb(238, 95, 91); background-image: linear-gradient(45deg, r=
gba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 2=
55, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transpa=
rent); }

.progress-success .bar, .progress .bar-success { background-color: rgb(94, =
185, 94); background-image: linear-gradient(rgb(98, 196, 98), rgb(87, 169, =
87)); background-repeat: repeat-x; }

.progress-success.progress-striped .bar, .progress-striped .bar-success { b=
ackground-color: rgb(98, 196, 98); background-image: linear-gradient(45deg,=
 rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255,=
 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, trans=
parent); }

.progress-info .bar, .progress .bar-info { background-color: rgb(75, 177, 2=
07); background-image: linear-gradient(rgb(91, 192, 222), rgb(51, 155, 185)=
); background-repeat: repeat-x; }

.progress-info.progress-striped .bar, .progress-striped .bar-info { backgro=
und-color: rgb(91, 192, 222); background-image: linear-gradient(45deg, rgba=
(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255,=
 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparen=
t); }

.progress-warning .bar, .progress .bar-warning { background-color: rgb(250,=
 167, 50); background-image: linear-gradient(rgb(251, 180, 80), rgb(248, 14=
8, 6)); background-repeat: repeat-x; }

.progress-warning.progress-striped .bar, .progress-striped .bar-warning { b=
ackground-color: rgb(251, 180, 80); background-image: linear-gradient(45deg=
, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255=
, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, tran=
sparent); }

.accordion { margin-bottom: 20px; }

.accordion-group { margin-bottom: 2px; border: 1px solid rgb(229, 229, 229)=
; border-radius: 4px; }

.accordion-heading { border-bottom: 0px; }

.accordion-heading .accordion-toggle { display: block; padding: 8px 15px; }

.accordion-toggle { cursor: pointer; }

.accordion-inner { padding: 9px 15px; border-top: 1px solid rgb(229, 229, 2=
29); }

.carousel { position: relative; margin-bottom: 20px; line-height: 1; }

.carousel-inner { position: relative; width: 100%; overflow: hidden; }

.carousel .item { position: relative; display: none; transition: left 0.6s =
ease-in-out 0s; }

.carousel .item > img { display: block; line-height: 1; }

.carousel .active, .carousel .next, .carousel .prev { display: block; }

.carousel .active { left: 0px; }

.carousel .next, .carousel .prev { position: absolute; top: 0px; width: 100=
%; }

.carousel .next { left: 100%; }

.carousel .prev { left: -100%; }

.carousel .next.left, .carousel .prev.right { left: 0px; }

.carousel .active.left { left: -100%; }

.carousel .active.right { left: 100%; }

.carousel-control { position: absolute; top: 40%; left: 15px; width: 40px; =
height: 40px; margin-top: -20px; font-size: 60px; font-weight: 100; line-he=
ight: 30px; color: rgb(255, 255, 255); text-align: center; background: rgb(=
34, 34, 34); border: 3px solid rgb(255, 255, 255); border-radius: 23px; opa=
city: 0.5; }

.carousel-control.right { right: 15px; left: auto; }

.carousel-control:hover { color: rgb(255, 255, 255); text-decoration: none;=
 opacity: 0.9; }

.carousel-caption { position: absolute; right: 0px; bottom: 0px; left: 0px;=
 padding: 15px; background: rgba(0, 0, 0, 0.75); }

.carousel-caption h4, .carousel-caption p { line-height: 20px; color: rgb(2=
55, 255, 255); }

.carousel-caption h4 { margin: 0px 0px 5px; }

.carousel-caption p { margin-bottom: 0px; }

.hero-unit { padding: 60px; margin-bottom: 30px; background-color: rgb(238,=
 238, 238); border-radius: 6px; }

.hero-unit h1 { margin-bottom: 0px; font-size: 60px; line-height: 1; letter=
-spacing: -1px; color: inherit; }

.hero-unit p { font-size: 18px; font-weight: 200; line-height: 30px; color:=
 inherit; }

.pull-right { float: right; }

.pull-left { float: left; }

.hide { display: none; }

.show { display: block; }

.invisible { visibility: hidden; }

.affix { position: fixed; }
------MultipartBoundary--hLXCg58VmOUhCLwQaH490C7Jb0LYqV2sbGnXH2cWYK----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://www.django-rest-framework.org/img/glyphicons-halflings-white.png

iVBORw0KGgoAAAANSUhEUgAAAdUAAACfCAMAAACY07N7AAAC2VBMVEX///8AAAAAAAD5+fn///8A
AAD////9/f1tbW0AAAD///////////8AAAAAAAD////w8PD+/v729vYAAAD8/PwAAAAAAAD/////
///a2toAAADCwsL09PT////////09PT39/f///8AAAAAAACzs7P9/f0AAADi4uKwsLD////////7
+/vn5+f+/v7///8AAADt7e0AAADPz88AAAD9/f329vbt7e37+/vn5+f6+vrh4eGSkpL+/v7+/v7B
wcGYmJh0dHTh4eHQ0NAAAADz8/O7u7uhoaGAgID9/f3U1NRiYmL////V1dX4+Pjc3Nz6+vr7+/vp
6en7+/v9/f39/f3R0dHy8vL8/Pz4+Pjr6+v8/Py2trbGxsbl5eXu7u719fX9/f1lZWVnZ2fw8PC2
trbg4OD39/f6+vrp6enl5eX6+vr4+PjLy8v///+EhITx8fF4eHj39/fd3d35+fnIyMjS0tLs7Oz6
+vre3t7i4uLm5ubz8/Obm5uoqKilpaXc3Nzu7u7////x8fHJycnw8PD////////e3t7Gxsa8vLzr
6+vW1tbQ0NDi4uL5+fn09PTi4uLs7Oz19fW0tLT////9/f37+/v8/Pz6+vrm5uYAAADk5OT8/Pz3
9/ewsLCZmZn9/f3s7Oz8/PzBwcHp6en////a2trw8PDw8PD19fXx8fH+/v74+Pj+/v6Ojo7i4uL7
+/v5+fnc3Nz////y8vL6+vqfn5/t7e339/f29vbo6Ojz8/P6+vr19fX19fWmpqbLy8v6+vr4+PjT
09Pr6+v6+vrr6+uqqqrz8/Pt7e2ioqLPz8/a2trW1taioqLr6+vi4uL5+flVVVXNzc3////W1tbj
4+Ph4eHq6ur8/Pz////29vb7+/vz8/P09PTMzMz////////5+fn19fX////y8vL9/f0AAADZ2dn8
/Pz7+/v8/Pzp6em/v7/7+/vq6urp6en+/v7////4ck/mAAAA8nRSTlMAGgDUzwIP8SMQ759fCgUv
qfDGFeIYA78fbxNTt98/hsV/BhdD4Q1rRI+vwo3ATxJTD18IoKWasozTETbQ4D40IX5hC6dAMR7R
XydvEsRuotKLkZCATYahkzOxQlFqmbZwJiUhFWy1wyJYcXI7gB2XIEFbgjxgiWFtfTSFMy8wSYgE
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

------MultipartBoundary--hLXCg58VmOUhCLwQaH490C7Jb0LYqV2sbGnXH2cWYK----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://www.django-rest-framework.org/css/bootstrap-responsive.css

@charset "utf-8";

.clearfix { }

.clearfix::before, .clearfix::after { display: table; line-height: 0; conte=
nt: ""; }

.clearfix::after { clear: both; }

.hide-text { font: 0px / 0 a; color: transparent; text-shadow: none; backgr=
ound-color: transparent; border: 0px; }

.input-block-level { display: block; width: 100%; min-height: 30px; box-siz=
ing: border-box; }

.hidden { display: none; visibility: hidden; }

.visible-phone { display: none !important; }

.visible-tablet { display: none !important; }

.hidden-desktop { display: none !important; }

.visible-desktop { display: inherit !important; }

@media (min-width: 768px) and (max-width: 979px) {
  .hidden-desktop { display: inherit !important; }
  .visible-desktop { display: none !important; }
  .visible-tablet { display: inherit !important; }
  .hidden-tablet { display: none !important; }
}

@media (max-width: 767px) {
  .hidden-desktop { display: inherit !important; }
  .visible-desktop { display: none !important; }
  .visible-phone { display: inherit !important; }
  .hidden-phone { display: none !important; }
}

@media (min-width: 1200px) {
  .row { margin-left: -30px; }
  .row::before, .row::after { display: table; line-height: 0; content: ""; =
}
  .row::after { clear: both; }
  [class*=3D"span"] { float: left; min-height: 1px; margin-left: 30px; }
  .container, .navbar-static-top .container, .navbar-fixed-top .container, =
.navbar-fixed-bottom .container { width: 1170px; }
  .span12 { width: 1170px; }
  .span11 { width: 1070px; }
  .span10 { width: 970px; }
  .span9 { width: 870px; }
  .span8 { width: 770px; }
  .span7 { width: 670px; }
  .span6 { width: 570px; }
  .span5 { width: 470px; }
  .span4 { width: 370px; }
  .span3 { width: 270px; }
  .span2 { width: 170px; }
  .span1 { width: 70px; }
  .offset12 { margin-left: 1230px; }
  .offset11 { margin-left: 1130px; }
  .offset10 { margin-left: 1030px; }
  .offset9 { margin-left: 930px; }
  .offset8 { margin-left: 830px; }
  .offset7 { margin-left: 730px; }
  .offset6 { margin-left: 630px; }
  .offset5 { margin-left: 530px; }
  .offset4 { margin-left: 430px; }
  .offset3 { margin-left: 330px; }
  .offset2 { margin-left: 230px; }
  .offset1 { margin-left: 130px; }
  .row-fluid { width: 100%; }
  .row-fluid::before, .row-fluid::after { display: table; line-height: 0; c=
ontent: ""; }
  .row-fluid::after { clear: both; }
  .row-fluid [class*=3D"span"] { display: block; float: left; width: 100%; =
min-height: 30px; margin-left: 2.5641%; box-sizing: border-box; }
  .row-fluid [class*=3D"span"]:first-child { margin-left: 0px; }
  .row-fluid .span12 { width: 100%; }
  .row-fluid .span11 { width: 91.453%; }
  .row-fluid .span10 { width: 82.906%; }
  .row-fluid .span9 { width: 74.359%; }
  .row-fluid .span8 { width: 65.812%; }
  .row-fluid .span7 { width: 57.265%; }
  .row-fluid .span6 { width: 48.7179%; }
  .row-fluid .span5 { width: 40.1709%; }
  .row-fluid .span4 { width: 31.6239%; }
  .row-fluid .span3 { width: 23.0769%; }
  .row-fluid .span2 { width: 14.5299%; }
  .row-fluid .span1 { width: 5.98291%; }
  .row-fluid .offset12 { margin-left: 105.128%; }
  .row-fluid .offset12:first-child { margin-left: 102.564%; }
  .row-fluid .offset11 { margin-left: 96.5812%; }
  .row-fluid .offset11:first-child { margin-left: 94.0171%; }
  .row-fluid .offset10 { margin-left: 88.0342%; }
  .row-fluid .offset10:first-child { margin-left: 85.4701%; }
  .row-fluid .offset9 { margin-left: 79.4872%; }
  .row-fluid .offset9:first-child { margin-left: 76.9231%; }
  .row-fluid .offset8 { margin-left: 70.9402%; }
  .row-fluid .offset8:first-child { margin-left: 68.3761%; }
  .row-fluid .offset7 { margin-left: 62.3932%; }
  .row-fluid .offset7:first-child { margin-left: 59.8291%; }
  .row-fluid .offset6 { margin-left: 53.8462%; }
  .row-fluid .offset6:first-child { margin-left: 51.2821%; }
  .row-fluid .offset5 { margin-left: 45.2991%; }
  .row-fluid .offset5:first-child { margin-left: 42.735%; }
  .row-fluid .offset4 { margin-left: 36.7521%; }
  .row-fluid .offset4:first-child { margin-left: 34.188%; }
  .row-fluid .offset3 { margin-left: 28.2051%; }
  .row-fluid .offset3:first-child { margin-left: 25.641%; }
  .row-fluid .offset2 { margin-left: 19.6581%; }
  .row-fluid .offset2:first-child { margin-left: 17.094%; }
  .row-fluid .offset1 { margin-left: 11.1111%; }
  .row-fluid .offset1:first-child { margin-left: 8.54701%; }
  input, textarea, .uneditable-input { margin-left: 0px; }
  .controls-row [class*=3D"span"] + [class*=3D"span"] { margin-left: 30px; =
}
  input.span12, textarea.span12, .uneditable-input.span12 { width: 1156px; =
}
  input.span11, textarea.span11, .uneditable-input.span11 { width: 1056px; =
}
  input.span10, textarea.span10, .uneditable-input.span10 { width: 956px; }
  input.span9, textarea.span9, .uneditable-input.span9 { width: 856px; }
  input.span8, textarea.span8, .uneditable-input.span8 { width: 756px; }
  input.span7, textarea.span7, .uneditable-input.span7 { width: 656px; }
  input.span6, textarea.span6, .uneditable-input.span6 { width: 556px; }
  input.span5, textarea.span5, .uneditable-input.span5 { width: 456px; }
  input.span4, textarea.span4, .uneditable-input.span4 { width: 356px; }
  input.span3, textarea.span3, .uneditable-input.span3 { width: 256px; }
  input.span2, textarea.span2, .uneditable-input.span2 { width: 156px; }
  input.span1, textarea.span1, .uneditable-input.span1 { width: 56px; }
  .thumbnails { margin-left: -30px; }
  .thumbnails > li { margin-left: 30px; }
  .row-fluid .thumbnails { margin-left: 0px; }
}

@media (min-width: 768px) and (max-width: 979px) {
  .row { margin-left: -20px; }
  .row::before, .row::after { display: table; line-height: 0; content: ""; =
}
  .row::after { clear: both; }
  [class*=3D"span"] { float: left; min-height: 1px; margin-left: 20px; }
  .container, .navbar-static-top .container, .navbar-fixed-top .container, =
.navbar-fixed-bottom .container { width: 724px; }
  .span12 { width: 724px; }
  .span11 { width: 662px; }
  .span10 { width: 600px; }
  .span9 { width: 538px; }
  .span8 { width: 476px; }
  .span7 { width: 414px; }
  .span6 { width: 352px; }
  .span5 { width: 290px; }
  .span4 { width: 228px; }
  .span3 { width: 166px; }
  .span2 { width: 104px; }
  .span1 { width: 42px; }
  .offset12 { margin-left: 764px; }
  .offset11 { margin-left: 702px; }
  .offset10 { margin-left: 640px; }
  .offset9 { margin-left: 578px; }
  .offset8 { margin-left: 516px; }
  .offset7 { margin-left: 454px; }
  .offset6 { margin-left: 392px; }
  .offset5 { margin-left: 330px; }
  .offset4 { margin-left: 268px; }
  .offset3 { margin-left: 206px; }
  .offset2 { margin-left: 144px; }
  .offset1 { margin-left: 82px; }
  .row-fluid { width: 100%; }
  .row-fluid::before, .row-fluid::after { display: table; line-height: 0; c=
ontent: ""; }
  .row-fluid::after { clear: both; }
  .row-fluid [class*=3D"span"] { display: block; float: left; width: 100%; =
min-height: 30px; margin-left: 2.76243%; box-sizing: border-box; }
  .row-fluid [class*=3D"span"]:first-child { margin-left: 0px; }
  .row-fluid .span12 { width: 100%; }
  .row-fluid .span11 { width: 91.4365%; }
  .row-fluid .span10 { width: 82.8729%; }
  .row-fluid .span9 { width: 74.3094%; }
  .row-fluid .span8 { width: 65.7459%; }
  .row-fluid .span7 { width: 57.1823%; }
  .row-fluid .span6 { width: 48.6188%; }
  .row-fluid .span5 { width: 40.0552%; }
  .row-fluid .span4 { width: 31.4917%; }
  .row-fluid .span3 { width: 22.9282%; }
  .row-fluid .span2 { width: 14.3646%; }
  .row-fluid .span1 { width: 5.8011%; }
  .row-fluid .offset12 { margin-left: 105.525%; }
  .row-fluid .offset12:first-child { margin-left: 102.762%; }
  .row-fluid .offset11 { margin-left: 96.9613%; }
  .row-fluid .offset11:first-child { margin-left: 94.1989%; }
  .row-fluid .offset10 { margin-left: 88.3978%; }
  .row-fluid .offset10:first-child { margin-left: 85.6354%; }
  .row-fluid .offset9 { margin-left: 79.8343%; }
  .row-fluid .offset9:first-child { margin-left: 77.0718%; }
  .row-fluid .offset8 { margin-left: 71.2707%; }
  .row-fluid .offset8:first-child { margin-left: 68.5083%; }
  .row-fluid .offset7 { margin-left: 62.7072%; }
  .row-fluid .offset7:first-child { margin-left: 59.9448%; }
  .row-fluid .offset6 { margin-left: 54.1436%; }
  .row-fluid .offset6:first-child { margin-left: 51.3812%; }
  .row-fluid .offset5 { margin-left: 45.5801%; }
  .row-fluid .offset5:first-child { margin-left: 42.8177%; }
  .row-fluid .offset4 { margin-left: 37.0166%; }
  .row-fluid .offset4:first-child { margin-left: 34.2541%; }
  .row-fluid .offset3 { margin-left: 28.453%; }
  .row-fluid .offset3:first-child { margin-left: 25.6906%; }
  .row-fluid .offset2 { margin-left: 19.8895%; }
  .row-fluid .offset2:first-child { margin-left: 17.1271%; }
  .row-fluid .offset1 { margin-left: 11.326%; }
  .row-fluid .offset1:first-child { margin-left: 8.56354%; }
  input, textarea, .uneditable-input { margin-left: 0px; }
  .controls-row [class*=3D"span"] + [class*=3D"span"] { margin-left: 20px; =
}
  input.span12, textarea.span12, .uneditable-input.span12 { width: 710px; }
  input.span11, textarea.span11, .uneditable-input.span11 { width: 648px; }
  input.span10, textarea.span10, .uneditable-input.span10 { width: 586px; }
  input.span9, textarea.span9, .uneditable-input.span9 { width: 524px; }
  input.span8, textarea.span8, .uneditable-input.span8 { width: 462px; }
  input.span7, textarea.span7, .uneditable-input.span7 { width: 400px; }
  input.span6, textarea.span6, .uneditable-input.span6 { width: 338px; }
  input.span5, textarea.span5, .uneditable-input.span5 { width: 276px; }
  input.span4, textarea.span4, .uneditable-input.span4 { width: 214px; }
  input.span3, textarea.span3, .uneditable-input.span3 { width: 152px; }
  input.span2, textarea.span2, .uneditable-input.span2 { width: 90px; }
  input.span1, textarea.span1, .uneditable-input.span1 { width: 28px; }
}

@media (max-width: 767px) {
  body { padding-right: 20px; padding-left: 20px; }
  .navbar-fixed-top, .navbar-fixed-bottom, .navbar-static-top { margin-righ=
t: -20px; margin-left: -20px; }
  .container-fluid { padding: 0px; }
  .dl-horizontal dt { float: none; width: auto; clear: none; text-align: le=
ft; }
  .dl-horizontal dd { margin-left: 0px; }
  .container { width: auto; }
  .row-fluid { width: 100%; }
  .row, .thumbnails { margin-left: 0px; }
  .thumbnails > li { float: none; margin-left: 0px; }
  [class*=3D"span"], .row-fluid [class*=3D"span"] { display: block; float: =
none; width: 100%; margin-left: 0px; box-sizing: border-box; }
  .span12, .row-fluid .span12 { width: 100%; box-sizing: border-box; }
  .input-large, .input-xlarge, .input-xxlarge, input[class*=3D"span"], sele=
ct[class*=3D"span"], textarea[class*=3D"span"], .uneditable-input { display=
: block; width: 100%; min-height: 30px; box-sizing: border-box; }
  .input-prepend input, .input-append input, .input-prepend input[class*=3D=
"span"], .input-append input[class*=3D"span"] { display: inline-block; widt=
h: auto; }
  .controls-row [class*=3D"span"] + [class*=3D"span"] { margin-left: 0px; }
  .modal { position: fixed; top: 20px; right: 20px; left: 20px; width: auto=
; margin: 0px; }
  .modal.fade.in { top: auto; }
}

@media (max-width: 480px) {
  .nav-collapse { transform: translate3d(0px, 0px, 0px); }
  .page-header h1 small { display: block; line-height: 20px; }
  input[type=3D"checkbox"], input[type=3D"radio"] { border: 1px solid rgb(2=
04, 204, 204); }
  .form-horizontal .control-label { float: none; width: auto; padding-top: =
0px; text-align: left; }
  .form-horizontal .controls { margin-left: 0px; }
  .form-horizontal .control-list { padding-top: 0px; }
  .form-horizontal .form-actions { padding-right: 10px; padding-left: 10px;=
 }
  .modal { top: 10px; right: 10px; left: 10px; }
  .modal-header .close { padding: 10px; margin: -10px; }
  .carousel-caption { position: static; }
}

@media (max-width: 979px) {
  body { padding-top: 0px; }
  .navbar-fixed-top, .navbar-fixed-bottom { position: static; }
  .navbar-fixed-top { margin-bottom: 20px; }
  .navbar-fixed-bottom { margin-top: 20px; }
  .navbar-fixed-top .navbar-inner, .navbar-fixed-bottom .navbar-inner { pad=
ding: 5px; }
  .navbar .container { width: auto; padding: 0px; }
  .navbar .brand { padding-right: 10px; padding-left: 10px; margin: 0px 0px=
 0px -5px; }
  .nav-collapse { clear: both; }
  .nav-collapse .nav { float: none; margin: 0px 0px 10px; }
  .nav-collapse .nav > li { float: none; }
  .nav-collapse .nav > li > a { margin-bottom: 2px; }
  .nav-collapse .nav > .divider-vertical { display: none; }
  .nav-collapse .nav .nav-header { color: rgb(119, 119, 119); text-shadow: =
none; }
  .nav-collapse .nav > li > a, .nav-collapse .dropdown-menu a { padding: 9p=
x 15px; font-weight: bold; color: rgb(119, 119, 119); border-radius: 3px; }
  .nav-collapse .btn { padding: 4px 10px; font-weight: normal; border-radiu=
s: 4px; }
  .nav-collapse .dropdown-menu li + li a { margin-bottom: 2px; }
  .nav-collapse .nav > li > a:hover, .nav-collapse .dropdown-menu a:hover {=
 background-color: rgb(242, 242, 242); }
  .navbar-inverse .nav-collapse .nav > li > a:hover, .navbar-inverse .nav-c=
ollapse .dropdown-menu a:hover { background-color: rgb(17, 17, 17); }
  .nav-collapse.in .btn-group { padding: 0px; margin-top: 5px; }
  .nav-collapse .dropdown-menu { position: static; top: auto; left: auto; d=
isplay: block; float: none; max-width: none; padding: 0px; margin: 0px 15px=
; background-color: transparent; border: none; border-radius: 0px; box-shad=
ow: none; }
  .nav-collapse .dropdown-menu::before, .nav-collapse .dropdown-menu::after=
 { display: none; }
  .nav-collapse .dropdown-menu .divider { display: none; }
  .nav-collapse .nav > li > .dropdown-menu::before, .nav-collapse .nav > li=
 > .dropdown-menu::after { display: none; }
  .nav-collapse .navbar-form, .nav-collapse .navbar-search { float: none; p=
adding: 10px 15px; margin: 10px 0px; border-top: 1px solid rgb(242, 242, 24=
2); border-bottom: 1px solid rgb(242, 242, 242); box-shadow: rgba(255, 255,=
 255, 0.1) 0px 1px 0px inset, rgba(255, 255, 255, 0.1) 0px 1px 0px; }
  .navbar-inverse .nav-collapse .navbar-form, .navbar-inverse .nav-collapse=
 .navbar-search { border-top-color: rgb(17, 17, 17); border-bottom-color: r=
gb(17, 17, 17); }
  .navbar .nav-collapse .nav.pull-right { float: none; margin-left: 0px; }
  .nav-collapse, .nav-collapse.collapse { height: 0px; overflow: hidden; }
  .navbar .btn-navbar { display: block; }
  .navbar-static .navbar-inner { padding-right: 10px; padding-left: 10px; }
}

@media (min-width: 980px) {
  .nav-collapse.collapse { height: auto !important; overflow: visible !impo=
rtant; }
}
------MultipartBoundary--hLXCg58VmOUhCLwQaH490C7Jb0LYqV2sbGnXH2cWYK----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://www.django-rest-framework.org/css/default.css

@charset "utf-8";

pre { font-size: 12px; }

.dropdown .dropdown-menu { display: none; overflow-y: auto; }

.dropdown.open .dropdown-menu { display: block; }

@media (max-width: 480px) {
  .repo-link { display: none; }
}

.repo-link { float: right; margin-right: 10px; margin-top: 9px; }

body.index-page #main-content p.badges { padding-bottom: 1px; }

body.index-page #main-content iframe.github-star-button { float: right; mar=
gin-top: -12px; margin-right: -15px; }

body.index-page #main-content img.status-badge { float: right; margin-right=
: 8px; margin-top: -11px; margin-bottom: 0px; }

a.github { float: right; margin-top: -12px; margin-right: 12px; }

a.github:hover { text-decoration: none; }

body hr { border-top: 1px dotted rgb(163, 0, 0); }

#table-of-contents { overflow: hidden; margin: 0px 0px 20px; }

pre { overflow: auto; overflow-wrap: normal; white-space: pre; }

code, pre { font-family: Consolas, Menlo, Monaco, "Lucida Console", "Libera=
tion Mono", "DejaVu Sans Mono", "Bitstream Vera Sans Mono", "Courier New", =
monospace, sans-serif; font-size: 13px; }

.navbar-inner { }

@media (max-width: 979px) {
  .navbar .brand { margin-left: 0px; padding-left: 0px; }
  .navbar-inner .container-fluid { padding-left: 15px; }
}

.nav-list li.main { font-weight: bold; }

.nav-list a { overflow: hidden; }

.nav-list > li > a { padding: 2px 15px 3px; }

@media (max-width: 767px) {
  #table-of-contents { position: static; }
}

@media (min-width: 768px) {
  #main-content { padding-left: 1em; }
}

blockquote { font-family: Georgia, serif; font-size: 18px; font-style: ital=
ic; margin: 0.25em 0px; padding: 0.25em 40px; line-height: 1.45; position: =
relative; color: rgb(56, 56, 56); border-left: none; }

blockquote::before { display: block; content: "=E2=80=9C"; font-size: 80px;=
 position: absolute; left: -10px; top: -20px; color: rgb(122, 122, 122); }

blockquote p:last-child { color: rgb(153, 153, 153); font-size: 14px; displ=
ay: block; margin-top: 5px; }

html { width: 100%; background: none; }

body, .navbar .navbar-inner .container-fluid { max-width: 1150px; margin: 0=
px auto; }

body::before { content: " "; position: fixed; width: 100%; height: 100%; to=
p: 0px; left: 0px; background: url("../img/grid.png") repeat-x; will-change=
: transform; z-index: -1; }

#main-content h1:first-of-type { margin-top: 0px; }

#main-content h1, #main-content h2 { font-weight: 300; margin-top: 20px; }

#main-content h3, #main-content h4, #main-content h5 { font-weight: 300; ma=
rgin-top: 15px; }

#main-content img { display: block; margin: 40px auto; }

.navbar .navbar-inner { background: rgb(44, 44, 44); color: white; border-r=
ight: none; border-bottom: none; border-left: none; border-image: initial; =
border-top: 5px solid rgb(163, 0, 0); }

.navbar .navbar-inner .nav li, .navbar .navbar-inner .nav li a, .navbar .na=
vbar-inner .brand { color: white; }

.nav-list > .active > a, .navbar .navbar-inner .nav li a:hover { background=
: rgb(33, 33, 33); color: white; }

.navbar .navbar-inner .dropdown-menu li a, .navbar .navbar-inner .dropdown-=
menu li { color: rgb(163, 0, 0); }

.dropdown-menu .active > a, .dropdown-menu .active > a:hover { background-i=
mage: none; }

.navbar-inverse .nav .dropdown .active > a, .navbar-inverse .nav .dropdown =
.active > a:hover, .navbar-inverse .nav .dropdown .active > a:focus { backg=
round-color: rgb(238, 238, 238); }

.navbar .navbar-inner .dropdown-menu li a:hover { background: rgb(238, 238,=
 238); color: rgb(194, 0, 0); }

.hero-unit h2, .hero-unit h1 { color: rgb(163, 0, 0); }

body a { color: rgb(163, 0, 0); }

body a:hover { color: rgb(194, 0, 0); }

@media (min-width: 767px) {
  .sidebar-nav-fixed { position: fixed; width: 19%; max-width: 240px; }
  .navbar { position: fixed; }
  .navbar .navbar-inner .container-fluid { max-width: 1110px; }
}

h1 code, h2 code, h3 code, h4 code, h5 code { color: rgb(51, 51, 51); }

html, body { height: 100%; }

.wrapper { min-height: 100%; margin: 0px auto -60px; height: auto !importan=
t; }

.body-content { padding-top: 70px; padding-bottom: 70px; }

@media (max-width: 979px) {
  .navbar-fixed-top .navbar-inner { padding: 0px; }
}

@media (max-width: 767px) {
  .body-content { padding-top: 0px; }
}

@media (min-width: 768px) {
  footer.span12 { width: 95%; }
}

footer, .push { height: 60px; }

footer p { text-align: center; color: gray; border-top: 1px solid rgb(221, =
221, 221); padding-top: 10px; }

footer a { color: gray; font-weight: bold; }

footer a:hover { color: gray; }

.btn-inverse { background-image: -webkit-linear-gradient(top, rgb(96, 96, 9=
6), rgb(64, 64, 64)) !important; }

.modal-open .modal, .btn:focus { outline: none; }

@media (max-width: 650px) {
  .repo-link.btn-inverse { display: none; }
}

td, th { padding: 0.25em; background-color: rgb(247, 247, 249); border-colo=
r: rgb(225, 225, 232); }

table { border-color: white; margin-bottom: 0.6em; }

.side-nav { overflow-y: scroll; }

ul.sponsor.diamond li a { float: left; width: 600px; height: 20px; text-ali=
gn: center; margin: 10px 70px; padding: 300px 0px 0px; background-position:=
 0px 50%; background-size: 600px; background-repeat: no-repeat; font-size: =
200%; }

@media (max-width: 1000px) {
  ul.sponsor.diamond li a { float: left; width: 300px; height: 20px; text-a=
lign: center; margin: 10px 40px; padding: 300px 0px 0px; background-positio=
n: 0px 50%; background-size: 280px; background-repeat: no-repeat; font-size=
: 150%; }
}

ul.sponsor.platinum li a { float: left; width: 300px; height: 20px; text-al=
ign: center; margin: 10px 40px; padding: 300px 0px 0px; background-position=
: 0px 50%; background-size: 280px; background-repeat: no-repeat; font-size:=
 150%; }

ul.sponsor.gold li a { float: left; width: 130px; height: 20px; text-align:=
 center; margin: 10px 30px; padding: 150px 0px 0px; background-position: 0p=
x 50%; background-size: 130px; background-repeat: no-repeat; font-size: 120=
%; }

ul.sponsor.silver li a { float: left; width: 130px; height: 20px; text-alig=
n: center; margin: 10px 30px; padding: 150px 0px 0px; background-position: =
0px 50%; background-size: 130px; background-repeat: no-repeat; font-size: 1=
20%; }

ul.sponsor { list-style: none; display: block; }

#mkdocs_search_modal article p { overflow-wrap: break-word; }

.toclink { color: rgb(51, 51, 51); }

.book-cover img { margin: 0px !important; display: inline-block !important;=
 }
------MultipartBoundary--hLXCg58VmOUhCLwQaH490C7Jb0LYqV2sbGnXH2cWYK----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://www.django-rest-framework.org/img/grid.png

iVBORw0KGgoAAAANSUhEUgAAAFoAAAEyCAYAAAB6eMeBAAAACXBIWXMAAAsTAAALEwEAmpwYAAAB
bmlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczpt
ZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNC40LjAiPgogICA8cmRmOlJERiB4bWxuczpyZGY9Imh0
dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogICAgICA8cmRmOkRl
c2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgICAgICAgICB4bWxuczpkYz0iaHR0cDovL3B1cmwu
b3JnL2RjL2VsZW1lbnRzLzEuMS8iPgogICAgICAgICA8ZGM6c3ViamVjdD4KICAgICAgICAgICAg
PHJkZjpCYWcvPgogICAgICAgICA8L2RjOnN1YmplY3Q+CiAgICAgIDwvcmRmOkRlc2NyaXB0aW9u
PgogICA8L3JkZjpSREY+CjwveDp4bXBtZXRhPgrlPw1BAAAD6klEQVR4nO3dwXIbVRBA0R4DgaLg
/z8UNkDCY5FSwcKJjDW+PA/nrF0d5Wb8LE1b0TEzP8/M78Ob+nZmZq3126ODjuP43pwve3p0AC8j
dEToiNARoSNCR4SOCB0ROiJ0ROiI0BGhI0JHhI4IHTnGhiVhwxLNcXREhI4IHRE6InRE6IjQEaEj
QkeEjggdEToidEToiNARoSO3DQtv7LZh+eXRQbttNHab4+iICB0ROiJ0ROiI0BGhI0JHhI4IHRE6
InRE6IjQEaEjQke8hyXiPSzRHEdHROiI0BGhI0JHhI4IHRE6InRE6IjQEaEjQkeEjggdETpiwxKx
YYnmODoiQkeEjggdEToidEToiNARoSNCR4SOCB0ROiJ0ROiI0BEblogNSzTH0REROiJ0ROiI0BGh
I0JHhI4IHRE6InRE6IjQEaEjQkeEjtiwRGxYojmOjojQEaEjQkeEjggdEToidEToiNARoSNCR4SO
CB0ROiJ0xCfdR3zSfTTH0REROiJ0ROiI0BGhI0JHhI4IHRE6InRE6IjQEaEjQkeEjngPS8R7WKI5
jo6I0BGhI0JHhI4IHRE6InRE6IjQEaEjQkeEjggdEToidMSGJWLDEs1xdESEjggdEToidEToiNAR
oSNCR4SOCB0ROiJ0ROiI0BGhIzYsERuWaI6jIyJ0ROiI0BGhI0JHhI4IHRE6InRE6IjQEaEjQkeE
jggdsWGJ2LBEc658dKz/+gH809Ns9oDmvMdznDTnFK7oyJVDb+XM0FtdQSc65e/lio4IHRE6InRE
6IjQEaEjQkeEjggdETpyzMxPL/i6q97HeAvP3p69bVh+fXj6cXxYaz28ErvqHEdHZMcNyyW5oiNC
R4SOCB3ZMfRZP5y3+iG/Y+hLEjri1w3u8+sG74nQEaEjQkeEjrh7Fzlm5seZ+TiCv6nbhuWMTcR3
a60/zHnejme0ex28ntARoSNC37fdTaWtfvjsxhUd8cow4oqOCB3ZMbRXhrye0BGhI0Lf55Xhe3LM
zA/zecPyGv/nuP/qvxK6bVheG/rvP/U4vllrfTLnec7oiNARoSPu3kVc0ZErh97qO3XH0FsFOsuO
oS9J6IjQEaEjnkff5zbpe+LoiAgdETpyzMyHmXnpjW3n8Jd9deNy27CcsYl4Wmv9ac7zrnx0bPXd
t+Pz6N0ezymufEVvReiI0BGhI0JHhL7P3bv3ZMfn0Zfk6IgIHRE6InRE6IjQkWM+3/y/d2PbU8CX
++rnsJyxiTjWWg//g1xgzrNf6wVL5LJn9BlX85m2C71boLNsF/qqhI4IHRE6InRE6IjQEaEjQkeE
jggdEfqOs+69CB35C5POmCO+HvwnAAAAAElFTkSuQmCC

------MultipartBoundary--hLXCg58VmOUhCLwQaH490C7Jb0LYqV2sbGnXH2cWYK----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://fund-rest-framework.s3.amazonaws.com/Amazatic-Logo.png

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
+wbg/wA5sLXNf+kDtAAAAABJRU5ErkJggg==

------MultipartBoundary--hLXCg58VmOUhCLwQaH490C7Jb0LYqV2sbGnXH2cWYK----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://www.django-rest-framework.org/img/filter-controls.png

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
1LcqpNhHALR+mO3Hp6WO/BtEQICA9m3vLAT/qr8A75sA4dhNn+MAAAGdaVRYdFhNTDpjb20uYWRv
YmUueG1wAAAAAAA8eDp4bXBtZXRhIHhtbG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4OnhtcHRrPSJY
TVAgQ29yZSA1LjQuMCI+CiAgIDxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcv
MTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+CiAgICAgIDxyZGY6RGVzY3JpcHRpb24gcmRmOmFi
b3V0PSIiCiAgICAgICAgICAgIHhtbG5zOmV4aWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20vZXhpZi8x
LjAvIj4KICAgICAgICAgPGV4aWY6UGl4ZWxYRGltZW5zaW9uPjc3OTwvZXhpZjpQaXhlbFhEaW1l
bnNpb24+CiAgICAgICAgIDxleGlmOlBpeGVsWURpbWVuc2lvbj40OTY8L2V4aWY6UGl4ZWxZRGlt
ZW5zaW9uPgogICAgICA8L3JkZjpEZXNjcmlwdGlvbj4KICAgPC9yZGY6UkRGPgo8L3g6eG1wbWV0
YT4K9q2ZFgAAQABJREFUeAHsnQmAHEW9/397ZpPNfd93yEFCgEDCGU65RBAUvEEQ/6JPHz4Q8Xqi
z/dQwVsEREUOFQW55BLkDEciEI4EQg6SkPu+s8ne++9Pzdakd3ZmZ2Z3dndm91vQ6e7qquqqT/dO
/371q19V3rlWUGcKIiACIiACIiACIiACIiACIhBDID/mXKciIAIiIAIiIAIiIAIiIAIi4AhIWdCL
IAIiIAIiIAIiIAIiIAIiEJdA3sCBAzUMKS4aRYqACIiACIiACIiACIhA5yYgy0Lnfv5qvQiIgAiI
gAiIgAiIgAgkJCBlISEaXRABERABERABERABERCBzk1AykLnfv5qvQiIgAiIgAiIgAiIgAgkJCBl
ISEaXRABERABERABERABERCBzk1AykLnfv5qvQiIgAiIgAiIgAiIgAgkJCBlISEaXRABERABERAB
ERABERCBzk1AykLnfv5qvQiIgAiIgAiIgAiIgAgkJCBlISEaXRABERABERABERABERCBzk1AykLn
fv5qvQiIgAiIgAiIgAiIgAgkJCBlISEaXRABERABERABERABERCBzk1AykLnfv5qvQiIgAiIgAiI
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
qCACIiACIiACIiACmSJw9tlnawXnGJh+ZeqY6LRPfTmyLKSNruNlYKXmeAHlgQXXmhuYBcGvv9Dc
MpRPBERABERABERABESg/QjIwbn92OvOIiACIiACIiACIiACIpDVBKQsZPXjUeVEQAREQAREQARE
QAREoP0ISFloP/a6swiIgAiIgAiIgAiIgAhkNYF291nwDsI4CccLieLjpW0qLlPl4OxBSOTgzH1I
4/ccs7FSoc/bVD11TQREQAREQAREQAREIDUCXsYidaxsVlBQ4OQxJnFh7Qe/59ivNUWelgbKCq9Z
1ZLyEsmr1N3XvyXlNydvu1oWeEAI0YnANKdByiMCIiACIiACIiACIiACHYkAsjIycyaUm3S5FMb2
dseep1ugT59KOe3RYF8/7UVABERABERABERABEQglwggX3urSFP1TkUObyq/v0Y5hZhofCAifO7j
092nWk6mTDbp1k/pRUAEREAEREAEREAERCDXCNDRXljYtBdBqnJ4srb7ctp1GFKySuq6CIiACIiA
CIiACIiACIhA+xGQstB+7HVnERABERABERABERABEchqAlIWsvrxqHIiIAIiIAIiIAIiIAIi0H4E
pCy0H3vdWQREQAREQAREQAREQASymoCUhax+PKqcCIiACIiACIiACIiACLQfASkL7cdedxYBERAB
ERABERABERCBrCYgZSGrH48qJwIiIAIiIAIiIAIiIALtR0DKQvux151FQAREQAREQAREQAREIKsJ
SFnI6sejyomACIiACIiACIiACIhA+xFoegm49qtXyneu2b/flvzqJusyoL+Nu/TilPORcOfb79i2
ea/YuMsuaZRv35q1tvKuPzeIzy8uttKxY6zX5MnWY+KEBtd0IgIiIAIiIAIiIAIiIAIdjUDOKws7
F75jXYcOsfKNG4Ntk5UMHpTyMyodOcKKundvMj0KSEHXbi5NbXWV7X1/la154EEbcf6HrfuE8U3m
1UUREAEREAEREAEREAERyGUCOa8s7HjzLRs4+zjbs+w943jIGadFn8f6x5+wkkEDDSvB3uUrrbC0
m/U5/DDrd+QMl6Z88xbbuWChlY4eFc0Te1DYs6cVdosoC1wr7tvXtrw016rLy6NJKWP7G29Zxa5d
VjxggPU79mgr7t8ven33kqW2893Ftm3PnmicDkRABERABERABERABEQg2wnktLKwf916qy4rsx5B
D39Bt662+t77bfCpJ1teYaRZVTt32s6Fb1ufQ6fbqI9f4CwPG5562vKLCl0cQ5gqtm1P6xntXb7C
qvfts9IRw10+FJSNzz5vg06YHSgK/W3HO4tszf0P2MiPXWj53Utt9+LFtvWVV63PjBlWl2e2fv36
tO6nxCIgAiIgAiIgAiIgAiLQXgRyWllAUO899WDLKyiw0pEjg+FCXW1X0IPfe9rUKM+uQwbbkNNO
decMV6oJLAJb5/7bKQvRRE0crLr7HsvLj/iBk7dy714b/YkLrbhPH6urq3NlDTj6KOs9fZrV1tba
oIEDbP/WLc7K0e+4Y2zHGwus7/Tp1v2g8Va+ZYsNHTq0ibvpkgiIgAiIgAiIgAiIgAhkD4GcnQ2p
trLKKQag3D7/DbcVBUOGdry5oAHd7mPGNDwfO9oqd+yw2qqqBvGJTnpOmmi9AoWEDYUAH4ctL81z
yVEeqoKhRd3HNBzGVDpylJVv3WY1FRVWVbbXug6XgpCIr+JFQAREQAREQAREQASyl0DOWhZ2vftu
QDXPylavcZtDHPT0l2/ebJXbdwS+BX1cVF5hQQP6fohSXYrKQp/DpjfwWSgdNcpW3HFXMHxpm+UV
Fbmy8wsje38jLB111dVuIy6/IGcx+yZpLwIiIAIiIAIiIAIi0AkJFNbU1DRodux5g4tpnGSqnES3
xILQ/+iZNuDYYxokWf6H290QoEEnn+jimSEpHMo3bTamQC0IOS2Hryc7ZlhTXn6BVe3a7RyjURj2
B2X26N0rmrV8y1Yr7h1xjM4LFAn8IkoC52oFERABERABERABERABEWgJgVRk7FTSpFIHyskvCHrB
/UYmf9ySfarlpFLJeGkqtm61/evWWa+DpzS63GvKZOfUXBf4DxCYiWjPe8vdcfXeMtvy4svW+5Bp
7rxZ/+TlBb4RJVYTODlbcNw3KGvLSy875YHy9q58P7jfsqBuB7vrvSYeFMyU9KZxbwUREAEREAER
EAEREAERaAmBZDI6ZSdLk8p1X05Ojo/BqtA1cBQu7t27EeteUybZpmefc1OpcrHXlCm26elnbe2D
D7thQSymNujE2Y3ypRNR2KOHlQXTsfYMlJUBwbSt1ZWVtvz2O4PxRvnBjEd5Nmj2bOs2fJihjfU9
4nCrCq6v/cfDtie4piACIiACIiACIiACIiACuUIg79prr63zla0MhNriYIhOSwNCMhpLslCVot9A
snISXV9199+sdMxo63/ULKvavcf5HsT6MCTKmyieGZAI7P3GLEi1QZurgmlc84MZmWg/cez9Vh20
dWNgDXnymWcSFa14ERABERABERABERCBNAiceeaZNiBY46owmDY/3FueH3Tgcs6eLS/osPV7jtkI
fp/GLds9aVG9z2yiiqQqhyfK7+N9OTlpWfCNSGdf1LNHOsnTTsv0qoWlpU5JiJs5eCkLunSJe0mR
IiACIiACIiACIiACIpCNBHJ26tRUYHYJ1jwo6tEzlaRKIwIiIAIiIAIiIAIiIAIiEEOgQ1sWBp9y
ckxzdSoCIiACIiACIiACIiACIpAqgQ5tWUgVgtKJgAiIgAiIgAiIgAiIgAg0JiBloTETxYiACIiA
CIiACIiACIiACAQEpCzoNRABERABERABERABERABEYhLQMpCXCyKFAEREAEREAEREAEREAERkLKg
d0AEREAEREAEREAEREAERCAuASkLcbEoUgREQAREQAREQAREQAREoF2VBVbSUxABERABERABERAB
ERABEUhOoD1k53aV1tujwckfg1KIgAiIgAiIgAiIgAiIQPYRaA/ZuV2Vhby8PCssLLT2aHj2PX7V
SAREQAREQAREQAREQAQaE0BWRmZGdm7r0O4rONPogoICt8U2vqamJm58bLpk55ksxys2dXV15rfa
2lp3zJ57kYY9bfMbdaSdCiIgAiIgAiIgAiIgApkhgGyFEM3m5Um/Rx7jmD3ymN972czLh5y3JFRW
VlpxcXFLinB5fX1aXFCGC2hXy0KG26LiREAEREAEREAEREAEREAEMkigEC0mHGLPw9fSOe7o5Xir
AvtYy4K3MPg9LDhmy2TYv3+//etf/7K5c+faxo0bbffu3davXz8bPny4jR492j70oQ9Znz59MnnL
nClr27Zt9vTTT9uIESPs6KOPzpl6q6IiIAIiIAIiIAKpE/DylZc7w1YCZDQCe+L93lsWuJYp2czf
nzJbErKxnELMMz5QwfC5j0933xnK4YXzW/gFhFX4RfU8SYv5K1NhwYIFdu2119qaNWtckZSNYrB+
/Xp7/fXXXdzvfvc7u+CCC+ySSy6xHj16ZOrWOVHOunXr7Prrr7fTTjtNykJOPDFVUgREQAREQATS
J4D8w4a8xRbvmDhkM7/3ygLyqo9L/84HcnR0ubfdfRYOoNZRqgSeeOIJ++///m/3R3HhhRfa+eef
b2PHjnUvPBoyCsPDDz9sd999t91555329ttv20033eTG86V6D6UTAREQAREQAREQAREQgcx1dYtl
mxDYt2+f/fSnP3X3+sEPfmBf//rXbfz48U5RIBINmWFIX/ziF+3vf/+7DRw40Fka6GVXEAEREAER
EAEREAEREIF0CEhZSIdWFqR96KGHbPv27XbCCSfYqaee2mSNUBR+/vOfOwXigQcesD179jSZXhdF
QAREQAREQAREQAREIExAykKYRg4cL1261NVy+vTpKdV24sSJdtBBBzn/ioULF6aUR4lEQAREQARE
QAREQAREAALyWcix96C8vNzVuGfPninX/IwzznDWha1bt8bNwyxKc+bMMZymUShw/Dn00EPdduyx
x1ppaWncfEQyt/CDDz7oZmTasGGD7dixw3r37m2jRo2ys88+24477rjoEKlwIczihHP2xRdf7Hwv
cACfN2+e2/bu3et8Mnx6/DCee+4553uB/8XatWtt6NChzk/j4x//uNv7tIn2lIl15dlnn3UzR/Xt
29dGBzNGzZgxwz784Q83cEpPVIbiRUAEREAEREAERKCzEZCykGNPHCsBgvbLL79s55xzTkq1//Sn
P21s8cLq1avtq1/9qrFnQZFJkya5ZCgA99xzj40bN85uvPFGGzBgQKPs7777rl1xxRVuWBTCN07W
CPFMW4pw/8wzz9iJJ57oZiXClyIcHnvsMXvhhRfsk5/8pEt/5ZVX2uLFi12Sbt26RZWFXbt2uWPa
S8AfAwY4cVNHNmZ8uvrqq931eP+sWLHCtZE8w4YNswkTJjiF48knn7R//vOf9vjjj7s6ouQoiIAI
iIAIiIAIiIAIHCAgZeEAi5w4mj17tt1666321FNP2W9/+1u79NJLraioqFl1Rzj/0pe+ZPS6s0eh
8CsQYjG466677JZbbnH3YI+g7QMWhK997WvmhXmsCH6aWNJs3rzZvvWtbzml4bbbbrPLLrvMZ22w
x6rBNQR5pjk97LDDbMyYMS7Npk2b7HOf+5yzBJx55pn2n//5nw2UFpSV73znO/a3v/3NrS8Bi9hA
O6gnyszNN9/coA0oSFdddZVzAL/99tudQhGbX+ciIAIiIAIiIAIi0JkJNOzu7cwkcqTt9PRjCWCo
EOsonHXWWfb973/f6KlnYbZ0wi9/+Uu3kBvrNSBoe0WBMjhGUGeKVoYXoZiEw6OPPmoI81/4whfs
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
zuUiKynJjXmX4ykLEUUhmL40NAtSREGoNZa2R2Fgo53phugrERxELQ1BIeEPmVcg0i1b6UVABERA
BBoSiP7mhqODyLjx4TQ6FgERaBcCXob0Ds6FhYWB4oBycMDZ2Tsx+31rKAut3fjq6honM3fv3i1o
W9v+IrWrslBeXukE6MLCgtZm3CHKd69G274fHYKbGiECIiACqRLQT2yqpJROBESgLQl4WRnZuVu3
Lm15a2tXZYFe927dStq0wR3xZvq4dcSnqjaJgAiIgAiIgAiIwAECKAz79pUHEW2rLKQw8f+BSmb6
KDqJT6YLVnkiIAIiIAIiIAIiIAIi0MEItIfs3K7KQgd7fmqOCIiACIiACIiACIiACHQoAlIWOtTj
VGNEQAREQAREQAREQAREIHMEpCxkjqVKEgEREAEREAEREAEREIEORUDKQod6nGqMCIiACIiACIiA
CIiACGSOgJSFzLFUSSIgAiIgAiIgAiIgAiLQoQhIWehQj1ONEQEREAEREAEREAEREIHMEcgpZaG8
vNythJy55qskERABERABERABERABERCBRATadVG2RJWKjX/vveW2cOFCq6ysNJbonjZtmk2ePMlW
r15tc+fOi01u5557js2ZM8d27NjZ6NqsWbNs9OhRjeKbilixZrX1KC21AX37NZVM10RABERABERA
BERABESgQxEorKmpadCg2PMGF9M4yVQ5GzZssPnz51thYaFNmjTJ6upqbc+ePQ1qMmzYUOvdu3c0
jrTjxo03LBHr16+37du324QJE6xLly4N0kUzNHFQESgoZfv22ehhw5tIpUsiIAIiIAIiIAIiIAIi
0PoEUpGxU0mTSk0pp7CgoCCalojwefRCmgeZKofbLl26zN391FNPtV69errjqqoqt/f/DBs2zMaM
GeNP3X7cuLFuj8KAsnDQQROse/fuDdKkcrJ561br36eP5edHRmwtW7YsGApVaxMnHuSyv/vuu1Zc
XBxYK0a7861bt9iSJUtt586dgYJTZAcffLD17NnDXauurnb75v6zY8eO5mZVPhEQAREQAREQARHI
SgJ9AjlLIXUCyWT1TMnhvpysH4aEFaGkpCSqKICyqKioAdHVq9fYrl27XFz37j1s/PhxDa4396S6
ptp27N5lU8ZPiBaxf3+51dYesMbs27c/OK+LXl+48J1AkZhoAwf2dxaQ6uoDaVeuXBlN15wD/TE1
h5ryiIAIiIAIiIAIiIAINJdA1isLFRUVTlmggXPnzrUtW7a6IUlnnXVmtM0bN240NsLAgQMypixs
2bbdevfs5e4XvVmSA6we1dVVwXAps27dSoPjaueUjYVj9+7dSXLrsgiIgAiIgAiIgAiIgAhkD4Gs
VxawKpSVlTmBu3fvPsHwnl22b19ZA4JHHDEjOgwIB+hMhNpA2t+6I/B1iBnelKzsQw+dbosWLbIF
CxbYoEGDA1+JccEQpoLAf6IicM7OqcmnkjVV10VABERABERABERABDo4gayXXnv27Bn00tfZtm3b
3AxIQ4YMbvRI8Cdg/Bab9y1olCjNiG2Bf0Bp125WUtylQc7CwoLAWnBgaNH+/fsbXB84cKDNnj3b
jjvuOKfkrFq1yl0vLi5yztkNEutEBERABERABERABERABLKYQNZbFpjFiBmN5sx5IeilH++GIcXy
XLVqtbM4+PipU6cGfg0ta9rmbVttVJwZkPr16xdM2fpm4KdQaygK24J03peAOKwgXbt2DZypS51j
s7cmdOvWzcX7OmovAiIgAiIgAiIgAiIgAtlOoGUSdRu0bvDgQTZjxuH21lsLbPHiJW6dBWY2CodN
mzYZmw+swdASZWFn4FvA9KvdAwE/NqAsMAXrww8/4nwpBgwYGE2C1/iLL77k8mINoYzp0w+JXh87
tuGMTdELOhABERABERABERABERCBLCSQ9coCzMaPH++2fcF6B/gw+KFGI0eONLamAooGWzphUzBd
6qD+/eNmQQE46aQT3RoOTJmKUoBFgT2zNJ1++mmBT8U+p9RQT+/gTGElJV3jlqlIERABERABERAB
ERABEchGAjmhLHhwDOVpizB25AgrCtZIaCpgXUBBiBdQaJhelfUYFERABERABERABERABEQgVwlk
vYNze4BNpii0R510TxEQAREQAREQAREQARFoawJSFtqauO4nAiIgAiIgAiIgAiIgAjlCQMpCjjwo
VVMEREAEREAEREAEREAE2pqAlIW2Jq77iYAIiIAIiIAIiIAIiECOEJCykCMPStUUAREQAREQAREQ
AREQgbYmIGWhrYnrfiIgAiIgAiIgAiIgAiKQIwSkLOTIg1I1RUAEREAEREAEREAERKCtCUhZaGvi
up8IiIAIiIAIiIAIiIAI5AiBwsrKygZVjT1vcDE4ycvLi42Ke86qxslCikUlK0bXRUAEREAEREAE
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
Qr9+9cFC9+49bL/99rdVq1a6gKKwsMBWr17tWhDy8/Mj9+uggw4OAoXGTWX9+vULWh0WudYFTbOz
s23kyJGRY3QNAwYMtG7dciPrmjOzdE2pfWNIH8vtmmXF3fNs9YYyG1BS6A5dtb6sOVmwDwLJCQSf
Vf9v7n/eXGFlW7Ymdzx7I4AAAggg0IRArEDhX5+stf+ctTB4kNvEwWxOa4F2CRbaUkSVelWEfLCQ
m5trJSUl7hRa99RT0928xjGom5JSdXW1hYMFdWWKTmPHjrVXX33V1KqwdOkyGzJkSBAYdIvspi5Q
U6dOjSw3Z6ayequtC1oTKvvX2KKvSi03J9uWr9scCRYqa3ZsJe7yqaPsnYUb7ZXP1kcu5/8FfQ7/
8MyXtmhNhU3dvb8dv88AKynMtRXrt9h9Ly2zd4P9lfKC4Of8Q4fZvmNKrKxyq/0z+A/i8TdXum1H
7NrX+hd1s0+XbbbT9h9sT7y10roF+4/pX2jLN1TatL0GmJ48vDx3nampsi74X0X5XXj4cJdffm62
LQ7Of/uzX9rC1RVWVJBjvzj5G/aHYPmiYJ8hvfPtrS822H8/v9guPXKE7Tmq2DZV1Nifg7x8+Yb3
ybeL/m24jepXGORRbg+/utw+XrrZla+lv44MruuEfQZa357dbGNwPl3vzPe/ctklsirolu3KvfuI
IssKmmlV9r8EZa2ornXHxiurv+7fB//xXvRvI2xE33xb8FWF/efMhbZ6U5U7tkd+jl1yxAibNKyn
VQetVv/zRv098Nd40Dd625K1W2zZ+krT/X7j8w32zbEltldgpvt230tL7fX5G9zuhUE5Lw7OM2l4
T9sUBBh3z15iZx00xH71989t7WYG53tTpggggEAmCYwO/naP7l9g//thfRdwXTuBQiZ9Ara/1pTv
hqTgoLi42AULGrvggwddyty5c123pClTptjJJ5/itm1/iRZU2La/zJEjR7nWhDfffCMIMmps9Ogx
2x2qsRDr1q3bbn28FcuDLkj5QUvEutIttiIY5KyK4leh1oTcoPViR6aBxXnWM79royKM6FvgKvbj
BnZ3A5Xue3Gp/Z/7PwmCilK78tgxrlKvA/5vMK9K803/+NweeGWZfXuP/u5H24oLutrOQ3u6Sqwq
6Ao8dJ6Dd+ptqjDrqcNfg0rqt3brZ/uOrR/DcdbBQ23ikB6mivGVD37qKuMKHpSyg/ultyx8L6gU
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
uhtSe0voA1JY2LHg7X1N5I8AAggggAACCCCAQFsJNO9xeludjXwQQAABBBBAAAEEEEAgbQQyumUh
be7S1wW97cQ+NmpUw0DrdCs/5UUAAQQQQAABBMICCxcuDC8yn4ICjVoW0q3fVgp6UiQEEEAAAQQQ
QAABBDqNQKNgodNcFReCAAIIIIAAAggggAACrRYgWGg1IRkggAACCCCAAAIIINA5BQgWOud95aoQ
QAABBBBAAAEEEGi1AMFCqwnJAAEEEEAAAQQQQACBzilAsNA57ytXhQACCCCAAAIIIIBAqwUIFlpN
SAYIIIAAAggggAACCHROAYKFznlfuSoEEEAAAQQQQAABBFotQLDQakIyQAABBBBAAAEEEECgcwoQ
LHTO+8pVIYAAAggggAACCCDQagGChVYTkgECCCCAAAIIIIAAAp1TgGChc95XrgoBBBBAAAEEEEAA
gVYLECy0mpAMEEAAAQQQQAABBBDonAIEC53zvnJVCCCAAAIIIIAAAgi0WoBgodWEZJApAsuXL7dT
TjnFampq0uqSH3/8cbvllltcmW9vimaDAAAucUlEQVS++WbTMgkBBBBAAAEEEGiOQE5zdmIfBBBI
X4Ft27aZfpSOO+446969e/peDCVHAAEEEEAAgQ4VIFjoUO4de7Lbb7/ddt99d9t///0jBbnqqqvs
kksuseHDh9uzzz5r06dPt40bN9rAgQPtzDPPdPtr56qqKrvvvvvs7bffdpXNyZMn27Rp01w+L7zw
gq1evdp22mkne+yxx1yFtLKy0hYuXGiDBg2yGTNmWFlZmR1wwAF27rnnWlZWlsvvnnvucflp32HD
htlFF11kI0eOtE2bNtkNN9zgynX33XfbihUrbK+99rLzzz/f7rzzTpszZ4716NHDzjvvvEj5li5d
atr3yy+/dHmcfPLJNmHChMh1tmRm7ty59sADD9iSJUtsyJAhNnXq1EbZJDJZsGCB6fpUHlXO5XX6
6adHjp85c6Y9//zztmbNGhs1apSdffbZNnr0aLc9Ub66h/vss4+9+eab9v7771thYaG7T/vuu28k
77///e82e/ZsW79+vdu3pKQksu21116zoUOH2uDBg+3ll19OeI900FNPPeXy0j057LDDXNChz8ah
hx4ayZMZBBBAAAEEEOi8AnRD6rz3drsrW7VqlW3evLnRelWEq6ur7fPPP7d7773XVTxvuukm22OP
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
g25IE8eNt61bt1pWMI6BhAACCCCAAAIIIIBAJgkQLDTjbmvsAgkBBBBAAAEEEEAAgUwT4HF5pt1x
rhcBBBBAAAEEEEAAgWYKECw0E4rdEEAAAQQQQAABBBDINAGChUy741wvAggggAACCCCAAALNFCBY
aCYUuyGAAAIIIIAAAgggkGkCBAuZdse5XgQQQAABBBBAAAEEmilAsNBMKHZLTuDmm2+2xx9/3B0U
nk8ul/Tb+yc/+Ym9/PLLGXfd6XenKDECCCCAAAIINEeAd4I2R4l9khY47rjjrHv37kkfl+4HbNu2
zfSjlKkG6X4PKT8CCCCAAAIINAgQLDRYZMTcCy+8YE8//bRt2rTJdt11Vzv//PNdpV7LN9xwg11y
ySV2991324oVK2yvvfZy2++8806bM2eO9ejRw8477zzbfffdnZXyevLJJ23t2rVWVFTkKsdHHXWU
2/baa6/Z0KFDbfDgwW3imuhcC4Jv2L7nnnvsyy+/dNcyefJkO/300yPnnTlzpj3//PO2Zs0aGzVq
lJ199tk2evRot33p0qXuenXsyJEj7eSTT7YJEya4bbfffrvts88+9uabb9r7779vhYWFduaZZ9q+
++7rtm/evNnuuusu+/jjj61r1652/PHHR86pmbCBWhsWLlxogwYNshkzZlhZWZkdcMABdu6550a+
8O+pp56y2bNnu3tz2GGHuaBj4MCBduihhzbKlwUEEEAAAQQQQKCjBOiG1FHSKXAeVUQfffRRO/XU
U+2KK66w8vJyu+WWW1zJamtrbfHixa7ye9JJJ9nll19ub7/9tpv26dPHrr76ahs3bpzdcccdbv+5
c+eagoijjz7abrrpJps6dar95S9/sdLSUrd99erVkfnWXnpT57r11lttxIgR9qtf/coFN88++6y9
/vrr7rTPPPOMPfLII3bMMcfYNddcY7169XLl3bJli23cuNGuvfZa23nnne3nP/+5m6rL1MqVK92x
q1atcoGEgp6f/vSnttNOO9kf//hHq6qqctt1PgVKP/rRj+ziiy92AYmO8SlsoMDilVdecUHXpZde
ameccYY999xzzlj7K6B54oknXMChrkxLliwxlV1lJCGAAAIIIIAAAjtKgJaFHSW/A8772GOPuSfZ
/sm4KrlqSdCTeVWilVSJ3WWXXdz8pEmTTBVePU1Xys3NtZdeesmqq6vdk/ETTjjBfEuCnpg/8MAD
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
n/P/fysL5Vl8WLtPAAAAAElFTkSuQmCC

------MultipartBoundary--hLXCg58VmOUhCLwQaH490C7Jb0LYqV2sbGnXH2cWYK----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://www.django-rest-framework.org/img/search-filter.png

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
1LcqpNhHALR+mO3Hp6WO/BtEQICA9m3vLAT/qr8A75sA4dhNn+MAAAGdaVRYdFhNTDpjb20uYWRv
YmUueG1wAAAAAAA8eDp4bXBtZXRhIHhtbG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4OnhtcHRrPSJY
TVAgQ29yZSA1LjQuMCI+CiAgIDxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcv
MTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+CiAgICAgIDxyZGY6RGVzY3JpcHRpb24gcmRmOmFi
b3V0PSIiCiAgICAgICAgICAgIHhtbG5zOmV4aWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20vZXhpZi8x
LjAvIj4KICAgICAgICAgPGV4aWY6UGl4ZWxYRGltZW5zaW9uPjU5MTwvZXhpZjpQaXhlbFhEaW1l
bnNpb24+CiAgICAgICAgIDxleGlmOlBpeGVsWURpbWVuc2lvbj4xMDg8L2V4aWY6UGl4ZWxZRGlt
ZW5zaW9uPgogICAgICA8L3JkZjpEZXNjcmlwdGlvbj4KICAgPC9yZGY6UkRGPgo8L3g6eG1wbWV0
YT4KsGGArQAAFxpJREFUeAHt3QeQFMXbx/EHyRmJkv6SJEORBCQoKpaIgpgDQRQRi4woqFBoKaJS
YgGSBSPBQsAAmBBKUFFEokjOCJJEQDLIvvvrt2a9W+6OmzvY27v9dtWytzs9Mz2fuap76H6mO1Mg
WIyCAAIIIIAAAgggkCyBK5JVi0oIIIAAAggggAACToDgiV8EBBBAAAEEEEDAhwDBkw8sqiKAAAII
IIAAAgRP/A4ggAACCCCAAAI+BAiefGBRFQEEEEAAAQQQIHjidwABBBBAAAEEEPAhQPDkA4uqCCCA
AAIIIIAAwRO/AwgggAACCCCAgA8BgicfWFRFAAEEEEAAAQQInvgdQAABBBBAAAEEfAgQPPnAoioC
CCCAAAIIIEDwxO8AAggggAACCCDgQ4DgyQcWVRFAAAEEEEAAAYInfgcQQAABBBBAAAEfAgRPPrCo
igACCCCAAAIIEDzxO4AAAggggAACCPgQIHjygUVVBBBAAAEEEECA4InfAQQQQAABBBBAwIcAwZMP
LKoigAACCCCAAAIET/wOIIAAAggggAACPgQInnxgURUBBBBAAAEEEMiSWoJ169bZt99+a2vXrrXD
hw+7w5UqVcr0uvbaa61Ro0apPUW63X/RokW2d+9ea9GiheXLly/dXgcNRwABBBBAAIH/BDIFguW/
j8n/6cyZMzZq1CibNm2aeYfIlSuXZcuWLRRE6WjVqlWzrl27WoMGDZJ/8AxSs1u3brZkyRKbMWOG
lSlTJoNcFZeBAAIIIIBAbAukqOfp7Nmz1rFjR9u4caNdc8011rZtW2vWrJnlyZPHaR47dsxWr15t
kyZNslWrVlmPHj1s+PDhMd0LFdu/Zlw9AggggAACGUcgRTlP6m1S4FSjRg1799137Y477ggFTqJR
EKXhOgVPTzzxhJ0/f96ef/5527FjR8aR40oQQAABBBBAICYFfAdPGqJ77733HJYCohw5ciQJp+Dp
xhtvNPVGzZw5M8m6bEQAAQQQQAABBKJdwHfwpAToo0ePWu7cua18+fLJur5WrVq5ehrKoyCAAAII
IIAAAulZwHfO06lTp9z1amjuiiuSF3vVqVPHJY5nyZLFDeEltJ8Cq19//dXlSm3dutUqVKhgtWrV
svr161vlypWTNNYQ4vTp092w4J9//unaVbhwYZek3qZNGytWrNgF+//111/22WefuaFHPRWocujQ
IZszZ4798ccf1qRJE7v++utD++3evdsWLlzonirUk4W6Fj1RqOFJnUOfL1aU/6V2qr2nT5+2//3v
fy6R/MEHH3THutj+bEcAAQQQQACBtBfw/bSd8peaNm3q/vgrEChXrlyqr2LChAmml0rRokVd4LRl
yxbbt2+fZcqUyfr06WMPP/xwgucZPHiwffrppy5gUsB11VVXmQK8bdu22YEDB9zTf+PGjbOaNWvG
219TLLRv3946dOhgPXv2tKlTp7qnB/UUoUrv3r2tXbt27udvvvnGdJ4TJ064YUo9QajhS7XxyJEj
VqJECXvjjTesYsWKrr73j/e0nZzmzp1r77//vuXMmdMqVark2rtp0yb7559/3Hf9+/d3uWPevrwj
gAACCCCAQJQKBIMA3yWY6xSoW7du4J577gls2LDB9/5xd3jhhRfcse67775AMBiJuymwefPmwL33
3uu2jx07Nt42fQgmq7ttwbyqwM6dO+Nt//fffwOzZ88OBHuVAjfddFMgONQYb3uw98jtO2LEiEAw
cHI/t2zZMvD2228Hvv7660AwcHP1x48f77YF87YC33//fSD4pGHoOMHeo8CYMWNC+wZ7s0Lb9ENw
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
sGXPQpAAAAAASUVORK5CYII=

------MultipartBoundary--hLXCg58VmOUhCLwQaH490C7Jb0LYqV2sbGnXH2cWYK----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://www.django-rest-framework.org/img/ordering-filter.png

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
1LcqpNhHALR+mO3Hp6WO/BtEQICA9m3vLAT/qr8A75sA4dhNn+MAAAGdaVRYdFhNTDpjb20uYWRv
YmUueG1wAAAAAAA8eDp4bXBtZXRhIHhtbG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4OnhtcHRrPSJY
TVAgQ29yZSA1LjQuMCI+CiAgIDxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcv
MTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+CiAgICAgIDxyZGY6RGVzY3JpcHRpb24gcmRmOmFi
b3V0PSIiCiAgICAgICAgICAgIHhtbG5zOmV4aWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20vZXhpZi8x
LjAvIj4KICAgICAgICAgPGV4aWY6UGl4ZWxYRGltZW5zaW9uPjU5MjwvZXhpZjpQaXhlbFhEaW1l
bnNpb24+CiAgICAgICAgIDxleGlmOlBpeGVsWURpbWVuc2lvbj4yNDA8L2V4aWY6UGl4ZWxZRGlt
ZW5zaW9uPgogICAgICA8L3JkZjpEZXNjcmlwdGlvbj4KICAgPC9yZGY6UkRGPgo8L3g6eG1wbWV0
YT4KUslEdgAAOptJREFUeAHtnQeYFFX2tw855wySRoIgIkFgFZW0sigqqAuCERMi5oDhb15c46fo
KmZQUAwoKxJEFFYBIyZEkCAZBCRIzumr32Vrtqfp6Z7uCR3mPc/TdFfVje+d56kf55y6VeCQZ4ZB
AAIQgAAEIAABCGSZQMEsl6QgBCAAAQhAAAIQgIAjgIDiDwECEIAABCAAAQhESQABFSUwikMAAhCA
AAQgAAEEFH8DEIAABCAAAQhAIEoCCKgogVEcAhCAAAQgAAEIIKD4G4AABCAAAQhAAAJREkBARQmM
4hCAAAQgAAEIQAABxd8ABCAAAQhAAAIQiJIAAipKYBSHAAQgAAEIQAACCCj+BiAAAQhAAAIQgECU
BBBQUQKjOAQgAAEIQAACEEBA8TcAAQhAAAIQgAAEoiSAgIoSGMUhAAEIQAACEIAAAoq/AQhAAAIQ
gAAEIBAlAQRUlMAoDgEIQAACEIAABBBQ/A1AAAIQgAAEIACBKAkgoKIERnEIQAACEIAABCCAgOJv
AAIQgAAEIAABCERJAAEVJTCKQwACEIAABCAAAQQUfwMQgAAEIAABCEAgSgIIqCiBURwCEIAABCAA
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
JoCACibCMQQgAAEIQAACEIhAAAEVARCXIQABCEAAAhCAQDABBFQwEY4hAAEIQAACEIBABAIIqAiA
uAwBCEAAAhCAAASCCSCggolwDAEIQAACEIAABCIQQEBFAMRlCEAAAhCAAAQgEEwAARVMhGMIQAAC
EIAABCAQgUCBQ55FKJPh8pIlSywtLS3DOQ4gAAEIQAACEIBAshKIRdvggUrW1WbcEIAABCAAAQjE
jQACKm7o6RgCEIAABCAAgWQlgIBK1pVj3BCAAAQgAAEIxI0AAipu6OkYAhCAAAQgAIFkJYCAStaV
Y9wQgAAEIAABCMSNAAIqbujpGAIQgAAEIACBZCWAgErWlWPcEIAABCAAAQjEjQACKm7o6RgCEIAA
BCAAgWQlgIBK1pVj3BCAAAQgAAEIxI0AAipu6OkYAhCAAAQgAIFkJYCAStaVY9wQgAAEIAABCMSN
AAIqbujpGAIQgAAEIACBZCWAgErWlWPcEIAABCAAAQjEjQACKm7o6RgCEIAABCAAgWQlgIBKwpW7
7bbbbMaMGUk18t9//9169+5t+/btcx/9Xr16dVLNgcFCAAIQgAAEfAIIKJ9EEn0fOnTI9ElWK1y4
sN16661WoUKFZJ0C44YABCAAgXxOoHBez3/r1q02ePBgu//++6106dKu+19//dU++OADu/vuu233
7t326quv2vfff+9EQpMmTezqq69Ov9muXLnShg8fbkuXLrX69etbr169rGnTprZhwwZ78skn7c47
77SXX37ZypYta3379nV9DRw40NVZsWKFq3PttddalSpVXN9qZ8SIEbZ48WIrWLCgtWrVygYMGGDF
ihWzoUOH2gknnGAzZ860n376yapWrWo333yz/fDDDzZx4kTbuXOndenSxS666KJ0jFOnTnXXNM/m
zZvb5Zdfnj7P9EJR/Ni2bZvjMWfOHCtSpIidc845R9QO1+fkyZNt3LhxtnnzZqtRo4ZdeOGF1rJl
S9eGxv/aa6/ZrFmz7ODBg26u/fr1sxIlSrjrmbXrr2E4rvPmzbM333zTxPyoo46yM844I33c+/fv
t/fff9/S0tKcN0p/D+Ha2rFjh1u/2bNnu3W95JJL7O2337ZBgwZZpUqV0tvlBwQgAAEIQCCvCOS5
B+rAgQO2fPly07dvu3btslWrVrnD9957z12/6667nKDSNQkmmUTAvffea82aNbP77rvPfT/22GO2
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
AhCAAAQgAIEUI4CASrEFZToQgAAEIAABCOQ+AQRU7jOmBwhAAAIQgAAEUowAAirFFpTpQAACEIAA
BCCQ+wQQULnPmB4gAAEIQAACEEgxAiktoKZPn26DBg1yS7Zv3z7r3bu3rV69OkeXcMyYMfb444/n
aJt50dhtt91mM2bMcF099thjpnlgEIAABCAAAQhkjUDhrBVLzlJNmza1ChUq5OrgDx06ZPokmwWO
u2fPnla6dOlkmwLjhQAEIAABCMSNQFwE1J49e2zEiBH23XffuRt3x44drUePHg7C0KFD7YQTTrCZ
M2faTz/9ZFWrVrWbb77ZfvjhB5s4caLt3LnTunTpYhdddJErr7Zee+0119bu3butTp061r9/f6tf
v74tX77cpk2bZscdd1yOAf7ggw/s888/tz///NPatm17hEBbuXKlDR8+3JYuXerG0KtXL5OQk02e
PNnGjRtnmzdvtho1atiFF15oLVu2dNc0L81j1qxZdvDgQcegX79+VqJECXc9s3a3bt1qgwcPtoED
B7p+V6xY4fq99tprrUqVKq7utm3b7NVXX7U5c+ZYkSJF7JxzznHn/X+++uorq127ttWqVcvEX/P6
9ttvHf9SpUq5cbZr184V37Fjh+tn9uzZVrZsWbvkkkvs7bffdp6+SpUq+U3yDQEIQAACEEhpAnEJ
4T311FO2YcMGd9Pt06ePffTRRzZp0iQHeu3ate5mn5aWZnfffbcTEPfdd58TUBJGumFLhCxYsMCV
f+utt2zevHlOQDz00ENWrlw5e/3119217du352jITv2OHTvWzj33XLv33nutaNGi6eNWhxJGOt+s
WTPTmPWt8NiaNWvst99+c+OSaHrkkUesVatWJg4SgDKVW7VqlV133XU2YMAAN79hw4a5a+HaPXDg
gBOKEkhnn3223XrrraZ5i4tvDz/8sOMtIXr11VfblClTTJx9W7dunW3ZssUd6rwEoATVnXfeaU2a
NLHnn38+fZyPPvpoeltaO18s7t+/32+ObwhAAAIQgEDKE8hzD9TixYtt/vz59uKLL6Z7V0R55MiR
1q1bNwe8TZs21r17d/e7a9euNmTIEOdlkTdKJhGjG33jxo2tePHiTlS1bt3aXTvllFNcW+4gh/8Z
P368STR06NDBtdyoUSNbtmxZei8TJkyw5s2b23nnnefOSQRKFE2dOtUaNmzovD8SVfLc9O3b181/
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

------MultipartBoundary--hLXCg58VmOUhCLwQaH490C7Jb0LYqV2sbGnXH2cWYK------
